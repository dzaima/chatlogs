{"@_discord_316300582425985024:t2bot.io":"Cpt Kirk","@meccine:matrix.org":"meccine","@_discord_636104124957458433:t2bot.io":"andover77.","@_discord_348146203835367426:t2bot.io":"thothxv","@_discord_262780141485293569:t2bot.io":"attinat","@_discord_651823008347979793:t2bot.io":"a.brudz","@_discord_506589628418097152:t2bot.io":"silas","@_discord_199111346258837504:t2bot.io":"athas","@_discord_480246914441412608:t2bot.io":"avifs","@_discord_304605065715384321:t2bot.io":"fiuzeri","@_discord_156021301654454272:t2bot.io":"Olivia","@_discord_234196445576691713:t2bot.io":"cswine","@_discord_1140710589165994105:t2bot.io":"ktye_67449","@_discord_870115701279584326:t2bot.io":"discodoug","@_discord_828684654454112286:t2bot.io":"bobterryo","@jrkpthinks:matrix.org":"jrkpthinks","@vylsaz:matrix.org":"vylsaz","@_discord_918522255913398304:t2bot.io":"poorhiram","@arlyle:matrix.org":"arlyle","@subsetpark:matrix.org":"Zach Smith (subsetpark)","@_discord_595317473247756288:t2bot.io":"alexshroyer","@_discord_697013244996354108:t2bot.io":"sohangchopra","@_discord_624974820840308737:t2bot.io":"coltim","@_discord_bot:t2bot.io":"Discord Bridge","@_discord_171360495385706496:t2bot.io":"parker","@_discord_724421839924756480:t2bot.io":"_elcaro_","@_discord_481224913508630531:t2bot.io":"taorres","@_discord_671689100331319316:t2bot.io":"brian_e","@_discord_718551566336000090:t2bot.io":"jam3943598","@mlochbaum:matrix.org":"Marshall","@_discord_160673472530350080:t2bot.io":"ludvikgalois","@_discord_239772388747640841:t2bot.io":"krftdnr","@loke:dhsdevelopments.com":"loke","@_discord_846111898888831016:t2bot.io":"i__love__murder","@squacker:matrix.org":"squacker","@_discord_165871236835049472:t2bot.io":"ohaitch","@_discord_235835720416100355:t2bot.io":"jacktheegg","@_discord_125549206139174912:t2bot.io":"rak1507","@ovf:beeper.com":"ovf","@coltim:matrix.org":"coltim","@hermetian:matrix.org":"hermetian","@_discord_898723608426340373:t2bot.io":"andrewcraig_","@_discord_201716976924622849:t2bot.io":"twobular","@dzaima:matrix.org":"dzaima","@_discord_450835234200617001:t2bot.io":"darrylkid","@_discord_1262574255451668500:t2bot.io":"busy_hamster_48992","@_discord_356107472269869058:t2bot.io":"Kamila","@_discord_80888203774533632:t2bot.io":"at","@_discord_840951499416010763:t2bot.io":"tixonochek","@_discord_355030377447948289:t2bot.io":"spacequacker","@_discord_1054270572332326952:t2bot.io":"d4rl1ng_k1tty","@_discord_1002703080321728512:t2bot.io":"tonyc1","@_discord_136899955574046721:t2bot.io":"dzaima (discord)","@_discord_687763954050793501:t2bot.io":"raulmiller","@_discord_768182477449592832:t2bot.io":"miku.rb","@_discord_604614910030118912:t2bot.io":"rubenverg","@anaseto:matrix.org":"anaseto","@_discord_180028909969080320:t2bot.io":"icen","@_discord_480607161576062976:t2bot.io":"gamingking2436"}
{"state_key":"","origin_server_ts":1722098914818,"event_id":"$m4VlMtCETfTDldt4eNiSsYEKHY33H4a4bbEgZOGaGYs","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.create","content":{"room_version":"10","creator":"@dzaima:matrix.org"}}
{"state_key":"@dzaima:matrix.org","origin_server_ts":1722098914987,"event_id":"$h6XAjaxMZpUKEZOnvctmNZEKBB9tUHm4uUAeEUTrnho","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://matrix.org/oNcqjrEhZTRyACebgawKCCKN","displayname":"dzaima","membership":"join"}}
{"state_key":"","origin_server_ts":1722098915356,"event_id":"$mcRpyi79FqLL0ia09MZ2V3YuVA2PWgTx38hLPauqveQ","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.power_levels","content":{"m.call.invite":50,"events_default":0,"kick":50,"users_default":0,"redact":50,"historical":100,"invite":50,"ban":50,"events":{"m.room.canonical_alias":50,"m.room.name":50,"m.room.server_acl":100,"m.room.tombstone":100,"m.room.avatar":50,"m.room.history_visibility":100,"m.room.power_levels":100,"m.room.encryption":100},"state_default":50,"users":{"@dzaima:matrix.org":100}}}
{"state_key":"","origin_server_ts":1722098915381,"event_id":"$MH2sJMhaz4li11-ZbQ7PkDxTk8K5EzJT5HNWX9ReA5w","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.canonical_alias","content":{"alias":"#array-language-development:matrix.org"}}
{"state_key":"","origin_server_ts":1722098915382,"event_id":"$HkxaQmva0GOhcvCkNGOiwDwsOjWYOh6BQSAvxfTMSFM","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.join_rules","content":{"join_rule":"public"}}
{"state_key":"","origin_server_ts":1722098915383,"event_id":"$sSy5RqUW1VE-cg9C0DTEpNqpJAUV2PbmLDxGp1jy8po","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.history_visibility","content":{"history_visibility":"shared"}}
{"state_key":"","origin_server_ts":1722098915384,"event_id":"$jrQucco087g_CU3QiiuwmRGYla_VGyZK2GWkMb6iLpg","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.name","content":{"name":"Array language development"}}
{"state_key":"","origin_server_ts":1722098927565,"event_id":"$HgD5Ras-KPmgCA3BhD_plGc12zoW2UYEKnxpL9M9gE0","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","prev_content":{"history_visibility":"shared"},"type":"m.room.history_visibility","content":{"history_visibility":"world_readable"},"replaces_state":"$sSy5RqUW1VE-cg9C0DTEpNqpJAUV2PbmLDxGp1jy8po"}
{"state_key":"","origin_server_ts":1722098930055,"event_id":"$rl0cEPgJygjM9CtxXr2ixmJLH1i4GMrTVjxWK1rnnHY","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.guest_access","content":{"guest_access":"can_join"}}
{"state_key":"@_discord_bot:t2bot.io","origin_server_ts":1722099113931,"event_id":"$74NhTTg00BCVLh4R0W3rdshoS7YFzCVP37ZO2wgv3OE","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/aTigViGKAYBJkePFjPyLjCwQ","displayname":"Discord Bridge","membership":"invite"}}
{"state_key":"@_discord_bot:t2bot.io","origin_server_ts":1722099129022,"event_id":"$2oJ1rgFHiaemzDfMt8JlFgbwqr68V6TgYa0_U5oCH1Y","sender":"@_discord_bot:t2bot.io","user_id":"@_discord_bot:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/aTigViGKAYBJkePFjPyLjCwQ","displayname":"Discord Bridge","membership":"invite"},"type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/aTigViGKAYBJkePFjPyLjCwQ","displayname":"Discord Bridge","membership":"join"},"replaces_state":"$74NhTTg00BCVLh4R0W3rdshoS7YFzCVP37ZO2wgv3OE"}
{"origin_server_ts":1722099166756,"event_id":"$VVY9zsD9DVf2ifSoDOToZN4w-ZgXbty-AlXOYL_pNv4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.mentions":{},"body":"!discord bridge 821509511977762827 1266798935662661643","msgtype":"m.text"}}
{"origin_server_ts":1722099183074,"event_id":"$yyhDPncOrZE_A4OPfQCtw-2MHF0vaOu_7ZEvGDlJm8Y","sender":"@_discord_bot:t2bot.io","user_id":"@_discord_bot:t2bot.io","type":"m.room.message","content":{"body":"I'm asking permission from the guild administrators to make this bridge.","msgtype":"m.notice"}}
{"origin_server_ts":1722099222650,"event_id":"$SOYtMHWDPYqv_mZXONVpLwB86LWCgagR5MtEEAMjuM8","sender":"@_discord_bot:t2bot.io","user_id":"@_discord_bot:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I have bridged this room to your channel","msgtype":"m.notice","formatted_body":"<p>I have bridged this room to your channel<\/p>\n"}}
{"state_key":"@squacker:matrix.org","origin_server_ts":1722099253956,"event_id":"$rYQHIrzs23dAzbl0f_x0-UkCI0b0rSk-K3u4pV2Z8FE","sender":"@squacker:matrix.org","user_id":"@squacker:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://matrix.org/OnDpDwuoIHRlVMCCbonFLpRV","displayname":"squacker","membership":"join"}}
{"state_key":"@_discord_624974820840308737:t2bot.io","origin_server_ts":1722099775239,"event_id":"$5JfNvE1aD7OST-6NL_hYs62wYqMfyUAEoe3j-Xtdh0U","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.member","content":{"displayname":"coltim","membership":"join"}}
{"origin_server_ts":1722099775880,"event_id":"$K0d41CitegmlMT38QTm0gV89ZHaN6b7ZJtcyj1v5DtQ","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"huzzah!","msgtype":"m.text","formatted_body":"huzzah!"}}
{"state_key":"@_discord_624974820840308737:t2bot.io","origin_server_ts":1722099997930,"event_id":"$-_2KjlSuI_FN_7tN36bIJKq2JY7_Hi9HiUmI9Q2V4Ss","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","prev_content":{"displayname":"coltim","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":3447003,"name":"Q-bie","position":10},{"color":0,"name":"@everyone","position":0}],"displayColor":9807270,"id":"624974820840308737","username":"coltim#0"},"avatar_url":"","displayname":"coltim","membership":"join"},"replaces_state":"$5JfNvE1aD7OST-6NL_hYs62wYqMfyUAEoe3j-Xtdh0U"}
{"state_key":"@coltim:matrix.org","origin_server_ts":1722100856836,"event_id":"$m-cRmmLwRdvCXG3FsrDRq3cjr_Tm-2tWsQHILYcSlCQ","sender":"@coltim:matrix.org","user_id":"@coltim:matrix.org","type":"m.room.member","content":{"displayname":"coltim","membership":"join"}}
{"state_key":"@anaseto:matrix.org","origin_server_ts":1722101538842,"event_id":"$NVQz7vw3SCmC1Ofdj0fc5VaUSthvHd4JkxxailmxVnU","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.member","content":{"displayname":"anaseto","membership":"join"}}
{"state_key":"@_discord_156021301654454272:t2bot.io","origin_server_ts":1722102468802,"event_id":"$xTp-m0Ri_NaPOBR7kjWgXRCnHocrIXn8xATOQT1IDaY","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/08e66f4a37508cf48948a09b0f73137f764e14d91745407076005314560","displayname":"rocketrace","membership":"join"}}
{"state_key":"@_discord_156021301654454272:t2bot.io","origin_server_ts":1722102469925,"event_id":"$IE9I8PKPoYjGWtVtBCeXvtISBe95STihyygY12u655Y","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/08e66f4a37508cf48948a09b0f73137f764e14d91745407076005314560","displayname":"rocketrace","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"156021301654454272","username":"rocketrace#0"},"avatar_url":"mxc://t2bot.io/08e66f4a37508cf48948a09b0f73137f764e14d91745407076005314560","displayname":"Olivia","membership":"join"},"replaces_state":"$xTp-m0Ri_NaPOBR7kjWgXRCnHocrIXn8xATOQT1IDaY"}
{"origin_server_ts":1722102469958,"event_id":"$DGwMtEgLsAhzvZyOWSaFSgvCWhnaF1G_e8eVSPbfEIg","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"language development","msgtype":"m.text","formatted_body":"language development"}}
{"state_key":"@_discord_846111898888831016:t2bot.io","origin_server_ts":1722104105288,"event_id":"$KjwsnVXzekqhdn1sFucnGwRwBO_ehH1gxywDDy6SR_8","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.member","content":{"displayname":"i__love__murder","membership":"join"}}
{"origin_server_ts":1722104106069,"event_id":"$FoL4n5ChA0glCG3K8j06WZlGzrPgwcwDeCbiZFaHjp4","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"who up developing they languages","msgtype":"m.text","formatted_body":"who up developing they languages"}}
{"state_key":"@_discord_846111898888831016:t2bot.io","origin_server_ts":1722104110628,"event_id":"$1XK-gQTUjz6qFIXdGG_miawBSIaFk7_j56YGdB_Fe1I","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","prev_content":{"displayname":"i__love__murder","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":0,"name":"@everyone","position":0}],"displayColor":9807270,"id":"846111898888831016","username":"i__love__murder#0"},"avatar_url":"","displayname":"i__love__murder","membership":"join"},"replaces_state":"$KjwsnVXzekqhdn1sFucnGwRwBO_ehH1gxywDDy6SR_8"}
{"state_key":"@_discord_604614910030118912:t2bot.io","origin_server_ts":1722104661765,"event_id":"$5FKFkF87VBCsOmPYQZAAuHiKB26jEjjbQBsaeK3Xrk4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/becdefc7b28ecefd58cd44dcec9e4cc9f2c484c81792550445009338368","displayname":"rubenverg","membership":"join"}}
{"origin_server_ts":1722104662315,"event_id":"$kl3dJUhtv7psxZDVUZC6owJD0f5yckzlTxhsEAEw17U","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"creation of this room makes me want to develop languages more often","msgtype":"m.text","formatted_body":"creation of this room makes me want to develop languages more often"}}
{"state_key":"@_discord_604614910030118912:t2bot.io","origin_server_ts":1722104662371,"event_id":"$L1u6dZ_GbwHojMzeNyMXFbgTHUbqSAoXVCKedpWA7A4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/becdefc7b28ecefd58cd44dcec9e4cc9f2c484c81792550445009338368","displayname":"rubenverg","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"604614910030118912","username":"rubenverg#0"},"avatar_url":"mxc://t2bot.io/becdefc7b28ecefd58cd44dcec9e4cc9f2c484c81792550445009338368","displayname":"rubenverg","membership":"join"},"replaces_state":"$5FKFkF87VBCsOmPYQZAAuHiKB26jEjjbQBsaeK3Xrk4"}
{"state_key":"@_discord_671689100331319316:t2bot.io","origin_server_ts":1722104663065,"event_id":"$rbIysL0fttNq-VUPi1eP-jgDysvvsKRl6kb8PYTRiQ8","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/d8e2e156ba93fbda6e9ddb8111657ab4560e1d7b1746541522523783168","displayname":"brian_e","membership":"join"}}
{"state_key":"@_discord_671689100331319316:t2bot.io","origin_server_ts":1722104663597,"event_id":"$C5FowErSkqFjUQwvj91rknolbmK7jnixB4C9GilpjCI","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/d8e2e156ba93fbda6e9ddb8111657ab4560e1d7b1746541522523783168","displayname":"brian_e","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"671689100331319316","username":"brian_e#0"},"avatar_url":"mxc://t2bot.io/d8e2e156ba93fbda6e9ddb8111657ab4560e1d7b1746541522523783168","displayname":"brian_e","membership":"join"},"replaces_state":"$rbIysL0fttNq-VUPi1eP-jgDysvvsKRl6kb8PYTRiQ8"}
{"origin_server_ts":1722104663936,"event_id":"$tTqpu6ay_I1nOfbSR2ROsyjFi86n_QMVRC3kAu61QPQ","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I thought about a weird error system where errors are simply incomplete functions. \nso for example, {a+b} is an error and a function since it returns itself as a function if unable to run.\n{1+a}(a=1) would return 2, though I'm very unsure of what the calling syntax would be. and to be clear, {1+a} here errors before being called, the calling is simply defining `a` inside the function's scope so it can re-evaluate.\n\ndivision by 0 would error and so the result of 4/0 is 4/0.","msgtype":"m.text","formatted_body":"I thought about a weird error system where errors are simply incomplete functions. <br>so for example, {a+b} is an error and a function since it returns itself as a function if unable to run.<br>{1+a}(a=1) would return 2, though I&#x27;m very unsure of what the calling syntax would be. and to be clear, {1+a} here errors before being called, the calling is simply defining <code>a<\/code> inside the function&#x27;s scope so it can re-evaluate.<br><br>division by 0 would error and so the result of 4/0 is 4/0."}}
{"origin_server_ts":1722104726059,"event_id":"$lXkWK3W149fdkVLevLgH3o3mW7k6owwJkL_G5glP40c","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$tTqpu6ay_I1nOfbSR2ROsyjFi86n_QMVRC3kAu61QPQ"}},"format":"org.matrix.custom.html","body":"excuse the lack of symbols, on my phone at the moment :)","msgtype":"m.text","formatted_body":"excuse the lack of symbols, on my phone at the moment :)"}}
{"state_key":"@_discord_136899955574046721:t2bot.io","origin_server_ts":1722104866688,"event_id":"$mNzgJHo8D6VVECGdVIbcNY9UUqYIH3n5u1eAOubwnic","sender":"@_discord_136899955574046721:t2bot.io","user_id":"@_discord_136899955574046721:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"Admin","position":20},{"color":0,"name":"Moderator","position":19},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"136899955574046721","username":"dzaima#0"},"avatar_url":"mxc://t2bot.io/292540630b16d1684e483a35b8921fa34b68fda8","displayname":"dzaima (discord)","membership":"join"}}
{"origin_server_ts":1722105023180,"event_id":"$ed2UllQfdeY0I26SkNGh4DbxijLIXnc1zU_JA54zd8k","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"hmm. in practice would that be similar to e.g. python where some error gets raised/thrown somewhere but instead of a textual description/halted execution instead you get back a pair containing the function/code that threw the error and whatever inputs were provided?","msgtype":"m.text","formatted_body":"hmm. in practice would that be similar to e.g. python where some error gets raised/thrown somewhere but instead of a textual description/halted execution instead you get back a pair containing the function/code that threw the error and whatever inputs were provided?"}}
{"state_key":"@mlochbaum:matrix.org","origin_server_ts":1722105108145,"event_id":"$s7GHm2dWK8gB1eljDgpkE5aO8MpNCMJzJ8FY4SUoSR4","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.member","content":{"displayname":"Marshall","membership":"join"}}
{"state_key":"@_discord_180028909969080320:t2bot.io","origin_server_ts":1722105133575,"event_id":"$ZUnLexSI7MMkv6ze0bVELB_bJ0ojbRk5qLsxKaotMb8","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/99f856ab87018ea223ea1ba8ff5c3f21e2d568c81796231392120537088","displayname":"icen","membership":"join"}}
{"origin_server_ts":1722105134212,"event_id":"$iHsbxn2F2ZS_aWDbYlp187fkX1KxqxGdy92Yn3HcsmY","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"If I add a new parameter to a function, and then don't update some place it's called, maybe my whole application ends up cascading into this enormous closure around this function that can't be called (because presumably it's an error to call a function on your error-as-partial-result?)\n\nThis seems like it might be confusing if you don't have some up-front checking that things will line up","msgtype":"m.text","formatted_body":"If I add a new parameter to a function, and then don&#x27;t update some place it&#x27;s called, maybe my whole application ends up cascading into this enormous closure around this function that can&#x27;t be called (because presumably it&#x27;s an error to call a function on your error-as-partial-result?)<br><br>This seems like it might be confusing if you don&#x27;t have some up-front checking that things will line up"}}
{"state_key":"@_discord_180028909969080320:t2bot.io","origin_server_ts":1722105138944,"event_id":"$nwa1DKiQpoKJxrJ0Vy_b6lVYXaa0eunjxGTPuGz06C8","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/99f856ab87018ea223ea1ba8ff5c3f21e2d568c81796231392120537088","displayname":"icen","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":15277667,"name":"BQNator","position":13},{"color":2123412,"name":"J-edi","position":11},{"color":3447003,"name":"Q-bie","position":10},{"color":0,"name":"@everyone","position":0}],"displayColor":15277667,"id":"180028909969080320","username":"icen#0"},"avatar_url":"mxc://t2bot.io/99f856ab87018ea223ea1ba8ff5c3f21e2d568c81796231392120537088","displayname":"icen","membership":"join"},"replaces_state":"$ZUnLexSI7MMkv6ze0bVELB_bJ0ojbRk5qLsxKaotMb8"}
{"origin_server_ts":1722106500621,"event_id":"$5SwX_oLijEeOc7nmLA0G7V94aFLdV9f-UXTsdLEuKf8","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$ed2UllQfdeY0I26SkNGh4DbxijLIXnc1zU_JA54zd8k"}},"format":"org.matrix.custom.html","body":"no, the function you get back will be partially executed. for example, {b+(1+a)}(a=1) gives {b+2}. I guess python would give [{a:1}, {b+(1+a)}] ?","msgtype":"m.text","formatted_body":"no, the function you get back will be partially executed. for example, {b+(1+a)}(a=1) gives {b+2}. I guess python would give [{a:1}, {b+(1+a)}] ?"}}
{"origin_server_ts":1722106558369,"event_id":"$-kPHoUf3UdDGJ213m3ElVvHqfwZsm0pegVwTGdhJmO4","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(i assumed right to left execution in that code snipet btw)","msgtype":"m.text","formatted_body":"(i assumed right to left execution in that code snipet btw)"}}
{"state_key":"@_discord_840951499416010763:t2bot.io","origin_server_ts":1722106756921,"event_id":"$waHRE9kb_BG9Lzmo_QZptzytvqVJc7xrpjKi-wNqZ7o","sender":"@_discord_840951499416010763:t2bot.io","user_id":"@_discord_840951499416010763:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"840951499416010763","username":"tixonochek#0"},"avatar_url":"mxc://t2bot.io/939802173c02107d83002949210e82e7677ec6a31817273512360935424","displayname":"tixonochek","membership":"join"}}
{"origin_server_ts":1722106774167,"event_id":"$BrEwOXc65Od3OLo2NzxvNhCftVAh7bL_RkhIlJ3Uo18","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Sure, but then I call another function that expects e.g. an int with this partial function, which will error, causing *another* partial application, and it all snowballs out from there","msgtype":"m.text","formatted_body":"Sure, but then I call another function that expects e.g. an int with this partial function, which will error, causing <em>another<\/em> partial application, and it all snowballs out from there"}}
{"origin_server_ts":1722107334759,"event_id":"$wlZ63LaQiSCrlueLeESx0SsYcLxAx6GK-KkdMb4KBkk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"can Identity Matrix (which presumably just takes a scalar `y` and makes an identity matrix `y`×`y`) be naturally extended to higher-dimension identity arrays with `1`s on the higher-rank-diagonal?","msgtype":"m.text","formatted_body":"can Identity Matrix (which presumably just takes a scalar <code>y<\/code> and makes an identity matrix <code>y<\/code>×<code>y<\/code>) be naturally extended to higher-dimension identity arrays with <code>1<\/code>s on the higher-rank-diagonal?"}}
{"origin_server_ts":1722107350565,"event_id":"$hFfeKi5wRYG0prdq-G5FUfNnwjlwg67zA0HdafDDVRI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"like `(1=≢⍤∪)¨⍳3⌿4` or whatever","msgtype":"m.text","formatted_body":"like <code>(1=≢⍤∪)¨⍳3⌿4<\/code> or whatever"}}
{"state_key":"@_discord_201716976924622849:t2bot.io","origin_server_ts":1722108784409,"event_id":"$EPx50fTlTDftXfVcviS1ExYwgEQ9h8Lf_GugmA5KLuA","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/e73f71efc45e1d6794be3772dd39fd973c338ad81739864899162472448","displayname":"twobular","membership":"join"}}
{"origin_server_ts":1722108785042,"event_id":"$l5D1ajslc1Zb1jwRPWUMEFD4QD-vbwIuyHUm3eyzglI","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"there are lots of ways to do that but an interesting question is what do you intend to use it for? in the world of tensors for example, there is no such thing as an identity tensor except in rank 2","msgtype":"m.text","formatted_body":"there are lots of ways to do that but an interesting question is what do you intend to use it for? in the world of tensors for example, there is no such thing as an identity tensor except in rank 2"}}
{"state_key":"@_discord_201716976924622849:t2bot.io","origin_server_ts":1722108787235,"event_id":"$cFr0XYELIrxfabsCwN9s2ZPiK6EQlZd-_CwRMtoolyQ","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/e73f71efc45e1d6794be3772dd39fd973c338ad81739864899162472448","displayname":"twobular","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":2123412,"name":"J-edi","position":11},{"color":15158332,"name":"nial-ist","position":9},{"color":0,"name":"@everyone","position":0}],"displayColor":9807270,"id":"201716976924622849","username":"twobular#0"},"avatar_url":"mxc://t2bot.io/e73f71efc45e1d6794be3772dd39fd973c338ad81739864899162472448","displayname":"twobular","membership":"join"},"replaces_state":"$EPx50fTlTDftXfVcviS1ExYwgEQ9h8Lf_GugmA5KLuA"}
{"origin_server_ts":1722108829402,"event_id":"$0vVXUorZp78HYjq9wyekILuEMD7vJFPIznmtIiZCoQQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"oh nothing in particular just was looking at the big table, saw \"Identity Matrix\" and wondered if an extension was possible","msgtype":"m.text","formatted_body":"oh nothing in particular just was looking at the big table, saw &quot;Identity Matrix&quot; and wondered if an extension was possible"}}
{"origin_server_ts":1722108849371,"event_id":"$SFi2KdNT60Asqg4_mU07K-kHKMqCRlacyEE5aDJDyi4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'd assumed that it had mathematical significance but if you say it doesn't maybe the extension doesn't make sense","msgtype":"m.text","formatted_body":"I&#x27;d assumed that it had mathematical significance but if you say it doesn&#x27;t maybe the extension doesn&#x27;t make sense"}}
{"origin_server_ts":1722109231079,"event_id":"$JlpjudB0AdaIRLemukFcXpsZcZjh0akG0OZeNWUYlb0","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$BrEwOXc65Od3OLo2NzxvNhCftVAh7bL_RkhIlJ3Uo18"}},"format":"org.matrix.custom.html","body":"right. 1+{a+b} returns the function 1+{a+b} because it can't add int and func. when it snow balls, it will eventually return to the top of the program, where the error can hopefully be displayed","msgtype":"m.text","formatted_body":"right. 1+{a+b} returns the function 1+{a+b} because it can&#x27;t add int and func. when it snow balls, it will eventually return to the top of the program, where the error can hopefully be displayed"}}
{"origin_server_ts":1722109326457,"event_id":"$tTozkGcnNxmIas8FVhS3-MJXjW7E8y3Aw11MPBS6dJ4","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I can imagine the snowballing becoming unbareble for stuff like reductions, so maybe not a great  idea after all.","msgtype":"m.text","formatted_body":"I can imagine the snowballing becoming unbareble for stuff like reductions, so maybe not a great  idea after all."}}
{"state_key":"@_discord_165871236835049472:t2bot.io","origin_server_ts":1722109520812,"event_id":"$0YArWcxmy6i9GW94_lG7KVWELRyhGKGJQ0h1_RoQmuc","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/559f136cd4b353ca0d088973e944fb35ec28a67e1746552091226144768","displayname":"ohaitch","membership":"join"}}
{"origin_server_ts":1722109521456,"event_id":"$lrT_QiDbhPFTtPt1ORYisGXGOs2VnmzWecKxrMM1W4I","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"h e l p f u l l y","msgtype":"m.text","formatted_body":"h e l p f u l l y"}}
{"state_key":"@_discord_165871236835049472:t2bot.io","origin_server_ts":1722109536733,"event_id":"$sFeBi_BnzNvDF6b-qKFRSmj3e5ldol2oMeaUUokmkNM","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/559f136cd4b353ca0d088973e944fb35ec28a67e1746552091226144768","displayname":"ohaitch","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"165871236835049472","username":"ohaitch#0"},"avatar_url":"mxc://t2bot.io/559f136cd4b353ca0d088973e944fb35ec28a67e1746552091226144768","displayname":"ohaitch","membership":"join"},"replaces_state":"$0YArWcxmy6i9GW94_lG7KVWELRyhGKGJQ0h1_RoQmuc"}
{"origin_server_ts":1722109541651,"event_id":"$s-Ytko6zKX3fdburAnIC-58-PP1avi03JFqJkZ2dL_g","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"wait you said \"hopefully\" my bad","msgtype":"m.text","formatted_body":"wait you said &quot;hopefully&quot; my bad"}}
{"origin_server_ts":1722109547666,"event_id":"$Cl0Lg6i7K-Hb2_76lcaVaRJCE4O278CIgnDOammltJw","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.\n\nthere is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique\n\n```   <\"2 (_1^A.) ::0:\"1 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0| 0 0 1| 0 1 0|\n|0  0 1| 0 0 0|_1 0 0|\n|0 _1 0|_1 0 0| 0 0 0|\n+------+------+------+```","msgtype":"m.text","formatted_body":"the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.<br><br>there is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique<br><br><pre><code>   &lt;&quot;2 (_1^A.) ::0:&quot;1 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0| 0 0 1| 0 1 0|\n|0  0 1| 0 0 0|_1 0 0|\n|0 _1 0|_1 0 0| 0 0 0|\n+------+------+------+<\/code><\/pre>"}}
{"origin_server_ts":1722109579986,"event_id":"$YWCizX1ClyJq55oY2nlKgdR552JFDBKkx9UG6I-LNeU","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the error being displayed in a more helpful form than \"here's the entire source code of your program, there's an error somewhere in it have fun\" does seem like the trick","msgtype":"m.text","formatted_body":"the error being displayed in a more helpful form than &quot;here&#x27;s the entire source code of your program, there&#x27;s an error somewhere in it have fun&quot; does seem like the trick"}}
{"origin_server_ts":1722109603320,"event_id":"$ilZcLa7R8XVGygbt-q1B-VTpNeWaA_u9xZ-ciOnMyHY","redacted_because":{"room_id":"!WpdazzauuDxyGNAiCr:matrix.org","origin_server_ts":1722109730936,"event_id":"$v7O_F6eYgrxHvh8zE0seVmP3VrcGdR46g2Y6ZcvKPk0","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","unsigned":{},"redacts":"$ilZcLa7R8XVGygbt-q1B-VTpNeWaA_u9xZ-ciOnMyHY","type":"m.room.redaction","content":{"redacts":"$ilZcLa7R8XVGygbt-q1B-VTpNeWaA_u9xZ-ciOnMyHY"}},"sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{}}
{"state_key":"","origin_server_ts":1722109658198,"event_id":"$Jh98JudHb1jte-l21Z9ynSzV9K2GjrAA-F0o_3Bg4L8","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","prev_content":{"m.call.invite":50,"events_default":0,"kick":50,"users_default":0,"redact":50,"historical":100,"invite":50,"ban":50,"events":{"m.room.canonical_alias":50,"m.room.name":50,"m.room.server_acl":100,"m.room.tombstone":100,"m.room.avatar":50,"m.room.history_visibility":100,"m.room.power_levels":100,"m.room.encryption":100},"state_default":50,"users":{"@dzaima:matrix.org":100}},"type":"m.room.power_levels","content":{"m.call.invite":50,"events_default":0,"kick":50,"users_default":0,"redact":50,"historical":100,"invite":50,"ban":50,"events":{"m.room.canonical_alias":50,"m.room.name":50,"m.room.server_acl":100,"m.room.tombstone":100,"m.room.avatar":50,"m.room.history_visibility":100,"m.room.power_levels":100,"m.room.encryption":100},"state_default":50,"users":{"@dzaima:matrix.org":100,"@mlochbaum:matrix.org":50}},"replaces_state":"$mcRpyi79FqLL0ia09MZ2V3YuVA2PWgTx38hLPauqveQ"}
{"origin_server_ts":1722109675058,"event_id":"$hw7QNn-OhpOCGfrY7zH14jNQVLdq-Nq9hhtfhxtpng8","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.\n\nthere is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique\n\n```   <\"2 C.!.2 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0|0 0 _1| 0 1 0|\n|0  0 1|0 0  0|_1 0 0|\n|0 _1 0|1 0  0| 0 0 0|\n+------+------+------+```","msgtype":"m.text","formatted_body":"the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.<br><br>there is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique<br><br><pre><code>   &lt;&quot;2 C.!.2 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0|0 0 _1| 0 1 0|\n|0  0 1|0 0  0|_1 0 0|\n|0 _1 0|1 0  0| 0 0 0|\n+------+------+------+<\/code><\/pre>"},"m.relates_to":{"event_id":"$Cl0Lg6i7K-Hb2_76lcaVaRJCE4O278CIgnDOammltJw","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.\n\nthere is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique\n\n```   <\"2 C.!.2 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0|0 0 _1| 0 1 0|\n|0  0 1|0 0  0|_1 0 0|\n|0 _1 0|1 0  0| 0 0 0|\n+------+------+------+```","msgtype":"m.text","formatted_body":"* the identity matrix is so called because it is a multiplicative identity among matrices. but there is no multiplication of, say, rank 3 tensors.<br><br>there is a property called isotropy which tensors can have regardless of rank, which the identity satisfies more or less uniquely in rank 2. in rank 3 there is also a unique solution and it is the levi-civita tensor (below). in rank 4+ it is not unique<br><br><pre><code>   &lt;&quot;2 C.!.2 (#:i.) 3 3 3\n+------+------+------+\n|0  0 0|0 0 _1| 0 1 0|\n|0  0 1|0 0  0|_1 0 0|\n|0 _1 0|1 0  0| 0 0 0|\n+------+------+------+<\/code><\/pre>"}}
{"origin_server_ts":1722109730936,"event_id":"$v7O_F6eYgrxHvh8zE0seVmP3VrcGdR46g2Y6ZcvKPk0","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","redacts":"$ilZcLa7R8XVGygbt-q1B-VTpNeWaA_u9xZ-ciOnMyHY","type":"m.room.redaction","content":{"redacts":"$ilZcLa7R8XVGygbt-q1B-VTpNeWaA_u9xZ-ciOnMyHY"}}
{"origin_server_ts":1722111144459,"event_id":"$7R-SKg_1nLuSqN5ZIHWbPUxrbBkJbA2k0flUz4Y_lts","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$hw7QNn-OhpOCGfrY7zH14jNQVLdq-Nq9hhtfhxtpng8"}},"format":"org.matrix.custom.html","body":"so the result of APL inner product on 3-arrays is mathematically meaningless?","msgtype":"m.text","formatted_body":"so the result of APL inner product on 3-arrays is mathematically meaningless?"}}
{"origin_server_ts":1722111181430,"event_id":"$6R2tUI43tXnxeFjs93lgp7YNXzrIDcM2yRX7nzBnl7o","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I guess the result is 4D so it must be something different","msgtype":"m.text","formatted_body":"I guess the result is 4D so it must be something different"}}
{"origin_server_ts":1722111191786,"event_id":"$bxzsoKP25bUCictMmuTCXS3LQXc-jRMlFAC7j5dMev8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and of course identity can't make sense if the result has more dimensiond","msgtype":"m.text","formatted_body":"and of course identity can&#x27;t make sense if the result has more dimensiond"}}
{"origin_server_ts":1722111211692,"event_id":"$Hovtc1Ihnlezw9ohAll6bpUll1Lzo4ZZljqbh6_ebMc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"and of course identity can't make sense if the result has more dimensions","msgtype":"m.text","formatted_body":"and of course identity can&#x27;t make sense if the result has more dimensions"},"m.relates_to":{"event_id":"$bxzsoKP25bUCictMmuTCXS3LQXc-jRMlFAC7j5dMev8","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* and of course identity can't make sense if the result has more dimensions","msgtype":"m.text","formatted_body":"* and of course identity can&#x27;t make sense if the result has more dimensions"}}
{"origin_server_ts":1722111500094,"event_id":"$_YFGrp9TxJufcRRjMznPsrnb96zONp3GsWy90mFZKnI","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah by multiplication i mean something that takes two arrays of shape `n,n,n` and returns one of shape `n,n,n`","msgtype":"m.text","formatted_body":"yeah by multiplication i mean something that takes two arrays of shape <code>n,n,n<\/code> and returns one of shape <code>n,n,n<\/code>"}}
{"origin_server_ts":1722111507365,"event_id":"$f_71vRm0plRIwWD8GK3Xmpoe5pIOrvrc8lxAd5CTQJE","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in the rank 3 case","msgtype":"m.text","formatted_body":"in the rank 3 case"}}
{"origin_server_ts":1722111619646,"event_id":"$C8yQ9oYacWdAYUUtv1xcIeLS1OmLiGHoC9po5PnG5jA","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"inner product is useful, it's how you combine tensors, but it's essentially running the shapes together and then picking two axes of the same length and contracting them together","msgtype":"m.text","formatted_body":"inner product is useful, it&#x27;s how you combine tensors, but it&#x27;s essentially running the shapes together and then picking two axes of the same length and contracting them together"}}
{"origin_server_ts":1722111722747,"event_id":"$25HdDUw3w37Q3d74fLrc98oXSuTliUnTUJ4T7aneO5A","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah okay i see","msgtype":"m.text","formatted_body":"yeah okay i see"}}
{"origin_server_ts":1722111724847,"event_id":"$1j_Tyoibx7FqiIIsRtBzt6w-ZSWel-navspcPBZvVE0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"thanks!","msgtype":"m.text","formatted_body":"thanks!"}}
{"state_key":"@_discord_595317473247756288:t2bot.io","origin_server_ts":1722111816636,"event_id":"$mvDHQExoPv-pz8XLWXCK-bU9El5gzQuTDY04wEXD-G4","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/01d18faafc4f15ced5781f0eb109e9e0c2aff1ec1748858382313324544","displayname":"alexshroyer","membership":"join"}}
{"origin_server_ts":1722111817304,"event_id":"$EO_f5GHJSNhQqfNUen8wQiDdELGAFtIHrwfI8JZUfK0","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I had a half-baked thought related to gradual typing - basically an imperative runtime feature that says \"`fix` the type of this value to such-and-such\". So you can build up a type procedurally and dynamically, then say \"ok that's enough the type is done now\" to limit how it could be used from that point on.\n\nNo idea how it would interact with control flow, but like I said, half-baked.\nExample in python syntax:\n```python\ndef foo(x, y):\n  x + y  # in python, int+int, str+str, and list+list are valid overloads for +\n\n# call the function to accumulate types:\n\nfoo(2, 3)            # foo returns type int\nfoo(\"hi\", \" world\")  # foo can now return a union type: int|str\nfix(foo)             # no more changes past this point, foo is \"fixed\".\nfoo([2],[3])         # type error for foo, even though [2]+[3] is valid\n```\n\nThe advantages of such a system:\n- no syntax\n- cleaner than assertion-based type tests\n- can have different type versions in different sub-trees of execution (maybe useful for mocking/testing)\nDisadvantages:\n- no syntax (have to evaluate the function to learn its type)\n- how to handle `fix` in a loop? 🤷","msgtype":"m.text","formatted_body":"I had a half-baked thought related to gradual typing - basically an imperative runtime feature that says &quot;<code>fix<\/code> the type of this value to such-and-such&quot;. So you can build up a type procedurally and dynamically, then say &quot;ok that&#x27;s enough the type is done now&quot; to limit how it could be used from that point on.<br><br>No idea how it would interact with control flow, but like I said, half-baked.<br>Example in python syntax:<br><pre><code class=\"language-python\">def foo(x, y):\n  x + y  # in python, int+int, str+str, and list+list are valid overloads for +\n\n# call the function to accumulate types:\n\nfoo(2, 3)            # foo returns type int\nfoo(&quot;hi&quot;, &quot; world&quot;)  # foo can now return a union type: int|str\nfix(foo)             # no more changes past this point, foo is &quot;fixed&quot;.\nfoo([2],[3])         # type error for foo, even though [2]+[3] is valid<\/code><\/pre><br><br>The advantages of such a system:<br>- no syntax<br>- cleaner than assertion-based type tests<br>- can have different type versions in different sub-trees of execution (maybe useful for mocking/testing)<br>Disadvantages:<br>- no syntax (have to evaluate the function to learn its type)<br>- how to handle <code>fix<\/code> in a loop? 🤷"}}
{"state_key":"@_discord_595317473247756288:t2bot.io","origin_server_ts":1722111817315,"event_id":"$qDx3KL_G9B083_qgu-dh8SwwK3bMQ6SF13cgDIsmA2Y","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/01d18faafc4f15ced5781f0eb109e9e0c2aff1ec1748858382313324544","displayname":"alexshroyer","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":9807270,"id":"595317473247756288","username":"alexshroyer#0"},"avatar_url":"mxc://t2bot.io/01d18faafc4f15ced5781f0eb109e9e0c2aff1ec1748858382313324544","displayname":"alexshroyer","membership":"join"},"replaces_state":"$mvDHQExoPv-pz8XLWXCK-bU9El5gzQuTDY04wEXD-G4"}
{"origin_server_ts":1722112247892,"event_id":"$SWDvZuI5kgCppoEP1WBUo8jBa4WsGwyFs-2_U2CKrts","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"One thing that this makes awkward is that you now need forward declarations. Maybe one thing would be to flip it around, and have a `weaken()` function that allows errors to weaken the input types, instead of having some places fixed.\n\nThat way you'd have a few 'canonical' usages of a type and otherwise it would seem like it was a normal, ahead-of-time fixed type","msgtype":"m.text","formatted_body":"One thing that this makes awkward is that you now need forward declarations. Maybe one thing would be to flip it around, and have a <code>weaken()<\/code> function that allows errors to weaken the input types, instead of having some places fixed.<br><br>That way you&#x27;d have a few &#x27;canonical&#x27; usages of a type and otherwise it would seem like it was a normal, ahead-of-time fixed type"}}
{"state_key":"@subsetpark:matrix.org","origin_server_ts":1722113531141,"event_id":"$USd5kjqa3obfpQdw-Y7Inebo1lhYpSvNhhGaVrtKtVg","sender":"@subsetpark:matrix.org","user_id":"@subsetpark:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://matrix.org/aoNwZrSfsJKygErwjsKElqtI","displayname":"Zach Smith (subsetpark)","membership":"join"}}
{"origin_server_ts":1722116972957,"event_id":"$StS2teq20ZLJ5wpQy_rOJH28Rsl4Q84cRf4KcQ5CEXo","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$EO_f5GHJSNhQqfNUen8wQiDdELGAFtIHrwfI8JZUfK0"}},"format":"org.matrix.custom.html","body":"In real world use cases it is often difficult to provide witnesses for fix to observe. In particular when working with generic types.","msgtype":"m.text","formatted_body":"In real world use cases it is often difficult to provide witnesses for fix to observe. In particular when working with generic types."}}
{"origin_server_ts":1722117012217,"event_id":"$Lrsc7tvVcqpZFCLla5KPSzDVUTZBBkjhi6-g4BVw_9U","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and of course, punting types into the dynamic runtime isn't always ideal","msgtype":"m.text","formatted_body":"and of course, punting types into the dynamic runtime isn&#x27;t always ideal"}}
{"origin_server_ts":1722121340605,"event_id":"$Ug0Zbit_sDtYDgARTdJ2o3MWo-ZUBKlG2Q1YhcN8egM","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I did say \"half-baked\" after all.","msgtype":"m.text","formatted_body":"I did say &quot;half-baked&quot; after all."}}
{"state_key":"@_discord_316300582425985024:t2bot.io","origin_server_ts":1722123897254,"event_id":"$9hZGk2Adg11LkzXHL9vXnDuZta25ZyvojXwvdOQREq0","sender":"@_discord_316300582425985024:t2bot.io","user_id":"@_discord_316300582425985024:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"316300582425985024","username":"cptjimkirk#0"},"avatar_url":"mxc://t2bot.io/1143e874a2cd573a1b08840f38f23efbd854b3b61727764961159020544","displayname":"cptjimkirk","membership":"join"}}
{"state_key":"@_discord_870115701279584326:t2bot.io","origin_server_ts":1722128551157,"event_id":"$1aweIHshkhpYAfpLBJiF18gzlev_uwmia77fffNYe_I","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"870115701279584326","username":"discodoug#0"},"avatar_url":"","displayname":"discodoug","membership":"join"}}
{"origin_server_ts":1722132188172,"event_id":"$2DA3hXiFU5Jb6T6eXohx2ivxmoBY0wk0irzqOyDGqBI","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"has anyone come up with good syntax for an array language with static types","msgtype":"m.text","formatted_body":"has anyone come up with good syntax for an array language with static types"}}
{"origin_server_ts":1722132214928,"event_id":"$dyQ2fZT7Qvpc6WMzxcx3M3_LJRVgeA2N4W9OtQuLIxA","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i desperately want to make a k-like that compiles to llvm","msgtype":"m.text","formatted_body":"i desperately want to make a k-like that compiles to llvm"}}
{"origin_server_ts":1722132289444,"event_id":"$IACsUfSBzC-v248x9c6Bj4Hl1nbXuFmSDBrCURFMkSY","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I explored a few ideas here: https://alexshroyer.com/posts/2024-06-21-Gradual-Types.html","msgtype":"m.text","formatted_body":"I explored a few ideas here: <a href=\"https://alexshroyer.com/posts/2024-06-21-Gradual-Types.html\">https://alexshroyer.com/posts/2024-06-21-Gradual-Types.html<\/a>"}}
{"origin_server_ts":1722132291445,"event_id":"$Oypwea8qNPkGfWOBmfLFdpzaeEFOAFrurhxoAPwGIm0","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"im thinking of maybe just doing ml let statements but with k style operators","msgtype":"m.text","formatted_body":"im thinking of maybe just doing ml let statements but with k style operators"}}
{"origin_server_ts":1722132458843,"event_id":"$w8dI3osrEAtnBUGLjwZwhHKYDcIggDJheluRv8T13Dg","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"How about Futhark?","msgtype":"m.text","formatted_body":"How about Futhark?"}}
{"origin_server_ts":1722132467190,"event_id":"$_3blLHTnqrNix2EMRlq4_zgp8f4TXMoPAmxPUfPMuk0","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"My current thoughts are roughly that putting the type annotations close to their values is better than having them far away, and maybe only annotating functions is sufficient. Everything else might be possible to infer.\n\nPlus if you stick with K's very limited type system (no user-defined types ever) then inference might be fast.","msgtype":"m.text","formatted_body":"My current thoughts are roughly that putting the type annotations close to their values is better than having them far away, and maybe only annotating functions is sufficient. Everything else might be possible to infer.<br><br>Plus if you stick with K&#x27;s very limited type system (no user-defined types ever) then inference might be fast."}}
{"origin_server_ts":1722132506750,"event_id":"$BjHKOS5VoMUS38WlC8gu7y-wKMRl8TtSQYKTgsgR_Qg","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"id like to have structs and shit","msgtype":"m.text","formatted_body":"id like to have structs and shit"}}
{"origin_server_ts":1722132547693,"event_id":"$wKIKZsCV_r2VyPS5rJHyjEB3oBbx-6mgMzH64z3aAKo","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"im not really smart enough to implement a type system like haskell but that's the ideal for me","msgtype":"m.text","formatted_body":"im not really smart enough to implement a type system like haskell but that&#x27;s the ideal for me"}}
{"origin_server_ts":1722132587229,"event_id":"$R4ne0YmlZAgbmIepf9phqWbM8qaheGacU3IllbgXsAc","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"after reading your article im thinking the medium like haskell does might be pretty with k like syntax","msgtype":"m.text","formatted_body":"after reading your article im thinking the medium like haskell does might be pretty with k like syntax"}}
{"origin_server_ts":1722132619358,"event_id":"$qO_xE1ftixu3n-EkmoDj4DliFJVpELsZIzIiOQQvxFc","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Type annotation immediately before function definition?","msgtype":"m.text","formatted_body":"Type annotation immediately before function definition?"}}
{"origin_server_ts":1722132633563,"event_id":"$WiiN77je5v2YrIUR8ypO7N92fMKC_QoYrnomtW3DtHI","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah, like just above any binding","msgtype":"m.text","formatted_body":"yeah, like just above any binding"}}
{"origin_server_ts":1722132643542,"event_id":"$xPNiZlxQE0Fn5ym-d2TMutJqm-fPtd-uuT5KNah4RI0","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"any gets","msgtype":"m.text","formatted_body":"any gets"}}
{"origin_server_ts":1722132649666,"event_id":"$B-iqFjEdYrxGcHLwkNIIX9QC2UF_p7Hy5gfaxuPtvlA","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"has a statement above with type gets (::)","msgtype":"m.text","formatted_body":"has a statement above with type gets (::)"}}
{"origin_server_ts":1722132676282,"event_id":"$wuU3ifZYPEDvJz5VO0iXSw_t3M67PBEypYeeXWqcHZI","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You could use the type system but with some sort of limited inference, just require as many annotations as you need to resolve things without backtracking for example.","msgtype":"m.text","formatted_body":"You could use the type system but with some sort of limited inference, just require as many annotations as you need to resolve things without backtracking for example."}}
{"origin_server_ts":1722132706107,"event_id":"$hE8VAuID5PP-5iqNbg5oti020XaBkNk1ByHcam08QKU","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"f :: Int -> Int -> Int\nf : {x+y}","msgtype":"m.text","formatted_body":"f :: Int -&gt; Int -&gt; Int<br>f : {x+y}"}}
{"origin_server_ts":1722132919529,"event_id":"$C20qPAwV7fDCedK4dSput6j9a3Jvv8XFy2K7XWDS0pQ","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You can also ease your way into it with \"magic comments\", so you get to reuse a lot of existing K code for testing, but pre-process it with your type checker. Might be less daunting than writing a K compiler and a typechecker simultaneously.\n```\n/ f :: Int -> Float -> Int\nf: {x + y}\n\n/ a :: List[int]\na: 2 3 4 \n```","msgtype":"m.text","formatted_body":"You can also ease your way into it with &quot;magic comments&quot;, so you get to reuse a lot of existing K code for testing, but pre-process it with your type checker. Might be less daunting than writing a K compiler and a typechecker simultaneously.<br><pre><code>/ f :: Int -&gt; Float -&gt; Int\nf: {x + y}\n\n/ a :: List[int]\na: 2 3 4 <\/code><\/pre>"}}
{"origin_server_ts":1722133216759,"event_id":"$6eeV_8FlBIzG54PyqLH7FL0LfmlqPSVt5L8KeIHwh8w","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"[specialk](http://beyondloom.com/tools/specialk.html#iO5-vlrA) does some whole-program analysis","msgtype":"m.text","formatted_body":"<a href=\"http://beyondloom.com/tools/specialk.html#iO5-vlrA\">specialk<\/a> does some whole-program analysis"}}
{"origin_server_ts":1722133541859,"event_id":"$C7oKuTFFygdjw1ek6IiEoRso5EFIwoVR65m5EQsSbRM","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"approximately not gonna work if you want any polymorphism though","msgtype":"m.text","formatted_body":"approximately not gonna work if you want any polymorphism though"}}
{"origin_server_ts":1722133571610,"event_id":"$vmhZ5wAmE6pGuT5nMSAkUSAbGS_cx1gSzoA-ocZHsks","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"though I suppose that's not possible anyway if you want to compile straight to llvm","msgtype":"m.text","formatted_body":"though I suppose that's not possible anyway if you want to compile straight to llvm"}}
{"state_key":"@_discord_316300582425985024:t2bot.io","origin_server_ts":1722133753214,"event_id":"$17z795jOyXUju7d6LTmvgDD1I4SI5oHbsUmTt999hEE","sender":"@_discord_316300582425985024:t2bot.io","user_id":"@_discord_316300582425985024:t2bot.io","prev_content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"316300582425985024","username":"cptjimkirk#0"},"avatar_url":"mxc://t2bot.io/1143e874a2cd573a1b08840f38f23efbd854b3b61727764961159020544","displayname":"cptjimkirk","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"316300582425985024","username":"cptjimkirk#0"},"avatar_url":"mxc://t2bot.io/1143e874a2cd573a1b08840f38f23efbd854b3b61727764961159020544","displayname":"Cpt Kirk","membership":"join"},"replaces_state":"$9hZGk2Adg11LkzXHL9vXnDuZta25ZyvojXwvdOQREq0"}
{"origin_server_ts":1722133998961,"event_id":"$5iPStUz-9xY8pbC_G_sanGF6hg4RhX2wosVbAH47nNE","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$2DA3hXiFU5Jb6T6eXohx2ivxmoBY0wk0irzqOyDGqBI"}},"format":"org.matrix.custom.html","body":"I can't endorse it as I haven't exercised it but ktye_67449 (@_discord_1140710589165994105:t2bot.io) has this: https://github.com/ktye/i/tree/master/kx and has done other experiments compiling K to other languages.","msgtype":"m.text","formatted_body":"I can&#x27;t endorse it as I haven&#x27;t exercised it but <a href=\"https://matrix.to/#/@_discord_1140710589165994105:t2bot.io\">ktye_67449<\/a> has this: <a href=\"https://github.com/ktye/i/tree/master/kx\">https://github.com/ktye/i/tree/master/kx<\/a> and has done other experiments compiling K to other languages."}}
{"state_key":"@vylsaz:matrix.org","origin_server_ts":1722134588289,"event_id":"$8HZvfon0hhrSIB30K1LyCxUbMminKzRjgzXcs8IClYg","sender":"@vylsaz:matrix.org","user_id":"@vylsaz:matrix.org","type":"m.room.member","content":{"displayname":"vylsaz","membership":"join"}}
{"state_key":"@_discord_1140710589165994105:t2bot.io","origin_server_ts":1722143288504,"event_id":"$Q7ksgzELGIQCNkkED2PXyYRuIPa57lVQNjQHXbbhsxU","sender":"@_discord_1140710589165994105:t2bot.io","user_id":"@_discord_1140710589165994105:t2bot.io","type":"m.room.member","content":{"displayname":"ktye_67449","membership":"join"}}
{"state_key":"@_discord_1140710589165994105:t2bot.io","origin_server_ts":1722143288932,"event_id":"$LsGVkQPe_DJpAXAD8Dw8sMeVDeg-HEC4NK3DMu41bHw","sender":"@_discord_1140710589165994105:t2bot.io","user_id":"@_discord_1140710589165994105:t2bot.io","prev_content":{"displayname":"ktye_67449","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"1140710589165994105","username":"ktye_67449#0"},"avatar_url":"","displayname":"ktye_67449","membership":"join"},"replaces_state":"$Q7ksgzELGIQCNkkED2PXyYRuIPa57lVQNjQHXbbhsxU"}
{"origin_server_ts":1722143289118,"event_id":"$d_rUPNn58jO_7swduitB9g1v96Jd0hdHGtBk8Higcx4","sender":"@_discord_1140710589165994105:t2bot.io","user_id":"@_discord_1140710589165994105:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in this experiment https://ktye.github.io/halfkey/ i used the varname to annotate static types","msgtype":"m.text","formatted_body":"in this experiment <a href=\"https://ktye.github.io/halfkey/\">https://ktye.github.io/halfkey/<\/a> i used the varname to annotate static types"}}
{"origin_server_ts":1722143757500,"event_id":"$IAMDdorbX9Xrx-hOPr3tnJA-viPhhKRTDb5LzhTE-E8","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Oh that\u2019s what I meant to link..","msgtype":"m.text","formatted_body":"Oh that\u2019s what I meant to link.."}}
{"state_key":"@_discord_1262574255451668500:t2bot.io","origin_server_ts":1722145077503,"event_id":"$2H0Xi9uWtq0aNdjT82PBAVeAgm_1hKTCzrkDTEkxFPo","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"1262574255451668500","username":"busy_hamster_48992#0"},"avatar_url":"","displayname":"busy_hamster_48992","membership":"join"}}
{"state_key":"@_discord_651823008347979793:t2bot.io","origin_server_ts":1722148278240,"event_id":"$Y0xPpo2x93JF3F-mx7cNwnR0J7BoYU9s1-ne05f_GbE","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"651823008347979793","username":"a.brudz#0"},"avatar_url":"mxc://t2bot.io/d19bc50644ae7095efa7bf91c7c52f2bb0be6b92","displayname":"a.brudz","membership":"join"}}
{"origin_server_ts":1722150838377,"event_id":"$w1kWlLTyhAHH5_Tu_DIQi7mCECbYb0b6bH93oMecAlk","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"rubenverg (@_discord_604614910030118912:t2bot.io) About the `↑` and `↓` extension to Outfix and Infix, what would actually be better, a pair of `(pos neg)` per dimension or the \"transpose\"; a pair of `positives negatives`? E.g. `1 2↓¯1 ¯2↓m` could be `(1 ¯1)(2 ¯2)↓m` or `(1 2)(¯1 ¯2)↓m`","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a> About the <code>↑<\/code> and <code>↓<\/code> extension to Outfix and Infix, what would actually be better, a pair of <code>(pos neg)<\/code> per dimension or the &quot;transpose&quot;; a pair of <code>positives negatives<\/code>? E.g. <code>1 2↓¯1 ¯2↓m<\/code> could be <code>(1 ¯1)(2 ¯2)↓m<\/code> or <code>(1 2)(¯1 ¯2)↓m<\/code>"}}
{"origin_server_ts":1722151665622,"event_id":"$FTUfdZIjtmSTeBKF1xvq7PYcVuQB5x4murWJGgZ-YGQ","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$tTozkGcnNxmIas8FVhS3-MJXjW7E8y3Aw11MPBS6dJ4"},"event_id":"$tTozkGcnNxmIas8FVhS3-MJXjW7E8y3Aw11MPBS6dJ4","rel_type":"net.maunium.reply"},"format":"org.matrix.custom.html","body":"> <@_discord_671689100331319316:t2bot.io> I can imagine the snowballing becoming unbareble for stuff like reductions, so maybe not a great  idea after all.\n\nI'm not exactly sure, but it seems you are mostly talking about fatal programming errors? Those can often get intercepted in some way in languages supporting exceptions, but most things related to them (like providing accurate error locations and message) are more closely related to the implementation than the language itself. If I'm not mistaken, your idea of \"partial application of functions\" seems like a special way to build an error message based on the source code. What I'm interested in is: how do you use such an error from within the language?","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$tTozkGcnNxmIas8FVhS3-MJXjW7E8y3Aw11MPBS6dJ4\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_671689100331319316:t2bot.io\">@_discord_671689100331319316:t2bot.io<\/a><br>I can imagine the snowballing becoming unbareble for stuff like reductions, so maybe not a great  idea after all.<\/blockquote><\/mx-reply>I'm not exactly sure, but it seems you are mostly talking about fatal programming errors? Those can often get intercepted in some way in languages supporting exceptions, but most things related to them (like providing accurate error locations and message) are more closely related to the implementation than the language itself. If I'm not mistaken, your idea of &quot;partial application of functions&quot; seems like a special way to build an error message based on the source code. What I'm interested in is: how do you use such an error from within the language?"}}
{"origin_server_ts":1722152183627,"event_id":"$aAw4bY6tPRHiDRn8fmaJ9stxIQGq0RtRtUK1QmH4Kqo","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The array languages I know seem to provide some kind of exception-based mechanism for errors: Ks have a \"try\" primitive which allows access to the error message, but does not allow to discriminate different kinds of errors other than by error message. BQN has a \"catch\" primitive, which seems similar in practice, except for the fact that it relies on a system variable for the error message. J (and I think Dyalog too) has a more usual trapping mechanism, supported by some syntax constructs.","msgtype":"m.text","formatted_body":"The array languages I know seem to provide some kind of exception-based mechanism for errors: Ks have a &quot;try&quot; primitive which allows access to the error message, but does not allow to discriminate different kinds of errors other than by error message. BQN has a &quot;catch&quot; primitive, which seems similar in practice, except for the fact that it relies on a system variable for the error message. J (and I think Dyalog too) has a more usual trapping mechanism, supported by some syntax constructs."}}
{"origin_server_ts":1722152447742,"event_id":"$w4UVwn2Hfa3e_8bq9oy-QqlO9kvkejLf7XqeX3tAbN8","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The thing is, I feel like array languages are mostly about manipulating data and values, and not so much about syntactic constructs, so I wonder why trying to make errors a kind of value has not been considered more in array languages. Option-type based languages of the ML or Haskell family seem to like that, and languages like Go too, and to a lesser extent, Perl does some hybrid approach with its `... or die \"some context: $!\"` idiom, where some error stuff is exception-based and some stuff value-based.","msgtype":"m.text","formatted_body":"The thing is, I feel like array languages are mostly about manipulating data and values, and not so much about syntactic constructs, so I wonder why trying to make errors a kind of value has not been considered more in array languages. Option-type based languages of the ML or Haskell family seem to like that, and languages like Go too, and to a lesser extent, Perl does some hybrid approach with its <code>... or die &quot;some context: $!&quot;<\/code> idiom, where some error stuff is exception-based and some stuff value-based."}}
{"origin_server_ts":1722152599842,"event_id":"$YMX7Mspi0VeohleeTyInD-BLua5uOgig-HS8E59HbJs","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$w4UVwn2Hfa3e_8bq9oy-QqlO9kvkejLf7XqeX3tAbN8"}},"format":"org.matrix.custom.html","body":"I'd imagine it'd be very annoying to have to check for error values all the time.","msgtype":"m.text","formatted_body":"I&#x27;d imagine it&#x27;d be very annoying to have to check for error values all the time."}}
{"origin_server_ts":1722152690920,"event_id":"$H8zs6vH1cMiPSprw0Bfo5aoPpka-BEkdFGHwizdX8uA","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"interesting, relatively rare core datatypes: textures, meshes, parsers, tables","msgtype":"m.text","formatted_body":"interesting, relatively rare core datatypes: textures, meshes, parsers, tables"}}
{"origin_server_ts":1722152757606,"event_id":"$v_opS_ji9L7udR2McU1G0Ugdf-NuzHpvlEJR8DVYm48","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust to avoid verbosity in typical cases. For reference, I described the details here in the FAQ (https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values), and I'm quite curious about what you think about it.","msgtype":"m.text","formatted_body":"I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust to avoid verbosity in typical cases. For reference, I described the details <a href=\"https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values\">here in the FAQ<\/a>, and I'm quite curious about what you think about it."}}
{"origin_server_ts":1722152921648,"event_id":"$I92sprUGFt_i2znPNuDR1iXLBhmypVs1XSI8AkTO5yI","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust (and Perl for `or :error\"context: $e\"`) to avoid verbosity in typical cases. For reference, I described the details here in the FAQ (https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values), and I'm quite curious about what you think about it.","msgtype":"m.text","formatted_body":"I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust (and Perl for <code>or :error&quot;context: $e&quot;<\/code>) to avoid verbosity in typical cases. For reference, I described the details here in the FAQ (https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values), and I'm quite curious about what you think about it."},"m.relates_to":{"event_id":"$v_opS_ji9L7udR2McU1G0Ugdf-NuzHpvlEJR8DVYm48","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust (and Perl for `or :error\"context: $e\"`) to avoid verbosity in typical cases. For reference, I described the details here in the FAQ (https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values), and I'm quite curious about what you think about it.","msgtype":"m.text","formatted_body":"* I'm kind of biased because of my Go/Perl background, but I implemented (non-fatal) errors as values in Goal, and I quite like how it turned out, similar to how error values work in Go (any kind of values that know how to format themselves into an error message), with some syntax inspired from Rust (and Perl for <code>or :error&quot;context: $e&quot;<\/code>) to avoid verbosity in typical cases. For reference, I described the details here in the FAQ (https://anaseto.codeberg.page/goal-docs/chap-FAQ.html#error-values), and I'm quite curious about what you think about it."}}
{"origin_server_ts":1722152949775,"event_id":"$3-JPguQY8Fo9BcknLrfvEyEOJZfh-C1172VwsdHKALE","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Another issue: What would be the \"scope\" of the error value? Should `4 2 6÷4 0 2` give `errval` or `1 errval 3`?","msgtype":"m.text","formatted_body":"Another issue: What would be the &quot;scope&quot; of the error value? Should <code>4 2 6÷4 0 2<\/code> give <code>errval<\/code> or <code>1 errval 3<\/code>?"}}
{"origin_server_ts":1722153021267,"event_id":"$YRnqA7GQw0IHD4L--6cWMHJiJsMTYfHK4uDVlIVG73c","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Yeah, the thing is I consider that a fatal programming error, and that one uses the usual \"try\" mechanism of K, not an error value.","msgtype":"m.text","formatted_body":"Yeah, the thing is I consider that a fatal programming error, and that one uses the usual &quot;try&quot; mechanism of K, not an error value."}}
{"origin_server_ts":1722153053092,"event_id":"$ASADzZlA93TE3mIl_i77AFF1F9RPhzasatkPSeOeNoM","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"And how about `1 2 3+4 5`? `errval` or `5 7 errval`\u203d","msgtype":"m.text","formatted_body":"And how about <code>1 2 3+4 5<\/code>? <code>errval<\/code> or <code>5 7 errval<\/code>\u203d"}}
{"origin_server_ts":1722153106000,"event_id":"$Ch0cFqRfnwuHV9Zfskjk4p8xuLYZsJUu5bxbY_AX_Ok","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The latter seems to be making up for a lack of understanding of the language.","msgtype":"m.text","formatted_body":"The latter seems to be making up for a lack of understanding of the language."}}
{"origin_server_ts":1722153137215,"event_id":"$mknlRaKtnrPFtsnEmqJD0V0AwutdxMCq4AHUs2qI_XE","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"body":"Error values in Goal are used for things like IO and some time functionality, not basic operations, a bit like in statically typed languages that use option types or error values, but still panic for errors in pure operations.","msgtype":"m.text"}}
{"origin_server_ts":1722153248165,"event_id":"$cOXpdoS8rs8mucJhL0RWXASgmIX295j8iuKqo6MXmEs","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"body":"I use error values too for things like parsing and compiling regular expressions, parsing json. That is, things that are expected to potentially error because they're handling potentially untrusted or wrong data.","msgtype":"m.text"}}
{"origin_server_ts":1722153390249,"event_id":"$xq5UxSPWw2Aw40xt8SA-aG4d5Y2y6iD9Rfa9GxSnLXI","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Some errors inevitably reveal details about the language implementation.  Expecting them to exist on some abstract plan is probably not time well spent.","msgtype":"m.text","formatted_body":"Some errors inevitably reveal details about the language implementation.  Expecting them to exist on some abstract plan is probably not time well spent."}}
{"origin_server_ts":1722153618393,"event_id":"$xYRokKB52aoT9MZCVxudJmAFSW6dl4wtSb6BeVMbAdE","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"This is kind of fun:\n```\n      _E←{⍺←⊢ ⋄ 0::⎕DMX ⋄ ⍺ ⍺⍺ ⍵}\n      1 2 3 +_E 4 5\n EM       LENGTH ERROR                              \n Message  Mismatched left and right argument shapes \n      r←1 2 3 +_E 4 5\n      r\n EM       LENGTH ERROR                              \n Message  Mismatched left and right argument shapes \n```","msgtype":"m.text","formatted_body":"This is kind of fun:<br><pre><code>      _E←{⍺←⊢ ⋄ 0::⎕DMX ⋄ ⍺ ⍺⍺ ⍵}\n      1 2 3 +_E 4 5\n EM       LENGTH ERROR                              \n Message  Mismatched left and right argument shapes \n      r←1 2 3 +_E 4 5\n      r\n EM       LENGTH ERROR                              \n Message  Mismatched left and right argument shapes <\/code><\/pre>"}}
{"origin_server_ts":1722153678157,"event_id":"$7Eiha8aX2-QmGR7HcgmEpfnmNQtRQTadfx4QlAOraa0","sender":"@_discord_671689100331319316:t2bot.io","user_id":"@_discord_671689100331319316:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$FTUfdZIjtmSTeBKF1xvq7PYcVuQB5x4murWJGgZ-YGQ"}},"format":"org.matrix.custom.html","body":"I'm imagining some utility functions for interacting with the parse tree of the errored function. so for example, Leaves(func={a+1}) returns `a` and `1`. hopefully, an error handler could check if the function stopped because of a division error and fix it to be 0, infinity, or whatever.\nit's a recent idea so i haven't properly thought it through. if the parse tree was transformed into a stack, then you might even use list functions to query the function.","msgtype":"m.text","formatted_body":"I&#x27;m imagining some utility functions for interacting with the parse tree of the errored function. so for example, Leaves(func={a+1}) returns <code>a<\/code> and <code>1<\/code>. hopefully, an error handler could check if the function stopped because of a division error and fix it to be 0, infinity, or whatever.<br>it&#x27;s a recent idea so i haven&#x27;t properly thought it through. if the parse tree was transformed into a stack, then you might even use list functions to query the function."}}
{"origin_server_ts":1722154085421,"event_id":"$aMKpgPAg1QxjZC96A8dZXHcJ1-MfXHVzeNeK1YT48dw","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"body":"Hm, I see, though I'm not sure how it would turn out in practice either. The issue I see is that a tree-based approach might be a bit tied to implementation details: a typical bytecode-based vm might not keep the AST around, for example, making maybe that approach more difficult to implement.","msgtype":"m.text"}}
{"origin_server_ts":1722159678711,"event_id":"$EyJwnW_o23-0ki-5znh9h1rw3f1a_Untgh3NFRQlhIc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$w1kWlLTyhAHH5_Tu_DIQi7mCECbYb0b6bH93oMecAlk"}},"format":"org.matrix.custom.html","body":"former definitely","msgtype":"m.text","formatted_body":"former definitely"}}
{"origin_server_ts":1722159689156,"event_id":"$pkePW_qUuhV6cGDQRidIcEIqpCZdBkMusjwNfkU00xE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"each element of the left argument is one axis","msgtype":"m.text","formatted_body":"each element of the left argument is one axis"}}
{"state_key":"@loke:dhsdevelopments.com","origin_server_ts":1722161061008,"event_id":"$3RjGXYFQVgnwaOkbc0P9JB6YPaT1UZcDv1VOKQGdukM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.member","content":{"avatar_url":null,"displayname":"loke","membership":"join"}}
{"origin_server_ts":1722161077166,"event_id":"$T3YRJhH0VhodLjpxbLb25X5cw6bN6EFT7Hj4RoRuCUk","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Hello","msgtype":"m.text"}}
{"state_key":"@_discord_687763954050793501:t2bot.io","origin_server_ts":1722161310093,"event_id":"$wCJF2bhuvtE7uGJU9sVIAcQYccJ9ox8BoDe6PVDiFXM","sender":"@_discord_687763954050793501:t2bot.io","user_id":"@_discord_687763954050793501:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/449884cfd7d94be457671ae1f09fde37ac02dcad","displayname":"raulmiller","membership":"join"}}
{"state_key":"@_discord_687763954050793501:t2bot.io","origin_server_ts":1722161310434,"event_id":"$1ypmYrx8QhxJZU-0C3oEYFkSqvzvoqmG_1GNbQDDwiU","sender":"@_discord_687763954050793501:t2bot.io","user_id":"@_discord_687763954050793501:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/449884cfd7d94be457671ae1f09fde37ac02dcad","displayname":"raulmiller","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"687763954050793501","username":"raulmiller#0"},"avatar_url":"mxc://t2bot.io/449884cfd7d94be457671ae1f09fde37ac02dcad","displayname":"raulmiller","membership":"join"},"replaces_state":"$wCJF2bhuvtE7uGJU9sVIAcQYccJ9ox8BoDe6PVDiFXM"}
{"origin_server_ts":1722161310643,"event_id":"$REbYbsuVLs1FWG8vMdR2thiWIxFxqImdUmMyP0rdV-4","sender":"@_discord_687763954050793501:t2bot.io","user_id":"@_discord_687763954050793501:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$w4UVwn2Hfa3e_8bq9oy-QqlO9kvkejLf7XqeX3tAbN8"}},"format":"org.matrix.custom.html","body":"Older versions of J had extensive support for NaN which I think was based on that kind of reasoning. This has since been withdrawn, in part because the semantics didn't make sense.","msgtype":"m.text","formatted_body":"Older versions of J had extensive support for NaN which I think was based on that kind of reasoning. This has since been withdrawn, in part because the semantics didn&#x27;t make sense."}}
{"origin_server_ts":1722162579334,"event_id":"$A-NlF8CkCRLbuXC7fh8u8uExNDvepwqrKd74mgSjd2k","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$REbYbsuVLs1FWG8vMdR2thiWIxFxqImdUmMyP0rdV-4"},"event_id":"$REbYbsuVLs1FWG8vMdR2thiWIxFxqImdUmMyP0rdV-4","rel_type":"net.maunium.reply"},"format":"org.matrix.custom.html","body":"> <@_discord_687763954050793501:t2bot.io> Older versions of J had extensive support for NaN which I think was based on that kind of reasoning. This has since been withdrawn, in part because the semantics didn't make sense.\n\nNaN kind of makes sense when parsing numeric data with missing or wrong entries, but yeah, it's limited, you wouldn't want for example a \"read file\" function to return NaN on error.","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$REbYbsuVLs1FWG8vMdR2thiWIxFxqImdUmMyP0rdV-4\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_687763954050793501:t2bot.io\">@_discord_687763954050793501:t2bot.io<\/a><br>Older versions of J had extensive support for NaN which I think was based on that kind of reasoning. This has since been withdrawn, in part because the semantics didn&#x27;t make sense.<\/blockquote><\/mx-reply>NaN kind of makes sense when parsing numeric data with missing or wrong entries, but yeah, it's limited, you wouldn't want for example a &quot;read file&quot; function to return NaN on error."}}
{"origin_server_ts":1722162622216,"event_id":"$PdTOHG53IWFDNXOlGEndEkCduaFYctUq4WmflGHPAts","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Dyalog has nulls (not NaNs), especially for empty cells from spreadsheets","msgtype":"m.text","formatted_body":"Dyalog has nulls (not NaNs), especially for empty cells from spreadsheets"}}
{"origin_server_ts":1722162680145,"event_id":"$k3BNIqfpAzGScr0UyTIBH5VL7TUI1ysHKxe1Z_i23qM","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"body":"Yeah, it makes sense in that context. K does kind of similar things for such purposes too.","msgtype":"m.text"}}
{"origin_server_ts":1722162908844,"event_id":"$rRGFBKHOYHFvysh7NDTITOyjAV5TChBF1RUmX4AJZRk","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The error values I had in mind where mostly for cases where there might be an error message for user-consumption, like for IO. If I were represent that kind of errors in BQN, for example, I might perhaps use some kind of convention like \"an error value is any kind of namespace that provides a `Msg` or `Error` function/method\".","msgtype":"m.text","formatted_body":"The error values I had in mind where mostly for cases where there might be an error message for user-consumption, like for IO. If I were represent that kind of errors in BQN, for example, I might perhaps use some kind of convention like &quot;an error value is any kind of namespace that provides a <code>Msg<\/code> or <code>Error<\/code> function/method&quot;."}}
{"origin_server_ts":1722163000718,"event_id":"$o6_zqqgUiejtRiLn0Tx_R0UgGKR9IyXcmodnLzEJ9fA","sender":"@_discord_687763954050793501:t2bot.io","user_id":"@_discord_687763954050793501:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"J still has NaN, but in modern versions those typically get promoted to errors when they're manipulated non-structurally.\n\nIt will be interesting to watch how BQN evolves there...","msgtype":"m.text","formatted_body":"J still has NaN, but in modern versions those typically get promoted to errors when they&#x27;re manipulated non-structurally.<br><br>It will be interesting to watch how BQN evolves there..."}}
{"origin_server_ts":1722163443057,"event_id":"$I0bfHmf-23g7vhs5JWNs1z7wJt4bAeReNXrurpwO3SI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$A-NlF8CkCRLbuXC7fh8u8uExNDvepwqrKd74mgSjd2k"}},"format":"org.matrix.custom.html","body":"clearly it should return \"not a file\"!","msgtype":"m.text","formatted_body":"clearly it should return &quot;not a file&quot;!"}}
{"state_key":"@suhr:matrix.org","origin_server_ts":1722163757163,"event_id":"$Jb66yE051CQDTQf6hlqrOU6Ohwz4Hv1wvs1pVU_opJ8","sender":"@suhr:matrix.org","user_id":"@suhr:matrix.org","type":"m.room.member","content":{"displayname":"suhr","membership":"join"}}
{"origin_server_ts":1722166513582,"event_id":"$88fEuAjcYjHvu0AISChGMZhZGzzoegEEFGMQ-f1GMSw","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$rRGFBKHOYHFvysh7NDTITOyjAV5TChBF1RUmX4AJZRk"}},"format":"org.matrix.custom.html","body":"Like I emulated above with Dyalog?\n```\n      r←⎕NGET _E 'nosuch.file'\n      r.Message\nnosuch.file: Unable to open file\n      r.OSError\n1 2  The system cannot find the file specified. \n```","msgtype":"m.text","formatted_body":"Like I emulated above with Dyalog?<br><pre><code>      r←⎕NGET _E &#x27;nosuch.file&#x27;\n      r.Message\nnosuch.file: Unable to open file\n      r.OSError\n1 2  The system cannot find the file specified. <\/code><\/pre>"}}
{"origin_server_ts":1722166810009,"event_id":"$v4YNFZqrxiIta6PkPHU3NbeK-aNtbr1CjXYINxZbOHc","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$o6_zqqgUiejtRiLn0Tx_R0UgGKR9IyXcmodnLzEJ9fA"}},"format":"org.matrix.custom.html","body":"> <@_discord_687763954050793501:t2bot.io> J still has NaN, but in modern versions those typically get promoted to errors when they're manipulated non-structurally.\n> \n> It will be interesting to watch how BQN evolves there...\n\nSo NaaN is used as a special error condition? Not just plain IEEE semantics? ","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$o6_zqqgUiejtRiLn0Tx_R0UgGKR9IyXcmodnLzEJ9fA?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_687763954050793501:t2bot.io\">@_discord_687763954050793501:t2bot.io<\/a><br />J still has NaN, but in modern versions those typically get promoted to errors when they&#x27;re manipulated non-structurally.<br><br>It will be interesting to watch how BQN evolves there...<\/blockquote><\/mx-reply>So NaaN is used as a special error condition? Not just plain IEEE semantics?"}}
{"origin_server_ts":1722166820540,"event_id":"$JC5V8qFna5HuoSEaahz5SuHk8x-2rnU_yDrsFtMXvbI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"So NaN is used as a special error condition? Not just plain IEEE semantics?","msgtype":"m.text","formatted_body":"So NaN is used as a special error condition? Not just plain IEEE semantics?"},"m.relates_to":{"event_id":"$v4YNFZqrxiIta6PkPHU3NbeK-aNtbr1CjXYINxZbOHc","rel_type":"m.replace"},"body":"* So NaN is used as a special error condition? Not just plain IEEE semantics?","msgtype":"m.text"}}
{"state_key":"@suhr:matrix.org","origin_server_ts":1722167123433,"event_id":"$rElMnXtpOWZs4Rvw3JzkchLlzdiGKV2SKqoW6JwU4oQ","sender":"@suhr:matrix.org","user_id":"@suhr:matrix.org","prev_content":{"displayname":"suhr","membership":"join"},"type":"m.room.member","content":{"membership":"leave"},"replaces_state":"$Jb66yE051CQDTQf6hlqrOU6Ohwz4Hv1wvs1pVU_opJ8"}
{"origin_server_ts":1722167335525,"event_id":"$dUCv4HfPneW7Yj0zbw7Hd03QbbBbmpPLCH72xXfP_gE","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$88fEuAjcYjHvu0AISChGMZhZGzzoegEEFGMQ-f1GMSw"},"event_id":"$88fEuAjcYjHvu0AISChGMZhZGzzoegEEFGMQ-f1GMSw","rel_type":"net.maunium.reply"},"format":"org.matrix.custom.html","body":"> <@_discord_651823008347979793:t2bot.io> Like I emulated above with Dyalog?\n> ```\n>       r←⎕NGET _E 'nosuch.file'\n>       r.Message\n> nosuch.file: Unable to open file\n>       r.OSError\n> 1 2  The system cannot find the file specified. \n> ```\n\nYeah, it seems like what I had in mind. Then, it's mostly a matter of following the same convention for all kinds of errors, so that it's possible to provide a standard way for typical things like adding some context to an error message.","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$88fEuAjcYjHvu0AISChGMZhZGzzoegEEFGMQ-f1GMSw\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_651823008347979793:t2bot.io\">@_discord_651823008347979793:t2bot.io<\/a><br>Like I emulated above with Dyalog?<br><pre><code>      r←⎕NGET _E &#x27;nosuch.file&#x27;\n      r.Message\nnosuch.file: Unable to open file\n      r.OSError\n1 2  The system cannot find the file specified. <\/code><\/pre><\/blockquote><\/mx-reply>Yeah, it seems like what I had in mind. Then, it&#39;s mostly a matter of following the same convention for all kinds of errors, so that it&#39;s possible to provide a standard way for typical things like adding some context to an error message."}}
{"origin_server_ts":1722167579264,"event_id":"$FLo9Z2rP2ZQuJKnXCKcDtoflr3UeEqgBayrwU04Ti6s","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Right. Here, Dyalog's `⎕DMX` provides a standard.","msgtype":"m.text","formatted_body":"Right. Here, Dyalog&#x27;s <code>⎕DMX<\/code> provides a standard."}}
{"origin_server_ts":1722167583334,"event_id":"$lOcYhtGJi-EUGw4Xg9Tly7VcpbvPaFrqJc7DtExwhSE","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Relying on the text is not very reliable though. You want your exceptions to carry some machine readable information. ","msgtype":"m.text"}}
{"origin_server_ts":1722167724206,"event_id":"$HYELxQSX_uewYXnwQyGwsjpXzPmAv_lW4QjLkC7F_jM","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yes, the os error has some codes and there's also `EN` and `ENX`","msgtype":"m.text","formatted_body":"yes, the os error has some codes and there&#x27;s also <code>EN<\/code> and <code>ENX<\/code>"}}
{"state_key":"@meccine:matrix.org","origin_server_ts":1722178853052,"event_id":"$7wTu8G-HCLOoDNlpynEYMZGVheB879G7pZOht9ti3n4","sender":"@meccine:matrix.org","user_id":"@meccine:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://matrix.org/QHDRIpNAmKkJiLjBtkFnrhBj","displayname":"meccine","membership":"join"}}
{"state_key":"@_discord_125549206139174912:t2bot.io","origin_server_ts":1722192393048,"event_id":"$YcFBChiPQUmJ81mu7QjBmLjuXd5I6GxHGQEiSL88P4A","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":9807270,"name":"k god","position":12},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":3447003,"name":"Q-bie","position":10},{"color":3066993,"name":"April","position":15},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"125549206139174912","username":"rak1507#0"},"avatar_url":"mxc://t2bot.io/72f73974da82e9c39916969da0b15eed6a9a9e951746292147167952896","displayname":"rak1507","membership":"join"}}
{"state_key":"@jrkpthinks:matrix.org","origin_server_ts":1722199981835,"event_id":"$E49zYwN-OHggrnMgAHl4YjgGm7U6L4whPi5ZOMF10ks","sender":"@jrkpthinks:matrix.org","user_id":"@jrkpthinks:matrix.org","type":"m.room.member","content":{"avatar_url":"mxc://matrix.org/PlTVDqMTDIyPrkVtVzLuRAXE","displayname":"jrkpthinks","membership":"join"}}
{"state_key":"@_discord_450835234200617001:t2bot.io","origin_server_ts":1722206932068,"event_id":"$pXol6PNdsm4sBuCH3riIV-IDrXl38D3y5rbqWZOHv-0","sender":"@_discord_450835234200617001:t2bot.io","user_id":"@_discord_450835234200617001:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"450835234200617001","username":"darrylkid#0"},"avatar_url":"mxc://t2bot.io/cbca2374a63c20bb93fa8872e706f540f6f012d5","displayname":"darrylkid","membership":"join"}}
{"state_key":"@_discord_480246914441412608:t2bot.io","origin_server_ts":1722210439553,"event_id":"$z2RxMMq1g1LVGOPefGBfkBNCEH37r8TBzXNn_EYMoYs","sender":"@_discord_480246914441412608:t2bot.io","user_id":"@_discord_480246914441412608:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"480246914441412608","username":"avifs#0"},"avatar_url":"mxc://t2bot.io/cd2e75c8204086d179da03816d23d5a0344bfc9e1807319302638927872","displayname":"avifs","membership":"join"}}
{"origin_server_ts":1722218563239,"event_id":"$AujEE7tG2D3HOswn95Ci6Z1ihmChImUmKsOaF1L-UbU","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"As per discussion in the the APL room, Kap doen't support taking the diagonal of a matrix using the `n n⍉` notation that APL uses. Currently, you have to do something like this instead: `(>1↑ (⍳≢)⍛⊖)`.","msgtype":"m.text","formatted_body":"As per discussion in the the APL room, Kap doen't support taking the diagonal of a matrix using the <code>n n⍉<\/code> notation that APL uses. Currently, you have to do something like this instead: <code>(&gt;1↑ (⍳≢)⍛⊖)<\/code>."}}
{"origin_server_ts":1722218598615,"event_id":"$PMIKELpnqU1LVQ5Rir-dkWyFO2EtGE5bzb3lxhV6tGA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Now, design question: Should I just adopt the APL syntax, or is there some other way to express this that would be better?","msgtype":"m.text"}}
{"origin_server_ts":1722218856636,"event_id":"$NIBTaqWEsCVLFgdlNPhujoNpCdNBJzzXzhi26zeOdJs","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"depends on what you want to support; the transpose syntax allows doing some transposing while at it or even funky stuff like `1 1 1 2 2⍉2 2 2 2 2⍴⍳32`, though I'd guess that's approximately never done. If taking the diagonal is all that's wanted, you could have `⎕NULL⍉` or something funky like that","msgtype":"m.text","formatted_body":"depends on what you want to support; the transpose syntax allows doing some transposing while at it or even funky stuff like <code>1 1 1 2 2⍉2 2 2 2 2⍴⍳32<\/code>, though I'd guess that's approximately never done. If taking the diagonal is all that's wanted, you could have <code>⎕NULL⍉<\/code> or something funky like that"}}
{"origin_server_ts":1722219011843,"event_id":"$oc9qnmwgv9Pv03vpIN6iTYWQdrRXJS_-iKm0uH-zVJo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@dzaima:matrix.org"]},"format":"org.matrix.custom.html","body":"dzaima: my problem with the APL approach is the use of `⍉`. I don't consider taking the diagonal as a degenerate case of transposition.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@dzaima:matrix.org\">dzaima<\/a>: my problem with the APL approach is the use of <code>⍉<\/code>. I don't consider taking the diagonal as a degenerate case of transposition."}}
{"origin_server_ts":1722219027808,"event_id":"$1xUsvwW3Y8puJXOZd0oxbm_u2Cu2WW2ZPMW30x1NllU","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{"user_ids":["@dzaima:matrix.org"]},"format":"org.matrix.custom.html","body":"dzaima: my problem with the APL approach is the use of `⍉`. I don't consider taking the diagonal as related to transposition.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@dzaima:matrix.org\">dzaima<\/a>: my problem with the APL approach is the use of <code>⍉<\/code>. I don't consider taking the diagonal as related to transposition."},"m.relates_to":{"event_id":"$oc9qnmwgv9Pv03vpIN6iTYWQdrRXJS_-iKm0uH-zVJo","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * dzaima: my problem with the APL approach is the use of `⍉`. I don't consider taking the diagonal as related to transposition.","msgtype":"m.text","formatted_body":" * <a href=\"https://matrix.to/#/@dzaima:matrix.org\">dzaima<\/a>: my problem with the APL approach is the use of <code>⍉<\/code>. I don't consider taking the diagonal as related to transposition."}}
{"origin_server_ts":1722219042444,"event_id":"$ywhHt0RDh2ktu90rT-ewocuLWd98JJzuunS5Fn3qmSA","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but the glyph has a diagonal line :)","msgtype":"m.text","formatted_body":"but the glyph has a diagonal line :)"}}
{"origin_server_ts":1722219072951,"event_id":"$QzxbP_tW7fFXJYYUU9k2lqtk-mLhg6SQN9BqgFQKzBc","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"if you don't want the `⍉` glyph I doubt there's any better existing glyph","msgtype":"m.text","formatted_body":"if you don't want the <code>⍉<\/code> glyph I doubt there's any better existing glyph"}}
{"origin_server_ts":1722219251416,"event_id":"$X-2NTbbTz71SQ4O0-Idg1BbcTOK7-XDyliIicOa9W1g","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"You're right about the diagonal line.","msgtype":"m.text"}}
{"origin_server_ts":1722219326631,"event_id":"$L54QuMUwJ-zMZwCM2TTLfE_yXAK8vkjpRAc0y_udEFk","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"if you had a glyph to get every diagonal of a matrix, picking out the main one from that ends up nicely due to lazy evaluation. Doesn't extend to higher-rank arrays though, probably","msgtype":"m.text","formatted_body":"if you had a glyph to get every diagonal of a matrix, picking out the main one from that ends up nicely due to lazy evaluation. Doesn't extend to higher-rank arrays though, probably"}}
{"origin_server_ts":1722219509406,"event_id":"$t5-F013-gmze104yOCHl5GE7tQZnE9lU48pc2fP2Z6M","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"As long as `{∧/(↑⍴⍵)=¨⍴⍵}` is true then it should work for any rank, no?","msgtype":"m.text","formatted_body":"As long as <code>{∧/(↑⍴⍵)=¨⍴⍵}<\/code> is true then it should work for any rank, no?"}}
{"origin_server_ts":1722219570884,"event_id":"$MS2fBDYUcP0vzX-Y9GxDO-Fn0JCBm5a4CYiqd8aY-3w","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"what order/format does \"every diagonal of a 3D array\" go in though?","msgtype":"m.text","formatted_body":"what order/format does \"every diagonal of a 3D array\" go in though?"}}
{"origin_server_ts":1722219648010,"event_id":"$4Ioqmzo6s5SyMpU70deQfH19kMOLJwAMf6Vt_UTIt70","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"There is one diagonal for each corner. You just sort the corners by cooridnate.","msgtype":"m.text"}}
{"origin_server_ts":1722219651851,"event_id":"$kx0n_vpK6gwDM1rA_iTWmHPpiK0QOJXTry0xSKr2Xwg","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"body":"There is one diagonal for each corner. You just sort the corners by coordinate.","msgtype":"m.text"},"m.relates_to":{"event_id":"$4Ioqmzo6s5SyMpU70deQfH19kMOLJwAMf6Vt_UTIt70","rel_type":"m.replace"},"m.mentions":{},"body":" * There is one diagonal for each corner. You just sort the corners by coordinate.","msgtype":"m.text"}}
{"origin_server_ts":1722219670308,"event_id":"$f2bGj2PTr5s3A7xaQPKIBsg42-2c-DyRpwDXb2JjO64","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"So for a 3D array, the first diagonal would be the one starting at `0 0 0`.","msgtype":"m.text","formatted_body":"So for a 3D array, the first diagonal would be the one starting at <code>0 0 0<\/code>."}}
{"origin_server_ts":1722220335659,"event_id":"$Idyk2E4l8WZB-FCh826BP7bX7A1AnO2ydqcHbK6FxWE","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"ah, I was thinking like `4 4⍴⍳16` → `(,4)(3 8)(2 7 12)(1 6 11 16)(5 10 15)(9 14)(,13)` (dzaima/APL has `⊂⍁` but that gets the other direction of diagonals)","msgtype":"m.text","formatted_body":"ah, I was thinking like <code>4 4⍴⍳16<\/code> → <code>(,4)(3 8)(2 7 12)(1 6 11 16)(5 10 15)(9 14)(,13)<\/code> (dzaima/APL has <code>⊂⍁<\/code> but that gets the other direction of diagonals)"}}
{"origin_server_ts":1722220362783,"event_id":"$Oerkkdk2BwW5NcgxW9054JrN29bZqq7R7mC_bYsNYFY","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"corners is interesting though; could format those in a shape-`2⍴⍨⍴⍴⍵` array I think?","msgtype":"m.text","formatted_body":"corners is interesting though; could format those in a shape-<code>2⍴⍨⍴⍴⍵<\/code> array I think?"}}
{"state_key":"@_discord_171360495385706496:t2bot.io","origin_server_ts":1722221059781,"event_id":"$DcoPoW6tk8XL3lSo_peGLf59xz6Z8n0sJgEksA-8OeU","sender":"@_discord_171360495385706496:t2bot.io","user_id":"@_discord_171360495385706496:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":15277667,"name":"BQNator","position":13},{"color":0,"name":"@everyone","position":0}],"displayColor":15277667,"id":"171360495385706496","username":"thiccbonkus#0"},"avatar_url":"mxc://t2bot.io/fc446c6f42e00463b2e1f4919807fbf9e70265281816580970384457728","displayname":"parker","membership":"join"}}
{"origin_server_ts":1722221370488,"event_id":"$dgktkUTbiDEFKdxL7zJXjzYoXvLNcoWX5rIR6Xm0GnI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Yes, that's what I was thinking.","msgtype":"m.text"}}
{"state_key":"@_discord_355030377447948289:t2bot.io","origin_server_ts":1722221441107,"event_id":"$vK1VMQ4p4E-b_ny3Vp2e9KNtwfXzIwr-crw_rKZtHK8","sender":"@_discord_355030377447948289:t2bot.io","user_id":"@_discord_355030377447948289:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"355030377447948289","username":"spacequacker#0"},"avatar_url":"mxc://t2bot.io/4363a4dfc1107606c7bedee98fd867bfc1e84ee11811883226415759360","displayname":"spacequacker","membership":"join"}}
{"state_key":"@_discord_356107472269869058:t2bot.io","origin_server_ts":1722239586788,"event_id":"$5gW8VAupp_csKbDeqPnImlbzoP2OlpHDdMTkTxGDB_A","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"356107472269869058","username":"kspalaiologos#0"},"avatar_url":"mxc://t2bot.io/d931efd82941abe4d45a9b0572b0194069c769261810593062510919680","displayname":"Kamila","membership":"join"}}
{"state_key":"@_discord_304605065715384321:t2bot.io","origin_server_ts":1722241763338,"event_id":"$jv1GgeCoua2vRQ65mELkZsjZU0Fsgp6O7VUJ0qXJb6w","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/017818a32cd05d45cc0d33e27cb5718f96613aac","displayname":"fiuzeri","membership":"join"}}
{"origin_server_ts":1722241763967,"event_id":"$3cvrfNgK_5e7oXUpJCgSqVVLgdtY9V7BOaItAkUushI","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm thinking about a language that \"puns\" with the concept of arrays, maps and functions (the way K does) and the idea of using array operations as a way to encode combinators seems interesting to me:\n\nfor example this would be transposition being used for the self and swap operators\n```\na := (1 2 3; 4 5 6; 7 8 9)\nf := * \n(0 0 |: a)[i] <-> a[i;i] <-> a[i][i]\n(0 0 |: f)[i] <-> f[i;i] <-> i*i \n```","msgtype":"m.text","formatted_body":"I&#x27;m thinking about a language that &quot;puns&quot; with the concept of arrays, maps and functions (the way K does) and the idea of using array operations as a way to encode combinators seems interesting to me:<br><br>for example this would be transposition being used for the self and swap operators<br><pre><code>a := (1 2 3; 4 5 6; 7 8 9)\nf := * \n(0 0 |: a)[i] &lt;-&gt; a[i;i] &lt;-&gt; a[i][i]\n(0 0 |: f)[i] &lt;-&gt; f[i;i] &lt;-&gt; i*i <\/code><\/pre>"}}
{"state_key":"@_discord_304605065715384321:t2bot.io","origin_server_ts":1722241763976,"event_id":"$Ncw82ZdyiaE5AEgbEJp-LHjRwItyyY5fgPdFTgFm5wY","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/017818a32cd05d45cc0d33e27cb5718f96613aac","displayname":"fiuzeri","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"304605065715384321","username":"fiuzeri#0"},"avatar_url":"mxc://t2bot.io/017818a32cd05d45cc0d33e27cb5718f96613aac","displayname":"fiuzeri","membership":"join"},"replaces_state":"$jv1GgeCoua2vRQ65mELkZsjZU0Fsgp6O7VUJ0qXJb6w"}
{"origin_server_ts":1722241863990,"event_id":"$-oH1NSQTWrKqIbShNUinyvXWTNt53-BB5s1aqx4UMC8","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"```\nf := -\n(|:f)[3; 8] <-> f[8;3] <-> 8-3\n```","msgtype":"m.text","formatted_body":"<pre><code>f := -\n(|:f)[3; 8] &lt;-&gt; f[8;3] &lt;-&gt; 8-3<\/code><\/pre>"}}
{"origin_server_ts":1722242020059,"event_id":"$4ElAmp1syyvdC3vLJAqtfK7Rc97F01Jou5auFytd-m0","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the syntax is a bit all over the place, I haven't settled on anything specific and made up some stuff as I was writing.","msgtype":"m.text","formatted_body":"the syntax is a bit all over the place, I haven&#x27;t settled on anything specific and made up some stuff as I was writing."}}
{"origin_server_ts":1722246409693,"event_id":"$EXCLX95QAa7Zg4vO_a4AGsU7KgxMHMrSLurNCm5aj6Q","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"What is `|:` supposed to do?","msgtype":"m.text","formatted_body":"What is <code>|:<\/code> supposed to do?"}}
{"state_key":"@arlyle:matrix.org","origin_server_ts":1722251345133,"event_id":"$G9rwIE1BX14LM1VpfOk39rVdNiDexhJllA-HsrV8YaY","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.member","content":{"displayname":"arlyle","membership":"join"}}
{"state_key":"@ovf:beeper.com","origin_server_ts":1722251768098,"event_id":"$hc9Akw4sgvmSaLRnRI6d_spd9Rw25CWqNjnA0hwFdDY","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.member","content":{"avatar_url":null,"displayname":"ovf","membership":"join"}}
{"origin_server_ts":1722251862277,"event_id":"$7i-ywkKiYMKykrqv3eFZUb2qn1vdFw_fd_TZscjW1fY","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that would be the transpose glyph, as in J","msgtype":"m.text","formatted_body":"that would be the transpose glyph, as in J"}}
{"origin_server_ts":1722254100405,"event_id":"$MUKMJ5Eev-mZfxDLXDY3FIndLHtSm45TWwW5RvzdSSE","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_870115701279584326:t2bot.io","@anaseto:matrix.org"]},"format":"org.matrix.custom.html","body":"trying to understand inline assignment (e.g. `a*a:2`) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.\n\ndiscodoug said they treat inline assignments like normal right to left evaluation. anaseto said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"\n\nthank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:\n\n```c\n#include <stdio.h>\n#define noun(x) (('0'<=*x)&&('9'>=*x))\n#define name(x) (('0'<=*x)&&('z'>=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&&!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&&':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&&'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&&'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n","msgtype":"m.text","formatted_body":"<p>trying to understand inline assignment (e.g. <code>a*a:2<\/code>) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.<\/p>\n<p><a href=\"https://matrix.to/#/@_discord_870115701279584326:t2bot.io\">discodoug<\/a> said they treat inline assignments like normal right to left evaluation. <a href=\"https://matrix.to/#/@anaseto:matrix.org\">anaseto<\/a> said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"<\/p>\n<p>thank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:<\/p>\n<pre><code class=\"language-c\">#include &lt;stdio.h&gt;\n#define noun(x) (('0'&lt;=*x)&amp;&amp;('9'&gt;=*x))\n#define name(x) (('0'&lt;=*x)&amp;&amp;('z'&gt;=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&amp;&amp;!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&amp;&amp;':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&amp;&amp;'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&amp;&amp;'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n<\/code><\/pre>\n"}}
{"origin_server_ts":1722254377581,"event_id":"$oFqOtIaLToOJcuIsLMyVwmTzXyu-lJ12DWjJ7F7jY4k","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722254377314,"com.beeper.linkpreviews":[],"format":"org.matrix.custom.html","body":"note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '*' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '*'.","com.beeper.origin_client_type":"desktop","msgtype":"m.text","com.beeper.origin_client_version":null,"formatted_body":"note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '<em>' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '<\/em>'."}}
{"origin_server_ts":1722254391442,"event_id":"$1O3Vc0dm2nttw0so4NjntVavMdrNIEonzNRKQ_AvBPs","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"note that your eval has side effects (changing glob\\[\\]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '*' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '*'.","msgtype":"m.text","formatted_body":"note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '<em>' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '<\/em>'."},"m.relates_to":{"event_id":"$oFqOtIaLToOJcuIsLMyVwmTzXyu-lJ12DWjJ7F7jY4k","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * note that your eval has side effects (changing glob\\[\\]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '*' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '*'.","msgtype":"m.text","formatted_body":" * note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of '<em>' should call 'eval' first. c doesn't guarantee the evaluation order of operands to '<\/em>'."}}
{"origin_server_ts":1722254405655,"event_id":"$s2bn2u_OWqBQ9aOzuegco-PYyParUFI2bLdEzNGkf8Q","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"note that your eval has side effects (changing glob\\[\\]), and that the intended order of evaluation is left-of-right. i.e. your implementation of `*` should call 'eval' first. c doesn't guarantee the evaluation order of operands to `*`.","msgtype":"m.text","formatted_body":"note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of <code>*<\/code> should call 'eval' first. c doesn't guarantee the evaluation order of operands to <code>*<\/code>."},"m.relates_to":{"event_id":"$oFqOtIaLToOJcuIsLMyVwmTzXyu-lJ12DWjJ7F7jY4k","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * note that your eval has side effects (changing glob\\[\\]), and that the intended order of evaluation is left-of-right. i.e. your implementation of `*` should call 'eval' first. c doesn't guarantee the evaluation order of operands to `*`.","msgtype":"m.text","formatted_body":" * note that your eval has side effects (changing glob[]), and that the intended order of evaluation is left-of-right. i.e. your implementation of <code>*<\/code> should call 'eval' first. c doesn't guarantee the evaluation order of operands to <code>*<\/code>."}}
{"origin_server_ts":1722254920738,"event_id":"$5Li02JJW54JKH95ptMPqMVJy4qhpK5-JMgqOV5m8X-0","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.message","content":{"m.mentions":{"user_ids":["@ovf:beeper.com"]},"format":"org.matrix.custom.html","body":"ovf: thank you.\n```diff\n20c20,21\n<   return glob[*curr-'a'] * eval(++next);\n---\n>   long rest=eval(++next);\n>   return glob[*curr-'a'] * rest;\n```\nthis corrected the problem in this snippet.","msgtype":"m.text","formatted_body":"<p><a href=\"https://matrix.to/#/@ovf:beeper.com\">ovf<\/a>: thank you.<\/p>\n<pre><code class=\"language-diff\">20c20,21\n&lt;   return glob[*curr-'a'] * eval(++next);\n---\n&gt;   long rest=eval(++next);\n&gt;   return glob[*curr-'a'] * rest;\n<\/code><\/pre>\n<p>this corrected the problem in this snippet.<\/p>\n"}}
{"origin_server_ts":1722254960163,"event_id":"$UCSJbFh86OqUdeNWuvnAVt0IqCLR3sKSKhOu8tInhi4","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.message","content":{"m.new_content":{"m.mentions":{"user_ids":["@ovf:beeper.com"]},"format":"org.matrix.custom.html","body":"ovf: thank you.\n\n```diff\n20c20,21\n<   return glob[*curr-'a'] * eval(++next);\n---\n>   long rest=eval(++next);\n>   return glob[*curr-'a'] * rest;\n```\n\nthis corrected the problem in the snippet.","msgtype":"m.text","formatted_body":"<p><a href=\"https://matrix.to/#/@ovf:beeper.com\">ovf<\/a>: thank you.<\/p>\n<pre><code class=\"language-diff\">20c20,21\n&lt;   return glob[*curr-'a'] * eval(++next);\n---\n&gt;   long rest=eval(++next);\n&gt;   return glob[*curr-'a'] * rest;\n<\/code><\/pre>\n<p>this corrected the problem in the snippet.<\/p>\n"},"m.relates_to":{"event_id":"$5Li02JJW54JKH95ptMPqMVJy4qhpK5-JMgqOV5m8X-0","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * ovf: thank you.\n\n```diff\n20c20,21\n<   return glob[*curr-'a'] * eval(++next);\n---\n>   long rest=eval(++next);\n>   return glob[*curr-'a'] * rest;\n```\n\nthis corrected the problem in the snippet.","msgtype":"m.text","formatted_body":" * <p><a href=\"https://matrix.to/#/@ovf:beeper.com\">ovf<\/a>: thank you.<\/p>\n<pre><code class=\"language-diff\">20c20,21\n&lt;   return glob[*curr-'a'] * eval(++next);\n---\n&gt;   long rest=eval(++next);\n&gt;   return glob[*curr-'a'] * rest;\n<\/code><\/pre>\n<p>this corrected the problem in the snippet.<\/p>\n"}}
{"origin_server_ts":1722255180356,"event_id":"$vMbMJjhbqMbh--KYkZRtYXo7Tgw5sieiqOa4u1cmLMQ","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"now you can also merge the two branches, e.g. ```long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);}```","msgtype":"m.text","formatted_body":"now you can also merge the two branches, e.g. <code>long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);}<\/code>"}}
{"origin_server_ts":1722255194683,"event_id":"$lJdhsSQPi9RJPxAjevE9pDjT_hw0aGLdcLeT6E7rv38","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"now you can also merge the two branches, e.g. `long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);`","msgtype":"m.text","formatted_body":"now you can also merge the two branches, e.g. <code>long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);<\/code>"},"m.relates_to":{"event_id":"$vMbMJjhbqMbh--KYkZRtYXo7Tgw5sieiqOa4u1cmLMQ","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * now you can also merge the two branches, e.g. `long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);`","msgtype":"m.text","formatted_body":" * now you can also merge the two branches, e.g. <code>long ev0(char*x){return noun(x)?*x-'0':glob[*x-'a'];}long n;...;if('*'==*x)return n=eval(x+1),n*ev0(x-1);<\/code>"}}
{"origin_server_ts":1722255637549,"event_id":"$fkxlk4nbkIl_yDgcAXTLMWuOBnbaqg4bE0ZH1OEB8zk","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.message","content":{"m.new_content":{"m.mentions":{"user_ids":["@_discord_870115701279584326:t2bot.io","@anaseto:matrix.org"]},"format":"org.matrix.custom.html","body":"trying to understand inline assignment (e.g. `a*a:2`) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.\n\ndiscodoug said they treat inline assignments like normal right to left evaluation. anaseto said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"\n\nthank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:\n\n```c\n#include <stdio.h>\n#define noun(x) (('0'<=*x)&&('9'>=*x))\n#define name(x) (('a'<=*x)&&('z'>=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&&!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&&':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&&'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&&'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n```","msgtype":"m.text","formatted_body":"<p>trying to understand inline assignment (e.g. <code>a*a:2<\/code>) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.<\/p>\n<p><a href=\"https://matrix.to/#/@_discord_870115701279584326:t2bot.io\">discodoug<\/a> said they treat inline assignments like normal right to left evaluation. <a href=\"https://matrix.to/#/@anaseto:matrix.org\">anaseto<\/a> said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"<\/p>\n<p>thank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:<\/p>\n<pre><code class=\"language-c\">#include &lt;stdio.h&gt;\n#define noun(x) (('0'&lt;=*x)&amp;&amp;('9'&gt;=*x))\n#define name(x) (('a'&lt;=*x)&amp;&amp;('z'&gt;=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&amp;&amp;!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&amp;&amp;':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&amp;&amp;'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&amp;&amp;'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n<\/code><\/pre>\n"},"m.relates_to":{"event_id":"$MUKMJ5Eev-mZfxDLXDY3FIndLHtSm45TWwW5RvzdSSE","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * trying to understand inline assignment (e.g. `a*a:2`) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.\n\ndiscodoug said they treat inline assignments like normal right to left evaluation. anaseto said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"\n\nthank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:\n\n```c\n#include <stdio.h>\n#define noun(x) (('0'<=*x)&&('9'>=*x))\n#define name(x) (('a'<=*x)&&('z'>=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&&!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&&':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&&'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&&'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n```","msgtype":"m.text","formatted_body":" * <p>trying to understand inline assignment (e.g. <code>a*a:2<\/code>) implementations in k dialects. asked this in the aplfarm-k group but later decided it belongs this room.<\/p>\n<p><a href=\"https://matrix.to/#/@_discord_870115701279584326:t2bot.io\">discodoug<\/a> said they treat inline assignments like normal right to left evaluation. <a href=\"https://matrix.to/#/@anaseto:matrix.org\">anaseto<\/a> said, in their impl, inline assignments aren't different than regular ones and added \"and are implemented by dedicated opcodes (for local or global assignment). Those opcodes take one argument (index of local or global in stack frame or array of globals), and assign the top value in the stack to the variable.\"<\/p>\n<p>thank you discodoug and anaseto. but i still don't have a grasp. im not deeply familiar with language implementation or stack frames. currently stuck on implementing it in my toy interpreter (in python). i wrote a simple c snippet (which is erroneous) to understand whether i need pointers for this:<\/p>\n<pre><code class=\"language-c\">#include &lt;stdio.h&gt;\n#define noun(x) (('0'&lt;=*x)&amp;&amp;('9'&gt;=*x))\n#define name(x) (('a'&lt;=*x)&amp;&amp;('z'&gt;=*x))\nlong glob[26];\n\nlong eval(char*x){\n char*curr=x,*next=++x;\n\n if(*curr&amp;&amp;!*next)return *curr-'0';\n if(!curr||!next)return 0;\n\n if(name(curr)&amp;&amp;':'==*next){\n  return (glob[*curr-'a']=eval(++next));\n }\n\n if(noun(curr)&amp;&amp;'*'==*next)\n  return eval(++next) * (*curr-'0');\n\n if(name(curr)&amp;&amp;'*'==*next)\n  return glob[*curr-'a'] * eval(++next);\n\n return -1;}\n\nint main(){\n printf(\"%ld\\n\",eval(\"2\"));     // 2\n printf(\"%ld\\n\",eval(\"2*3\"));   // 6\n printf(\"%ld\\n\",eval(\"a*a:2\")); // 0 wrong\n}\n<\/code><\/pre>\n"}}
{"origin_server_ts":1722261738815,"event_id":"$XR_RGV8BrIMAd1v8THzt1iVlz-4z5WkApEti9aKvIs4","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"your precedence in the last clause is wrong (and ill-defined in C as there are no synchronization points between between the two sides of the `*` operator)","msgtype":"m.text","formatted_body":"your precedence in the last clause is wrong (and ill-defined in C as there are no synchronization points between between the two sides of the <code>*<\/code> operator)"}}
{"origin_server_ts":1722261835686,"event_id":"$sa669_-t6Nv7VsAOsZuHeufrOih8UyQqKSK8bdD6r8s","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"you should `eval(++next)` and _then_ read `glob`, because `eval(++next)` may  assign to `glob`","msgtype":"m.text","formatted_body":"you should <code>eval(++next)<\/code> and <em>then<\/em> read <code>glob<\/code>, because <code>eval(++next)<\/code> may  assign to <code>glob<\/code>"}}
{"origin_server_ts":1722262141437,"event_id":"$NB5XptOLF7w7CwzY-94dQLo-zGDe0WkGcmZ67dRAjdM","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"you could write it as:\n```c\n  if(name(curr)&&'*'==*next)\n    return int n=eval(++next), glob[*curr-'a'] * n;\n```","msgtype":"m.text","formatted_body":"you could write it as:<br><pre><code class=\"language-c\">  if(name(curr)&amp;&amp;&#x27;*&#x27;==*next)\n    return int n=eval(++next), glob[*curr-&#x27;a&#x27;] * n;<\/code><\/pre>"}}
{"origin_server_ts":1722262308778,"event_id":"$OCTSpvKFANd5hlhOUk8mI9BOgYyCqUH8JHeMfUu6RPQ","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"actually no, I think I allucinated that syntax. just\n```c\n  if(name(curr)&&'*'==*next) {\n    int n=eval(++next);\n    return glob[*curr-'a'] * n;\n  }\n```","msgtype":"m.text","formatted_body":"actually no, I think I allucinated that syntax. just<br><pre><code class=\"language-c\">  if(name(curr)&amp;&amp;&#x27;*&#x27;==*next) {\n    int n=eval(++next);\n    return glob[*curr-&#x27;a&#x27;] * n;\n  }<\/code><\/pre>"}}
{"origin_server_ts":1722262402026,"event_id":"$7Q8tJvEXFJi4sLNehnqoeVd2eUOO6kDSfG8KU4ZoOFo","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"aaand people had already replied with that exact fix, sorry","msgtype":"m.text","formatted_body":"aaand people had already replied with that exact fix, sorry"}}
{"origin_server_ts":1722264126445,"event_id":"$nSpPhRpulWHa3RCWCBsUuS7LVONwjahElVSoVyFHQnM","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_304605065715384321:t2bot.io"]},"format":"org.matrix.custom.html","body":"thanks anyways fiuzeri ","msgtype":"m.text","formatted_body":"thanks anyways <a href=\"https://matrix.to/#/@_discord_304605065715384321:t2bot.io\">fiuzeri<\/a>"}}
{"origin_server_ts":1722266359067,"event_id":"$FhK7p4wDw9YJjB642i8eWKoYiucll5EteyMEa6v712M","sender":"@_discord_595317473247756288:t2bot.io","user_id":"@_discord_595317473247756288:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Just made it easier for myself to add new keywords to my language. Hope I don't let this new power go to my head and end up writing a Kobol...","msgtype":"m.text","formatted_body":"Just made it easier for myself to add new keywords to my language. Hope I don&#x27;t let this new power go to my head and end up writing a Kobol..."}}
{"origin_server_ts":1722267483828,"event_id":"$vFCmT8fVX0ci4nw3tOu1lxwrsJuPg4-Y6q4-43pnGNA","sender":"@anaseto:matrix.org","user_id":"@anaseto:matrix.org","type":"m.room.message","content":{"body":"Yeah, though in a sense, having a fixed set of syntactic keywords means you have to freeze them at some point when you want backwards compatibility (or have some conventions to add new ones), so you won't be extending syntax forever :-)","msgtype":"m.text"}}
{"origin_server_ts":1722267630134,"event_id":"$Depbu4epZjNJKBEUofUBEA7Bq-J1OY5OmisXY9i5PWM","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$3cvrfNgK_5e7oXUpJCgSqVVLgdtY9V7BOaItAkUushI"}},"format":"org.matrix.custom.html","body":"monad `+` is transpose in most k's (i think it's `&` now in shakti) and yes `+[f]` would be slick","msgtype":"m.text","formatted_body":"monad <code>+<\/code> is transpose in most k&#x27;s (i think it&#x27;s <code>&amp;<\/code> now in shakti) and yes <code>+[f]<\/code> would be slick"}}
{"origin_server_ts":1722270233681,"event_id":"$kWNrL-tZBQ20VWfXVKTBzJTdc1FvtVhXaiwVdLHrhAA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(topic: perlis) would it make sense for `*` to be the Square/Exponent glyph, even if it would be swapped from normal apl usage? or would that be too confusing?","msgtype":"m.text","formatted_body":"(topic: perlis) would it make sense for <code>*<\/code> to be the Square/Exponent glyph, even if it would be swapped from normal apl usage? or would that be too confusing?"}}
{"origin_server_ts":1722270325416,"event_id":"$UPdGhkC9FOubCuAver6DeKjzWQOCpDlLHP6wkBTt5dI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"also i see no relation between Tally/Depth and Pick/Select, so are they on `$` together just because there was space? that probably makes it harder  to find a better glyph","msgtype":"m.text","formatted_body":"also i see no relation between Tally/Depth and Pick/Select, so are they on <code>$<\/code> together just because there was space? that probably makes it harder  to find a better glyph"}}
{"origin_server_ts":1722270348751,"event_id":"$lxaoZ9s2GmqIyOY8z1oFJTam7GmVt4z9EFo6bFBkKsI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`$` is like fine but i'm always not sure about using up ascii","msgtype":"m.text","formatted_body":"<code>$<\/code> is like fine but i&#x27;m always not sure about using up ascii"}}
{"origin_server_ts":1722272393722,"event_id":"$b6piuCU03bXVZithBs_nGjDpS0SCiogISpqDwkHF_28","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$FhK7p4wDw9YJjB642i8eWKoYiucll5EteyMEa6v712M"}},"format":"org.matrix.custom.html","body":"> <@_discord_595317473247756288:t2bot.io> Just made it easier for myself to add new keywords to my language. Hope I don't let this new power go to my head and end up writing a Kobol...\n\nNothing wrong with that. I added the ability to add new syntactic constructs att library level. ","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$FhK7p4wDw9YJjB642i8eWKoYiucll5EteyMEa6v712M?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_595317473247756288:t2bot.io\">@_discord_595317473247756288:t2bot.io<\/a><br />Just made it easier for myself to add new keywords to my language. Hope I don&#x27;t let this new power go to my head and end up writing a Kobol...<\/blockquote><\/mx-reply>Nothing wrong with that. I added the ability to add new syntactic constructs att library level."}}
{"origin_server_ts":1722272402209,"event_id":"$khX0B2gLZXroBBH17r09EfYOp5nSrA_X3IQSPlBx9XU","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"Nothing wrong with that. I added the ability to add new syntactic constructs at library level.","msgtype":"m.text","formatted_body":"Nothing wrong with that. I added the ability to add new syntactic constructs at library level."},"m.relates_to":{"event_id":"$b6piuCU03bXVZithBs_nGjDpS0SCiogISpqDwkHF_28","rel_type":"m.replace"},"body":"* Nothing wrong with that. I added the ability to add new syntactic constructs at library level.","msgtype":"m.text"}}
{"origin_server_ts":1722274882417,"event_id":"$9EpujG6kDa82UYccUocK3yRNtAV0AsN1nOM8h2tsf9Y","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Depbu4epZjNJKBEUofUBEA7Bq-J1OY5OmisXY9i5PWM"}},"format":"org.matrix.custom.html","body":"are you thinking of that as \"flip [dyadic] arguments of f\"? how would that generalize?","msgtype":"m.text","formatted_body":"are you thinking of that as &quot;flip [dyadic] arguments of f&quot;? how would that generalize?"}}
{"origin_server_ts":1722276707032,"event_id":"$ja31O_XVp53a52Jw8h8xBjIYPbPMbU6XUmRLA_RHCLQ","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yes","msgtype":"m.text","formatted_body":"yes"}}
{"origin_server_ts":1722276895980,"event_id":"$-GkUYjgt124Tug5Rdma4cMFcg9VPgX_1S-kzZXttrKc","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I assume it would generalize the same way that flipping a three-dimensional matrix works (which if I understand it correctly, swaps the first two axis. so flipping a triadic function would swap the first two args (e.g. making it `f[y;x;z]` rather than `f[x;y;z]`)","msgtype":"m.text","formatted_body":"I assume it would generalize the same way that flipping a three-dimensional matrix works (which if I understand it correctly, swaps the first two axis. so flipping a triadic function would swap the first two args (e.g. making it <code>f[y;x;z]<\/code> rather than <code>f[x;y;z]<\/code>)"}}
{"origin_server_ts":1722276995515,"event_id":"$iRjyxNqOqgfLAQSFwqDyXyrza-BTAsG74WqM3SniruM","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`f[y;x] ~ (+f)[x;y]` is exactly analogous to `a[j;i] ~ (+a)[i;j]`. i don't imagine it generalizing but you could do what coltim said. mostly i am contributing syntactically to fiuzeri's idea","msgtype":"m.text","formatted_body":"<code>f[y;x] ~ (+f)[x;y]<\/code> is exactly analogous to <code>a[j;i] ~ (+a)[i;j]<\/code>. i don&#x27;t imagine it generalizing but you could do what coltim said. mostly i am contributing syntactically to fiuzeri&#x27;s idea"}}
{"origin_server_ts":1722277304999,"event_id":"$uOMGRXpq2O3mc-s_uhrsKzyKvOo-dkiJoYXXHCzdTCE","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it probably would have to do that, in a k with eta reduction","msgtype":"m.text","formatted_body":"it probably would have to do that, in a k with eta reduction"}}
{"origin_server_ts":1722277600305,"event_id":"$GGUEWonxuKW-fSfsDvCyNtjUo8zvGoacNZ7Dmd0aXS8","sender":"@_discord_201716976924622849:t2bot.io","user_id":"@_discord_201716976924622849:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"💭 `((f;g;h)@\\:) ~ +(f;g;h)`","msgtype":"m.text","formatted_body":"💭 <code>((f;g;h)@\\:) ~ +(f;g;h)<\/code>"}}
{"state_key":"@hermetian:matrix.org","origin_server_ts":1722284761654,"event_id":"$YWgqV6Yz1V_l4jdiqLN0qgP78G57_nY4zl0vfo0J7Kg","sender":"@hermetian:matrix.org","user_id":"@hermetian:matrix.org","type":"m.room.member","content":{"displayname":"hermetian","membership":"join"}}
{"origin_server_ts":1722317547190,"event_id":"$wmgN-0VFEqymL4vF-4dXOOtqw4ZMxH7igl4lSQ1PQJM","sender":"@_discord_165871236835049472:t2bot.io","user_id":"@_discord_165871236835049472:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$EO_f5GHJSNhQqfNUen8wQiDdELGAFtIHrwfI8JZUfK0"}},"format":"org.matrix.custom.html","body":"reminds me of https://terralang.org a bit","msgtype":"m.text","formatted_body":"reminds me of <a href=\"https://terralang.org\">https://terralang.org<\/a> a bit"}}
{"state_key":"@_discord_80888203774533632:t2bot.io","origin_server_ts":1722321678958,"event_id":"$7GzjTtfyzdQIPVM2lwriapYUS0vmIxRg0z4QTkQJCZM","sender":"@_discord_80888203774533632:t2bot.io","user_id":"@_discord_80888203774533632:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"80888203774533632","username":"at#0"},"avatar_url":"mxc://t2bot.io/8599fbfb6fa64264905f3258aaa16f33b3f401931783567130810122240","displayname":"at","membership":"join"}}
{"origin_server_ts":1722328768820,"event_id":"$ftXcW82-NSIV26bxhf86cxO1YQfTOFCrHHfIUNhfh3g","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"💭 `n _ a ~ a (n+)`","msgtype":"m.text","formatted_body":"💭 <code>n _ a ~ a (n+)<\/code>"}}
{"state_key":"@_discord_724421839924756480:t2bot.io","origin_server_ts":1722328801136,"event_id":"$VPNbgATnMxl6bMRUwc4Gey09uF_T405Oq9_c9GjQ_eE","sender":"@_discord_724421839924756480:t2bot.io","user_id":"@_discord_724421839924756480:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":2123412,"id":"724421839924756480","username":"_elcaro_#0"},"avatar_url":"mxc://t2bot.io/4442bdbdc190923a81333530dde0f15ce859221d1747482317670055936","displayname":"_elcaro_","membership":"join"}}
{"origin_server_ts":1722328816527,"event_id":"$VttDbUo3k88zdQzB-N9uRwHXMDGsHZyQQSgnDEt2WlQ","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"though only for depth one, it breaks down after that","msgtype":"m.text","formatted_body":"though only for depth one, it breaks down after that"}}
{"origin_server_ts":1722328925349,"event_id":"$ckCQMFkSk4MpcCua1dtftgc0SiSALphLM8Ln0_wtzhw","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"though maybe only for depth one, it breaks down after that","msgtype":"m.text","formatted_body":"though maybe only for depth one, it breaks down after that"},"m.relates_to":{"event_id":"$VttDbUo3k88zdQzB-N9uRwHXMDGsHZyQQSgnDEt2WlQ","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* though maybe only for depth one, it breaks down after that","msgtype":"m.text","formatted_body":"* though maybe only for depth one, it breaks down after that"}}
{"origin_server_ts":1722329124779,"event_id":"$5zBQCSaMVagh7jrBk2RlmFyl7RwBLsd5Q0hUnwo9Py0","sender":"@_discord_304605065715384321:t2bot.io","user_id":"@_discord_304605065715384321:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and for non-negative n, not that useful after all","msgtype":"m.text","formatted_body":"and for non-negative n, not that useful after all"}}
{"origin_server_ts":1722342050400,"event_id":"$iGTKjiKCFe7uyB6cU5m1gBkpYP_x0DBj-KVfeY3JUkE","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.reaction","content":{"m.relates_to":{"event_id":"$FhK7p4wDw9YJjB642i8eWKoYiucll5EteyMEa6v712M","rel_type":"m.annotation","key":"😄"}}}
{"state_key":"@_discord_481224913508630531:t2bot.io","origin_server_ts":1722391252223,"event_id":"$1R7oYtwPajHU1e2HKgWnpO4wuaH3Y4xTd8kZIqsxOI0","sender":"@_discord_481224913508630531:t2bot.io","user_id":"@_discord_481224913508630531:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":2123412,"id":"481224913508630531","username":"taorres#0"},"avatar_url":"mxc://t2bot.io/1d1fb1270ff28d3f00deb8373be9bd1464ebdf511797435410050187264","displayname":"taorres","membership":"join"}}
{"state_key":"@_discord_1002703080321728512:t2bot.io","origin_server_ts":1722394142195,"event_id":"$q86Qe-Ks5ZDRg5hJMHhsHJybonEKwNNfm67t6IHpjmI","sender":"@_discord_1002703080321728512:t2bot.io","user_id":"@_discord_1002703080321728512:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"1002703080321728512","username":"tonyc1#0"},"avatar_url":"","displayname":"tonyc1","membership":"join"}}
{"state_key":"@_discord_235835720416100355:t2bot.io","origin_server_ts":1722411376027,"event_id":"$N1bLAt42QzNzRf2F_zqUh9M3oB_74Dh8IKNTrCgWvcc","sender":"@_discord_235835720416100355:t2bot.io","user_id":"@_discord_235835720416100355:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"235835720416100355","username":"jacktheegg#0"},"avatar_url":"mxc://t2bot.io/1da4bd5b283d6f5bf172586490a4afdc4d3c6a93","displayname":"jacktheegg","membership":"join"}}
{"origin_server_ts":1722415031043,"event_id":"$ewQx-2msZgUyieeVwoBVD2RsRaJTibXengEpLihw7-E","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"atan2 primitive, does it make more sense for the left argument to be the y or the x?","msgtype":"m.text","formatted_body":"atan2 primitive, does it make more sense for the left argument to be the y or the x?"}}
{"origin_server_ts":1722415052936,"event_id":"$q0eTPgA6JN_6y1xedVqgBopX46YXUkTWkAHjs2bVNyM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in tinyapl i put the left to be the `y`: https://tinyapl.rubenverg.com/primitive/arctangent","msgtype":"m.text","formatted_body":"in tinyapl i put the left to be the <code>y<\/code>: <a href=\"https://tinyapl.rubenverg.com/primitive/arctangent\">https://tinyapl.rubenverg.com/primitive/arctangent<\/a>"}}
{"origin_server_ts":1722415064214,"event_id":"$vgovHUHRBgGxb4R0Wce679iXJe2g1gNxZy7E9xpHJ0g","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but i'm not convinced","msgtype":"m.text","formatted_body":"but i&#x27;m not convinced"}}
{"origin_server_ts":1722415099525,"event_id":"$sN5nr1xY9VLTkzJAs8TQ8989YRGPIuSGoPz5zRHm7Jc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"note that in standard atan2: atan2(a, b) ↔ atan(a / b) and therefore a is the y and b is the x","msgtype":"m.text","formatted_body":"note that in standard atan2: atan2(a, b) ↔ atan(a / b) and therefore a is the y and b is the x"}}
{"origin_server_ts":1722415666409,"event_id":"$EowgYr4Pi81V-8BRPvUP_qKUX5jrs7BojNpdUqRxej8","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"In APLcart, I put the y on the right, to match the `aJb` notation.","msgtype":"m.text","formatted_body":"In APLcart, I put the y on the right, to match the <code>aJb<\/code> notation."}}
{"origin_server_ts":1722415717344,"event_id":"$xXI2gYEVCeqmUwqBN7xYFoxaBxEuc-eSYfWIlRchP8o","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah, you can see on the docs the definition in terms of `⊕` is swapepd","msgtype":"m.text","formatted_body":"yeah, you can see on the docs the definition in terms of <code>⊕<\/code> is swapepd"}}
{"origin_server_ts":1722415720023,"event_id":"$tKnF9CgoEtz_xlJmZsZZ_bsQ9aTH3e6cLdB5fpdLIPI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"yeah, you can see on the docs the definition in terms of `⊕` is swapped","msgtype":"m.text","formatted_body":"yeah, you can see on the docs the definition in terms of <code>⊕<\/code> is swapped"},"m.relates_to":{"event_id":"$xXI2gYEVCeqmUwqBN7xYFoxaBxEuc-eSYfWIlRchP8o","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* yeah, you can see on the docs the definition in terms of `⊕` is swapped","msgtype":"m.text","formatted_body":"* yeah, you can see on the docs the definition in terms of <code>⊕<\/code> is swapped"}}
{"origin_server_ts":1722415850600,"event_id":"$HKCtf8vQRFhmrKYfHW6tldimFZmwSc_r2CbANoyeQNM","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Btw, all the (other) trig fns are monadic. Wouldn't it make sense that the dyadic form takes the number of units in a right angle as left argument, i.e. the default left argument is 0.5π?","msgtype":"m.text","formatted_body":"Btw, all the (other) trig fns are monadic. Wouldn&#x27;t it make sense that the dyadic form takes the number of units in a right angle as left argument, i.e. the default left argument is 0.5π?"}}
{"origin_server_ts":1722415907171,"event_id":"$4MigUPqbLCOo43ZifgTU0hALByXtWF0kaw-BTUC_nVs","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"ah, like Custom for trig functions in one of the papers?","msgtype":"m.text","formatted_body":"ah, like Custom for trig functions in one of the papers?"}}
{"origin_server_ts":1722415917423,"event_id":"$z1uaos1o39u9tcPUVG9j_-88n4qbNShR2RdnqaTJQPg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i think atan2 is quite useful","msgtype":"m.text","formatted_body":"i think atan2 is quite useful"}}
{"origin_server_ts":1722415924134,"event_id":"$3o4crPUZTR__bCzh_ODXFeWVmVM9vY21LbWtnm5b3AQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"more than those","msgtype":"m.text","formatted_body":"more than those"}}
{"origin_server_ts":1722415987797,"event_id":"$CVEU9W6qy9F5fuVXAvwHvxyhdRmiCoKURYzLTluES6k","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and yeah of course it's just `∡⍤⊕`(`⍨`) but it seems to be a logical match for monad `∡` [Phase](https://tinyapl.rubenverg.com/primitive/phase)","msgtype":"m.text","formatted_body":"and yeah of course it&#x27;s just <code>∡⍤⊕<\/code>(<code>⍨<\/code>) but it seems to be a logical match for monad <code>∡<\/code> [Phase](<a href=\"https://tinyapl.rubenverg.com/primitive/phase\">https://tinyapl.rubenverg.com/primitive/phase<\/a>)"}}
{"state_key":"@_discord_636104124957458433:t2bot.io","origin_server_ts":1722441923600,"event_id":"$2OWaV0gDm1nnP5mlYOH2J_ePjFX0EihTtv_3J4u4kP4","sender":"@_discord_636104124957458433:t2bot.io","user_id":"@_discord_636104124957458433:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"636104124957458433","username":"andover77.#0"},"avatar_url":"mxc://t2bot.io/706e64894dd4d202a6774cf5ffa314b7740aaf4e1728186150465568768","displayname":"andover77.","membership":"join"}}
{"state_key":"@_discord_768182477449592832:t2bot.io","origin_server_ts":1722451527465,"event_id":"$gt9iM70rlsfZP-n2sOJTxGF8J3ADihJ8WyWyXoa5D4o","sender":"@_discord_768182477449592832:t2bot.io","user_id":"@_discord_768182477449592832:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":2123412,"id":"768182477449592832","username":"miku.rb#0"},"avatar_url":"mxc://t2bot.io/6facae40f603d27dacf5bdf5bcf24fbfd7004b601777807378654167040","displayname":"miku.rb","membership":"join"}}
{"origin_server_ts":1722464668918,"event_id":"$OoKLPll2IbBdSan1GOt_YDppk8dxYqslvFZbHlce0WE","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"seems to me like it would be more useful to define the equivalent of atan2 as a monad accepting coordinate pairs (or higher rank) than as a dyad zipping together x/y columns","msgtype":"m.text","formatted_body":"seems to me like it would be more useful to define the equivalent of atan2 as a monad accepting coordinate pairs (or higher rank) than as a dyad zipping together x/y columns"}}
{"origin_server_ts":1722464880746,"event_id":"$V57dzD1fznsARgPeO4_NKCkiqKJKHXE1ENod6EZVVGw","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"An advantage of the dyad is that it can extend a scalar, so it's better if you want to find the angles of various points along the line x=2.","msgtype":"m.text","formatted_body":"An advantage of the dyad is that it can extend a scalar, so it's better if you want to find the angles of various points along the line x=2."}}
{"origin_server_ts":1722464912780,"event_id":"$t8nuArlN3F2J-uEJLGVKC8rNRWMSFzZr5a1CviGiljU","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$OoKLPll2IbBdSan1GOt_YDppk8dxYqslvFZbHlce0WE"}},"format":"org.matrix.custom.html","body":"Also if it is a dyad, you can handle pairs with `f/¨` and higher rank with `f⌿` or `f/` (depending on where the length-2 axis is) and two arrays with `⊃f/` but if it is a monad, you might need to awkwardly process the argument.","msgtype":"m.text","formatted_body":"Also if it is a dyad, you can handle pairs with <code>f/¨<\/code> and higher rank with <code>f⌿<\/code> or <code>f/<\/code> (depending on where the length-2 axis is) and two arrays with <code>⊃f/<\/code> but if it is a monad, you might need to awkwardly process the argument."}}
{"origin_server_ts":1722464966118,"event_id":"$Zn227z2wm0CQBfLIvJtjP91PXInrAxVB1FiG3zqxIYQ","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"For modulus, `x|y` with scalar `x` is an important optimization, probably not so true for atan2 but it could be done.","msgtype":"m.text","formatted_body":"For modulus, <code>x|y<\/code> with scalar <code>x<\/code> is an important optimization, probably not so true for atan2 but it could be done."}}
{"origin_server_ts":1722476921390,"event_id":"$h3UHnQWlGnJCBSYs9uP3mOe2_DZMcTNmKp9VTpEfdOQ","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"from a practical applications standpoint atan2 is primarily used for converting cartesian coordinates into the angle part of polar coordinates. it would be rather odd and unnatural in such cases to have cartesian coordinates represented as independent structures to begin with, and very unusual to \"fix\" one axis, in the way one often fixes the modulus of a mod operator","msgtype":"m.text","formatted_body":"from a practical applications standpoint atan2 is primarily used for converting cartesian coordinates into the angle part of polar coordinates. it would be rather odd and unnatural in such cases to have cartesian coordinates represented as independent structures to begin with, and very unusual to &quot;fix&quot; one axis, in the way one often fixes the modulus of a mod operator"}}
{"origin_server_ts":1722477428831,"event_id":"$m-9h_QXaJ3QgQj7iiC2Qy63G7HyPTOxItjvr0D_B34w","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I manipulate coordinates separately all the time, for example in line plots there's often one list of x coordinates corresponding to several lists of y coordinates. But I won't deny being odd and unnatural.","msgtype":"m.text","formatted_body":"I manipulate coordinates separately all the time, for example in line plots there's often one list of x coordinates corresponding to several lists of y coordinates. But I won't deny being odd and unnatural."}}
{"origin_server_ts":1722478045406,"event_id":"$TIL8427Gc61JOZX9Gj0vUnQkQNJcdMLU8nLcOnS75ns","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Only search hit for `Atan2` in my BQN code is a translation of [this algorithm](https://momentsingraphics.de/CubicRoots.html) that I didn't bother to finish. I hate vector→angle conversions I guess (they can almost always be avoided).","msgtype":"m.text","formatted_body":"Only search hit for <code>Atan2<\/code> in my BQN code is a translation of <a href=\"https://momentsingraphics.de/CubicRoots.html\">this algorithm<\/a> that I didn't bother to finish. I hate vector→angle conversions I guess (they can almost always be avoided)."}}
{"state_key":"@_discord_697013244996354108:t2bot.io","origin_server_ts":1722496629832,"event_id":"$CZsepqtj35dxZBaBupCv6iPI0zLwU5TagAtEOCO5phU","sender":"@_discord_697013244996354108:t2bot.io","user_id":"@_discord_697013244996354108:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"697013244996354108","username":"sohangchopra#0"},"avatar_url":"mxc://t2bot.io/775dc6e3c35c994f35188a9931352da09df6f6681740572789628207104","displayname":"sohangchopra","membership":"join"}}
{"state_key":"@_discord_480607161576062976:t2bot.io","origin_server_ts":1722559287298,"event_id":"$2a4sDssj9RgGKGn-390jUBdL5M71sF-AQfosuGMOkso","sender":"@_discord_480607161576062976:t2bot.io","user_id":"@_discord_480607161576062976:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"480607161576062976","username":"gamingking2436#0"},"avatar_url":"mxc://t2bot.io/daa6e3f38b518fcc9f0227f1614297523efd96cb1801761072470818816","displayname":"gamingking2436","membership":"join"}}
{"origin_server_ts":1722608260181,"event_id":"$nhL3we6LntUp0vhmZPumwllbNfMrWnFGHs1SrUyWwZY","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"external_url":"https://cdn.discordapp.com/attachments/1266798935662661643/1268935712124698677/image.png?ex=66ae3bf9&is=66acea79&hm=31ff30df5e9b5678ef9bccbad626c3169bd9238593eb038a8d40b03feefa6439&","body":"image.png","msgtype":"m.image","url":"mxc://t2bot.io/e7adee6d0333dc3149083c5cabe8a06c78ee7bf41819377022376345600","info":{"size":190313,"w":1545,"h":488,"mimetype":"image/png"}}}
{"origin_server_ts":1722608287885,"event_id":"$DRR-4D9JLmYii88fGTobt0EOvYLViVPPFFcRkZ2lhO4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"tinyapl keyboard first draft, opinions? (`A`s are free spaces)","msgtype":"m.text","formatted_body":"tinyapl keyboard first draft, opinions? (<code>A<\/code>s are free spaces)"}}
{"origin_server_ts":1722608318280,"event_id":"$53iYDhvqPMBjNoyIvd5H28jElA56EQDPjTs1pelt-oI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"couldn't fit everything in just two layers","msgtype":"m.text","formatted_body":"couldn&#x27;t fit everything in just two layers"}}
{"origin_server_ts":1722608358488,"event_id":"$CJ4fJo1rcEI6Hr6MZCeqJ94SJ46tbP-POib2EmmBu60","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the standard stuff is mostly untouched, some less important stuff was moved (`⍞` and `⍬` and `⍙` i think) and obviously a few like `⌽` or `⍠` or the duplicates were removed","msgtype":"m.text","formatted_body":"the standard stuff is mostly untouched, some less important stuff was moved (<code>⍞<\/code> and <code>⍬<\/code> and <code>⍙<\/code> i think) and obviously a few like <code>⌽<\/code> or <code>⍠<\/code> or the duplicates were removed"}}
{"origin_server_ts":1722608533927,"event_id":"$oIuWx8ZaCQXZrS9wH0cFwHAqqnjIoqGjImsWwvxfYBI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"external_url":"https://cdn.discordapp.com/attachments/1266798935662661643/1268936863003967558/image.png?ex=66ae3d0b&is=66aceb8b&hm=7cd54dcafed2e86ff38e85bb2ef14f10fe10faf98c18cf3c7bfa281148af14f5&","body":"image.png","msgtype":"m.image","url":"mxc://t2bot.io/7d576e1dbfbe4ceba1ab699a3417f59f7105119f1819378173926703104","info":{"size":190800,"w":1544,"h":488,"mimetype":"image/png"}}}
{"origin_server_ts":1722608561536,"event_id":"$cJJPu0V5Q85TDrjevRW4F3bmUfma-yV-agTudXGUV4E","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"forgot two glyphs oops","msgtype":"m.text","formatted_body":"forgot two glyphs oops"}}
{"origin_server_ts":1722609257377,"event_id":"$LeMWhX_m5jGS_LOC8vzauy3yRoSWvxCSODYAosfXtmk","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Sheesh, how do I even type those crazy symbols /s","msgtype":"m.text","formatted_body":"Sheesh, how do I even type those crazy symbols /s"}}
{"origin_server_ts":1722609779576,"event_id":"$oDCDEXFfJi02WFp-XXPMty1B_2pk4NU8wrdlClLqNX4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rubenverg: how will you type the alternative symbols?","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a>: how will you type the alternative symbols?"}}
{"origin_server_ts":1722609984857,"event_id":"$SSJnEELqIscqARTl_7Va-_n5f5eY4ddOeVUnYXrO7Bc","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722609982874,"com.beeper.linkpreviews":[],"body":"btw i was surprised how easy it was to push stuff into xkeyboard-config","com.beeper.origin_client_type":"desktop","msgtype":"m.text","com.beeper.origin_client_version":null}}
{"origin_server_ts":1722610006105,"event_id":"$cPsTq5AeiZAZlv3mOuDyybWKrndPlwiMyPS8fb5N8wE","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722610003857,"com.beeper.linkpreviews":[],"body":"no idea how to get one's keymap into windows/macos","com.beeper.origin_client_type":"desktop","msgtype":"m.text","com.beeper.origin_client_version":null}}
{"origin_server_ts":1722610012890,"event_id":"$g2NGKd5KA9CSte1-FcPYQV1Ud47J3v_wM1ZxqEy6Sww","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$cJJPu0V5Q85TDrjevRW4F3bmUfma-yV-agTudXGUV4E"}},"format":"org.matrix.custom.html","body":"chars with `¨` to be together with their `¨`-less versions.","msgtype":"m.text","formatted_body":"chars with <code>¨<\/code> to be together with their <code>¨<\/code>-less versions."}}
{"origin_server_ts":1722610155245,"event_id":"$7U0j7FxhIRjG6hiybmfIUMdXo60bm55lQeQL-V5nx_Y","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722610155014,"com.beeper.linkpreviews":[],"body":"i see bqn is already there: https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/commit/031527a20adab829cc199f3f4f723c329b3b9cf3","com.beeper.origin_client_type":"desktop","msgtype":"m.text","com.beeper.origin_client_version":null}}
{"origin_server_ts":1722610283604,"event_id":"$XjLkzgX44hzULj62Z4Jj4wTorhIu9weljmEPnZqQ7ig","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"In Kap development news, I finally decided to implement `math:re` and `math:im`.","msgtype":"m.text","formatted_body":"In Kap development news, I finally decided to implement <code>math:re<\/code> and <code>math:im<\/code>."}}
{"origin_server_ts":1722610364974,"event_id":"$JzaAjztticHzMEYWr-6HMYgUEfFjfLPP1VusvILsBWQ","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"I'm pretty sure tinyapl requires exactly one line of code to do that. Kap ends up with a monster function as usual. https://codeberg.org/loke/array/src/branch/master/array/src/commonMain/kotlin/array/builtins/math_functions.kt#L2362","msgtype":"m.text"}}
{"origin_server_ts":1722610568690,"event_id":"$xBaCy4P1wz9h-LpLd_iPcR8g-y4anqrMOp8rmrjovkE","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rubenverg: why is `⌽` removed?","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a>: why is <code>⌽<\/code> removed?"}}
{"origin_server_ts":1722610668377,"event_id":"$ZXvD-MmJxeSBO8LLwgJhtQykqPdhsGeWiNZOVHbkk2A","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$7U0j7FxhIRjG6hiybmfIUMdXo60bm55lQeQL-V5nx_Y"}},"format":"org.matrix.custom.html","body":"oh heh [I've been edited in there](https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/merge_requests/358/diffs)! So now I'm mentioned in an obscure file in most (?) up-to-date linux desktop installations, neat","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$7U0j7FxhIRjG6hiybmfIUMdXo60bm55lQeQL-V5nx_Y\"> ↰ <\/a> <a href=\"https://matrix.to/#/@ovf:beeper.com\">ovf<\/a> <\/mx-reply>oh heh <a href=\"https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/merge_requests/358/diffs\">I've been edited in there<\/a>! So now I'm mentioned in an obscure file in most (?) up-to-date linux desktop installations, neat"}}
{"origin_server_ts":1722610734890,"event_id":"$dJe2Dxt15L5piZp7MYsobHcL_1RVnUz5CkVl1Apc5yQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$oDCDEXFfJi02WFp-XXPMty1B_2pk4NU8wrdlClLqNX4"}},"format":"org.matrix.custom.html","body":"double prefix backtick I think","msgtype":"m.text","formatted_body":"double prefix backtick I think"}}
{"origin_server_ts":1722610752730,"event_id":"$Ypb7-RD-KIYnhaSbKhok2uZq0b8F0RumIsqOrY-1Om4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"well, and single for the middle column of course","msgtype":"m.text","formatted_body":"well, and single for the middle column of course"}}
{"origin_server_ts":1722610786978,"event_id":"$1jGSDzziqcE4Vh5mo7csk_AG7HhRQZsxZp5LfCYeZnc","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722610786746,"com.beeper.linkpreviews":[],"m.relates_to":{"m.in_reply_to":{"event_id":"$ZXvD-MmJxeSBO8LLwgJhtQykqPdhsGeWiNZOVHbkk2A"}},"format":"org.matrix.custom.html","body":"> <@dzaima:matrix.org> oh heh [I've been edited in there](https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/merge_requests/358/diffs)! So now I'm mentioned in an obscure file in most (?) up-to-date linux desktop installations, neat\n\nyou might find one day \"just grep for my nickname on your laptop\" to be a pretty fitting introductory line","com.beeper.origin_client_type":"desktop","msgtype":"m.text","com.beeper.origin_client_version":null,"formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$ZXvD-MmJxeSBO8LLwgJhtQykqPdhsGeWiNZOVHbkk2A\">In reply to<\/a> <a href=\"https://matrix.to/#/@dzaima:matrix.org\">@dzaima:matrix.org<\/a><br>oh heh <a href=\"https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config/-/merge_requests/358/diffs\">I've been edited in there<\/a>! So now I'm mentioned in an obscure file in most (?) up-to-date linux desktop installations, neat<\/blockquote><\/mx-reply>you might find one day &quot;just grep for my nickname on your laptop&quot; to be a pretty fitting introductory line"}}
{"origin_server_ts":1722610795034,"event_id":"$Io9FsYtAtZ-b7GiVZIlMRvLqnTjTmkT6aNKgilOZV5Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$g2NGKd5KA9CSte1-FcPYQV1Ud47J3v_wM1ZxqEy6Sww"}},"format":"org.matrix.custom.html","body":"Under I can do, Each Left and Right need some reshuffling","msgtype":"m.text","formatted_body":"Under I can do, Each Left and Right need some reshuffling"}}
{"origin_server_ts":1722610817630,"event_id":"$B5Mkdpy7hcggaQoqvKsZMIEvv4MYwkN1bUXiLK93Vt0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but I guess I can just move comment somewhere else","msgtype":"m.text","formatted_body":"but I guess I can just move comment somewhere else"}}
{"origin_server_ts":1722610897118,"event_id":"$zxxTOv4jMYcdN-GE5582S-U1E1j9MG99uAkYVJpsB5Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$7U0j7FxhIRjG6hiybmfIUMdXo60bm55lQeQL-V5nx_Y"}},"format":"org.matrix.custom.html","body":"`popularity=\"exotic\"` is kinda funny","msgtype":"m.text","formatted_body":"<code>popularity=&quot;exotic&quot;<\/code> is kinda funny"}}
{"origin_server_ts":1722610963302,"event_id":"$P50sUsNUxHRCTa3iH_fEO5zTIjsMmXI1Uogw51caqp8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$g2NGKd5KA9CSte1-FcPYQV1Ud47J3v_wM1ZxqEy6Sww"}},"format":"org.matrix.custom.html","body":"even selfie? I know I will get it wrong so many times","msgtype":"m.text","formatted_body":"even selfie? I know I will get it wrong so many times"}}
{"origin_server_ts":1722610998473,"event_id":"$e_ZvIh37xu9HsuSpUAIkSJlgns_MJU8fvOEK1OsKCU8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe I can put it main on APL + Shift + backtick (and move Stencil to double backtick) and also leave it on APL + Shift + T as a fallback","msgtype":"m.text","formatted_body":"maybe I can put it main on APL + Shift + backtick (and move Stencil to double backtick) and also leave it on APL + Shift + T as a fallback"}}
{"origin_server_ts":1722611021803,"event_id":"$RjMGUpURNYr1YuuvfxYRvafsCCGbXK5yFMRpjYnMU-c","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"not like I have anything else to put there anyways","msgtype":"m.text","formatted_body":"not like I have anything else to put there anyways"}}
{"origin_server_ts":1722611045469,"event_id":"$zxcQm1ussBe6Rs-_EsH9gnBG2VNdXHgpnqIw_-3cstM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(for now!)","msgtype":"m.text","formatted_body":"(for now!)"}}
{"origin_server_ts":1722611068948,"event_id":"$e15p4xLfdGxZdjM9Rj2iiTe0nKcwAZTQvv3Pa7qtoD8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I guess eventually I'll need to learn how to edit fonts too, make my tinyapl386 or whatever","msgtype":"m.text","formatted_body":"I guess eventually I&#x27;ll need to learn how to edit fonts too, make my tinyapl386 or whatever"}}
{"origin_server_ts":1722611350867,"event_id":"$ejR1tLKWRzjeHvDpd-53qMa0eIu86iAzTPe868611dk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$g2NGKd5KA9CSte1-FcPYQV1Ud47J3v_wM1ZxqEy6Sww"}},"format":"org.matrix.custom.html","body":"`⍣` i'm not sure how to do, what's more important between `⍟` and `⍣` i.e. what goes on the last column (which is harder to access)?","msgtype":"m.text","formatted_body":"<code>⍣<\/code> i&#x27;m not sure how to do, what&#x27;s more important between <code>⍟<\/code> and <code>⍣<\/code> i.e. what goes on the last column (which is harder to access)?"}}
{"origin_server_ts":1722611386218,"event_id":"$DHgQc4wmoLmdo629ACtoMQQlxFkS9GX1ZT9TtE4O2rQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"definitely `∞` goes on top-right though","msgtype":"m.text","formatted_body":"definitely <code>∞<\/code> goes on top-right though"}}
{"origin_server_ts":1722611456989,"event_id":"$A3LMtYN7Mcjw-07x6RM_Lsi-_LLk7n-hg3EFXZ_8058","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"external_url":"https://cdn.discordapp.com/attachments/1266798935662661643/1268949124150067254/image.png?ex=66ae4877&is=66acf6f7&hm=fde2a896db7734ac49ecd0cbf7892383b40d09227d4bb181803bddd93733ccf3&","body":"image.png","msgtype":"m.image","url":"mxc://t2bot.io/e0d7f026048ea1f5c6f9cc1acc943bcb6e03254c1819390434045067264","info":{"size":203730,"w":1642,"h":507,"mimetype":"image/png"}}}
{"origin_server_ts":1722611485872,"event_id":"$xuTOUVHGFjHRoKRsMT42LsvHzO65IN3PWtSREfv31Kw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"became like this","msgtype":"m.text","formatted_body":"became like this"}}
{"origin_server_ts":1722611517149,"event_id":"$0rcCJv2RDB6baqZnVP83x-iIN9CgnzU7ch364tLNKdE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"P and Q are completely free now!","msgtype":"m.text","formatted_body":"P and Q are completely free now!"}}
{"origin_server_ts":1722611561358,"event_id":"$ywEJK9nXVx--WvMOzKXOt0Ji7evwUpxRfRIw81_yUr0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"positioning of Precedes `⊲` and Succeds `⊳` are not optimal and make sense only because in standard APL `<` and `>` are there","msgtype":"m.text","formatted_body":"positioning of Precedes <code>⊲<\/code> and Succeds <code>⊳<\/code> are not optimal and make sense only because in standard APL <code>&lt;<\/code> and <code>&gt;<\/code> are there"}}
{"origin_server_ts":1722611608205,"event_id":"$B0AmSAT-qLsRu-LtmrwumG3VqLukpXqNrYmBrL_Rhfk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I guess they can go next to `<` and `>`?","msgtype":"m.text","formatted_body":"I guess they can go next to <code>&lt;<\/code> and <code>&gt;<\/code>?"}}
{"origin_server_ts":1722611656703,"event_id":"$n2PBt1JXLflPa5jEmukxeK5ePW4eKVwp0IKpgv7mmg0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah that seems like it makes more sense","msgtype":"m.text","formatted_body":"yeah that seems like it makes more sense"}}
{"origin_server_ts":1722611789039,"event_id":"$FEYBahmx950guFhAT4n-aPnM45K3x2uBU2HsUdVS4PE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$xBaCy4P1wz9h-LpLd_iPcR8g-y4anqrMOp8rmrjovkE"}},"format":"org.matrix.custom.html","body":"i only have first axis reverse/rotate","msgtype":"m.text","formatted_body":"i only have first axis reverse/rotate"}}
{"origin_server_ts":1722611843196,"event_id":"$ongtxivDjRF_2otGkHLBAKWW7-a-pf_fYAktYP9ifaQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"replicate too","msgtype":"m.text","formatted_body":"replicate too"}}
{"origin_server_ts":1722611926947,"event_id":"$6WKIaLnIHs3-48LOH0RtnCcnIMxXjP_cuHEEuoXtb-M","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$e15p4xLfdGxZdjM9Rj2iiTe0nKcwAZTQvv3Pa7qtoD8"}},"format":"org.matrix.custom.html","body":"If TinyAPL is more settled by the end of the year, we might be able to add the missing glyphs to the new APL385.","msgtype":"m.text","formatted_body":"If TinyAPL is more settled by the end of the year, we might be able to add the missing glyphs to the new APL385."}}
{"origin_server_ts":1722611982800,"event_id":"$fJQUu-xhSi7pjpoTkAT_v_U0uXiJOR3SGYRSNH8kfOg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i really should settle more but i keep changing my mind on stuff","msgtype":"m.text","formatted_body":"i really should settle more but i keep changing my mind on stuff"}}
{"origin_server_ts":1722612045677,"event_id":"$9HqWUmisXnwhJZbwzcrDo3PvXfD1dfuHStjLfcdNMaQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"latest thing i'm not sure about is whether to keep reduce on the weird symbols or move it to `/` left and `\\` right","msgtype":"m.text","formatted_body":"latest thing i&#x27;m not sure about is whether to keep reduce on the weird symbols or move it to <code>/<\/code> left and <code>\\<\/code> right"}}
{"origin_server_ts":1722612108924,"event_id":"$AEka3Nc8muW60B2ndzPkJzBe3MfgCXEZJqk0y3GUO2k","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"which i guess doesn't matter font wise because all four are already in the font","msgtype":"m.text","formatted_body":"which i guess doesn&#x27;t matter font wise because all four are already in the font"}}
{"origin_server_ts":1722612173557,"event_id":"$s9gpRxoA6wXg3o6eWWGz0yZr21rrjuDZ7Kf33vO5Tkk","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"There are also the double struck slashes.","msgtype":"m.text","formatted_body":"There are also the double struck slashes."}}
{"origin_server_ts":1722612234968,"event_id":"$kb7amdBNCejkdlJSgzPJOWbwhwZn2KNowMvckyiSZKk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"wydm?","msgtype":"m.text","formatted_body":"wydm?"}}
{"origin_server_ts":1722612296242,"event_id":"$xWJTo6DDJSNcnvuvAi66dfvY86vRN_VVktFoAicDtsM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"external_url":"https://cdn.discordapp.com/attachments/1266798935662661643/1268951299517317203/image.png?ex=66ae4a7d&is=66acf8fd&hm=42dcc5397b3aa58df97e864a55e10d26dca633878dbd6a05080d11ab60d01ef7&","body":"image.png","msgtype":"m.image","url":"mxc://t2bot.io/46d7e4685da4f1d48d695cd7e4fd7036a59dfb851819393953124843520","info":{"size":208900,"w":1679,"h":506,"mimetype":"image/png"}}}
{"origin_server_ts":1722612343218,"event_id":"$f9l__J_WaxhBqNdMLFJMPMA3HMvJEVbjIZb5Jo-T2dE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"version with moved `⊲⊳` to more logical places","msgtype":"m.text","formatted_body":"version with moved <code>⊲⊳<\/code> to more logical places"}}
{"origin_server_ts":1722612421609,"event_id":"$_ZegnV5UOk1qEd8LRxFkxJL0yt1uXEKflodrMVnvqlM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$6WKIaLnIHs3-48LOH0RtnCcnIMxXjP_cuHEEuoXtb-M"}},"format":"org.matrix.custom.html","body":"i think most of the stuff that's missing is mostly definitive","msgtype":"m.text","formatted_body":"i think most of the stuff that&#x27;s missing is mostly definitive"}}
{"origin_server_ts":1722612487888,"event_id":"$v1OwOgUI3M5lGfhGfPuDZCyXyP_CmlnlxXFBfR7PYlQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i'm not convinced by the harpoons for minimal and maximal (on S and D in the image)","msgtype":"m.text","formatted_body":"i&#x27;m not convinced by the harpoons for minimal and maximal (on S and D in the image)"}}
{"origin_server_ts":1722612588167,"event_id":"$4Ah4gSUSehDeNXARWyTPTGx1S5m90BQYYfipOpeb4zo","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$kb7amdBNCejkdlJSgzPJOWbwhwZn2KNowMvckyiSZKk"}},"format":"org.matrix.custom.html","body":"Nothing special, just that `⫽⑊` exist.","msgtype":"m.text","formatted_body":"Nothing special, just that <code>⫽⑊<\/code> exist."}}
{"origin_server_ts":1722612659405,"event_id":"$Z6JKIM4ewW5vthcty1KKuqhu7Tud8LCJmOf-_efFitk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"ah yeah","msgtype":"m.text","formatted_body":"ah yeah"}}
{"origin_server_ts":1722612731910,"event_id":"$nntZWQ8B97SS8agyHsE8vO0rYt3r1tvxkI8kme7_DPA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"expand i don't think i'll have because it doesn't make sense without prototypes","msgtype":"m.text","formatted_body":"expand i don&#x27;t think i&#x27;ll have because it doesn&#x27;t make sense without prototypes"}}
{"origin_server_ts":1722612800438,"event_id":"$sJfhX4bMDuQRsesjIROG4VaZFwEvFGZON_zofh34VRI","redacted_because":{"room_id":"!WpdazzauuDxyGNAiCr:matrix.org","origin_server_ts":1722612888940,"event_id":"$A5tjPDx4BggFylCWqjTMG67d870a2e-TdvA8INVT1JA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","unsigned":{},"redacts":"$sJfhX4bMDuQRsesjIROG4VaZFwEvFGZON_zofh34VRI","type":"m.room.redaction","content":{"redacts":"$sJfhX4bMDuQRsesjIROG4VaZFwEvFGZON_zofh34VRI"}},"sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{}}
{"origin_server_ts":1722612888940,"event_id":"$A5tjPDx4BggFylCWqjTMG67d870a2e-TdvA8INVT1JA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","redacts":"$sJfhX4bMDuQRsesjIROG4VaZFwEvFGZON_zofh34VRI","type":"m.room.redaction","content":{"redacts":"$sJfhX4bMDuQRsesjIROG4VaZFwEvFGZON_zofh34VRI"}}
{"origin_server_ts":1722612909409,"event_id":"$Q6hTVQQqoDLDA57wSQ1L6R0Nly6HHtCX4qovqvCCTcE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe `/` can be reduce left and `⫽` can be reduce right?","msgtype":"m.text","formatted_body":"maybe <code>/<\/code> can be reduce left and <code>⫽<\/code> can be reduce right?"}}
{"origin_server_ts":1722612981991,"event_id":"$rg5vaLqv3UN5flM_XsCxYTAoanysJNc-7g2ZndSpk9A","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i'd guess those will go in the font anyways because Kap has them both","msgtype":"m.text","formatted_body":"i&#x27;d guess those will go in the font anyways because Kap has them both"}}
{"origin_server_ts":1722613053379,"event_id":"$8RaHt_RB6GnxIlZWlrYOznF9_XiIFNCgZ24-K1NZy3I","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i also like unicode reduce with dot `⹊` for reduce right maybe","msgtype":"m.text","formatted_body":"i also like unicode reduce with dot <code>⹊<\/code> for reduce right maybe"}}
{"origin_server_ts":1722613126764,"event_id":"$aSsYCY-rFg9Gg3Vj9zSUijtGr6YETcX39gFoSqbV8Bg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"...i guess stuff is much less definitive than i want to claim it is","msgtype":"m.text","formatted_body":"...i guess stuff is much less definitive than i want to claim it is"}}
{"origin_server_ts":1722613200672,"event_id":"$B0JQ9SZ6uWF_6RLnIY2n-kMMXY2BYqzkKE6F7M92cLQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the advantage of `⍆` and `⍅` is that they're visual indicators of what they do","msgtype":"m.text","formatted_body":"the advantage of <code>⍆<\/code> and <code>⍅<\/code> is that they&#x27;re visual indicators of what they do"}}
{"origin_server_ts":1722613286586,"event_id":"$6LgD1vdh7kcIntDqxKaQNNAAbbVC1scLXOHP3Cy674g","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but the disadvantage is that `/` isn't reduce anymore which ehh","msgtype":"m.text","formatted_body":"but the disadvantage is that <code>/<\/code> isn&#x27;t reduce anymore which ehh"}}
{"origin_server_ts":1722613322847,"event_id":"$HOx1sbZnJr-sBZC-kwsT-cc4SeCyT9sqS1_Ftux9g3o","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$6WKIaLnIHs3-48LOH0RtnCcnIMxXjP_cuHEEuoXtb-M"}},"m.mentions":{"user_ids":["@_discord_651823008347979793:t2bot.io"]},"format":"org.matrix.custom.html","body":"> <@_discord_651823008347979793:t2bot.io> If TinyAPL is more settled by the end of the year, we might be able to add the missing glyphs to the new APL385.\n\nDo you think we can have nice `⫽` and `⑊` as well? I think all the other Kap symbols are there already.","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$6WKIaLnIHs3-48LOH0RtnCcnIMxXjP_cuHEEuoXtb-M?via=matrix.org&via=t2bot.io&via=dhsdevelopments.com\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_651823008347979793:t2bot.io\">@_discord_651823008347979793:t2bot.io<\/a><br>If TinyAPL is more settled by the end of the year, we might be able to add the missing glyphs to the new APL385.<\/blockquote><\/mx-reply>Do you think we can have nice <code>⫽<\/code> and <code>⑊<\/code> as well? I think all the other Kap symbols are there already."}}
{"origin_server_ts":1722613338428,"event_id":"$peAFwiSvQWRxxVhUpKd08HtiIUEI4prNPl63OY5NyKA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Oh wait, you mentioned it.","msgtype":"m.text"}}
{"origin_server_ts":1722613361428,"event_id":"$JKFTwNUdz55mZBLos60LL8mgqwkZ8bKI4zeyLZ9OzWs","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"anyways the symbols not currently in apl386 that i use as of now are `⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳` and i can't tell if `⟨⟩` too","msgtype":"m.text","formatted_body":"anyways the symbols not currently in apl386 that i use as of now are <code>⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳<\/code> and i can&#x27;t tell if <code>⟨⟩<\/code> too"}}
{"origin_server_ts":1722613390103,"event_id":"$6izrIVvRUe9UunZSTLWs6uFES93-M61LEUVPJtvzWeg","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Wait, there is also `⇐`. Does the new apl font have those?","msgtype":"m.text","formatted_body":"Wait, there is also <code>⇐<\/code>. Does the new apl font have those?"}}
{"origin_server_ts":1722613394714,"event_id":"$Z2fZ8SKhCsuag31EBjTwSzKiDNRpfSegnI8S_9w1dJ4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Wait, there is also `⇐`. Does the new apl font have that one?","msgtype":"m.text","formatted_body":"Wait, there is also <code>⇐<\/code>. Does the new apl font have that one?"},"m.relates_to":{"event_id":"$6izrIVvRUe9UunZSTLWs6uFES93-M61LEUVPJtvzWeg","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * Wait, there is also `⇐`. Does the new apl font have that one?","msgtype":"m.text","formatted_body":" * Wait, there is also <code>⇐<\/code>. Does the new apl font have that one?"}}
{"origin_server_ts":1722613418067,"event_id":"$1I-ow-pzB1ZkuoEAu9DuhH1aNywGa85cQn1wDNJF_x8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Wait, there is also a few more `⇐`. Does the new apl font have those?","msgtype":"m.text","formatted_body":"Wait, there is also a few more <code>⇐<\/code>. Does the new apl font have those?"},"m.relates_to":{"event_id":"$6izrIVvRUe9UunZSTLWs6uFES93-M61LEUVPJtvzWeg","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * Wait, there is also a few more `⇐`. Does the new apl font have those?","msgtype":"m.text","formatted_body":" * Wait, there is also a few more <code>⇐<\/code>. Does the new apl font have those?"}}
{"origin_server_ts":1722613435855,"event_id":"$HqGgVbBKUidVAF9iqBZR3tm93g4uXKbzooytg7cM96o","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(hooks are in, right?)","msgtype":"m.text","formatted_body":"(hooks are in, right?)"}}
{"origin_server_ts":1722613444995,"event_id":"$t8rYRSR4Ipg9FgDaK6fIJht14sDQ960XOOMQCArq-dA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"And `∵`, `˝`. That should be it.","msgtype":"m.text","formatted_body":"And <code>∵<\/code>, <code>˝<\/code>. That should be it."}}
{"origin_server_ts":1722613574051,"event_id":"$e6PUDEqVFD2lNfUHX4aBacOyu_BkEr1qkmpj0trwXXc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"anyways the symbols not currently in apl386 that i use as of now are `⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳` and i can't tell if `⟨⟩` too","msgtype":"m.text","formatted_body":"anyways the symbols not currently in apl386 that i use as of now are <code>⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳<\/code> and i can&#x27;t tell if <code>⟨⟩<\/code> too"},"m.relates_to":{"event_id":"$JKFTwNUdz55mZBLos60LL8mgqwkZ8bKI4zeyLZ9OzWs","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* anyways the symbols not currently in apl386 that i use as of now are `⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳` and i can't tell if `⟨⟩` too","msgtype":"m.text","formatted_body":"* anyways the symbols not currently in apl386 that i use as of now are <code>⊴⊵⸚⏨⋷ℜ⊞↟↡ℑ↾⇂∡∠ᴊ■\u2056⊲⊳<\/code> and i can&#x27;t tell if <code>⟨⟩<\/code> too"}}
{"origin_server_ts":1722613623327,"event_id":"$hfAB9JmjSDX3OKCCYkslCGHo4N41k4_YW5pFJOQgcRI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rubenverg: out of the ones you use, I have at least considered using `⊞`, `↟` and `↡`","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a>: out of the ones you use, I have at least considered using <code>⊞<\/code>, <code>↟<\/code> and <code>↡<\/code>"}}
{"origin_server_ts":1722613638919,"event_id":"$m_v08d5WFeUDJ-q43Fg8mrA1Bkl8ECOLSMNaD8juCTE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"some basic math would be nice too, double arrows of all directions could be generally useful","msgtype":"m.text","formatted_body":"some basic math would be nice too, double arrows of all directions could be generally useful"}}
{"origin_server_ts":1722613645653,"event_id":"$gmGOzi89VtJ0TL_1ij8A9f1qEatQVnwAKvEJe2rEi0w","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"I never used those arrows (nor the horizontal versions) because they look horrible in the fonts I use.","msgtype":"m.text"}}
{"origin_server_ts":1722613766690,"event_id":"$iJshpsEMV6W_VPZlDI1OALgXG5eaEHLEX1yxWmfiIYI","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$HOx1sbZnJr-sBZC-kwsT-cc4SeCyT9sqS1_Ftux9g3o"}},"format":"org.matrix.custom.html","body":"Font designer has already been asked with those.","msgtype":"m.text","formatted_body":"Font designer has already been asked with those."}}
{"origin_server_ts":1722613792558,"event_id":"$rQ9XvmGKunP2HTj8boV8YrQ-b-YuVKY8xn4NeI7cxvw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Nice. I haven't actually assigned the backslash version because how asymmertic they look.","msgtype":"m.text"}}
{"origin_server_ts":1722613803918,"event_id":"$6QUSJtXiVv_ZF2ccrfHU_CFr-QwTVIo5gvTBTcPqn4o","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"body":"Nice. I haven't actually assigned the backslash version because how asymmertic it looks. Going to do that now that there's a font coming.","msgtype":"m.text"},"m.relates_to":{"event_id":"$rQ9XvmGKunP2HTj8boV8YrQ-b-YuVKY8xn4NeI7cxvw","rel_type":"m.replace"},"m.mentions":{},"body":" * Nice. I haven't actually assigned the backslash version because how asymmertic it looks. Going to do that now that there's a font coming.","msgtype":"m.text"}}
{"origin_server_ts":1722613898919,"event_id":"$qmFw3oWQ-4zNpWYFfOdwVlcIcJ1JR4wcnK49HNETEq4","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$t8rYRSR4Ipg9FgDaK6fIJht14sDQ960XOOMQCArq-dA"}},"format":"org.matrix.custom.html","body":"They are already in 385 iirc.","msgtype":"m.text","formatted_body":"They are already in 385 iirc."}}
{"origin_server_ts":1722614020273,"event_id":"$a-KJSN_U1K9w6oBUaFINlfyxEqlq9_fFAOCjvxbNtv0","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$1I-ow-pzB1ZkuoEAu9DuhH1aNywGa85cQn1wDNJF_x8"}},"format":"org.matrix.custom.html","body":"Not planned, but we can probably add it.","msgtype":"m.text","formatted_body":"Not planned, but we can probably add it."}}
{"origin_server_ts":1722614102608,"event_id":"$fzn9d0BUBraM8KAtU75EwUbn-FcsO2_MCFNTkw0fZFg","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Let's see what we get at the end of the year. Adding a few glyphs similar to the existing ones is probably not a huge job.","msgtype":"m.text","formatted_body":"Let&#x27;s see what we get at the end of the year. Adding a few glyphs similar to the existing ones is probably not a huge job."}}
{"origin_server_ts":1722614236348,"event_id":"$tgEx6p43aF37Zh9szuHuNbn6pFEGDLuayen7rMi9g34","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$qmFw3oWQ-4zNpWYFfOdwVlcIcJ1JR4wcnK49HNETEq4"}},"format":"org.matrix.custom.html","body":"bitwise is, undo isn't","msgtype":"m.text","formatted_body":"bitwise is, undo isn&#x27;t"}}
{"origin_server_ts":1722614316754,"event_id":"$NPco3LVIEKxJEpSN5cgq3gjzsPwq0JIV5OhIkl5eQrk","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Oh, I mistook that for `¨`","msgtype":"m.text","formatted_body":"Oh, I mistook that for <code>¨<\/code>"}}
{"origin_server_ts":1722614453677,"event_id":"$QIV5HQzDKD27OH3HAEmXjcxEywPtWCRZsfwzTNMHvp8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$hfAB9JmjSDX3OKCCYkslCGHo4N41k4_YW5pFJOQgcRI"}},"format":"org.matrix.custom.html","body":"i'm guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?","msgtype":"m.text","formatted_body":"i&#x27;m guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?"}}
{"origin_server_ts":1722614648296,"event_id":"$YpRZxrenrkrj6pP_JDQei89kGrzbS--g1Y67uBcELPk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"i'm guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?","msgtype":"m.text","formatted_body":"i&#x27;m guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?"},"m.relates_to":{"event_id":"$QIV5HQzDKD27OH3HAEmXjcxEywPtWCRZsfwzTNMHvp8","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* i'm guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?","msgtype":"m.text","formatted_body":"* i&#x27;m guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?"}}
{"origin_server_ts":1722614717358,"event_id":"$2D0GoliWt2X3hYdGx5PxlD2lTnMrSCIMtyX63fBRKLA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"mine are On Prefixes/On Suffixes because bqn uses up arrow for prefixes and down arrow for suffixes","msgtype":"m.text","formatted_body":"mine are On Prefixes/On Suffixes because bqn uses up arrow for prefixes and down arrow for suffixes"}}
{"state_key":"@_discord_348146203835367426:t2bot.io","origin_server_ts":1722614812821,"event_id":"$nzlYE-w-We4qQfAncjWceTwoEVIkVt39uMh0yOSdUbs","sender":"@_discord_348146203835367426:t2bot.io","user_id":"@_discord_348146203835367426:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/755eb31d60f2cdc053fee6950b0e69b18e0a9b291813396917355282432","displayname":"thothxv","membership":"join"}}
{"origin_server_ts":1722614813780,"event_id":"$j96pcjksxLy0vngbQDrl2ZM9nXzfIycewS6g3fDUhME","sender":"@_discord_348146203835367426:t2bot.io","user_id":"@_discord_348146203835367426:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I've been working on extending Terminus to support APL characters on and off for a while now. \n\nI've just about gotten the 16px version to kind of work, but I haven't made a bold version yet and autobolding makes it nigh-unreadable.","msgtype":"m.text","formatted_body":"I&#x27;ve been working on extending Terminus to support APL characters on and off for a while now. <br><br>I&#x27;ve just about gotten the 16px version to kind of work, but I haven&#x27;t made a bold version yet and autobolding makes it nigh-unreadable."}}
{"state_key":"@_discord_239772388747640841:t2bot.io","origin_server_ts":1722614906245,"event_id":"$KTfq8wd-epYFCjedgn9oI4XVTPGYDtY_PDvippZYLpA","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/cd675699fb21774546502f4c03eef8f9787083561763025950582243328","displayname":"krftdnr","membership":"join"}}
{"origin_server_ts":1722614907038,"event_id":"$TFrercxpBLqW4WBj9yTBS-qBclBLtj0n0pJ3emCv7jo","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The double arrow left should already be in BQN386 and UIUA386 has the outer product","msgtype":"m.text","formatted_body":"The double arrow left should already be in BQN386 and UIUA386 has the outer product"}}
{"origin_server_ts":1722614998782,"event_id":"$4EYYwBEparlJ1Bir3eiDjFRCgRunMqD9WJElRGiDL1g","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm pretty sure APL386 has ⟸ too","msgtype":"m.text","formatted_body":"I&#x27;m pretty sure APL386 has ⟸ too"}}
{"origin_server_ts":1722615041389,"event_id":"$TTsYGrP2X4j4tiuHlCqZVQpf4ktz0q-j9ZvGPhAbXY8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$QIV5HQzDKD27OH3HAEmXjcxEywPtWCRZsfwzTNMHvp8"}},"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"> <@_discord_604614910030118912:t2bot.io> i'm guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?\n\nThe horizontal left one was going to be modified assignment. I can't remember what I was thinking about for the up and down ones. It could have been sort before I settled on `∧` and `∨`","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$QIV5HQzDKD27OH3HAEmXjcxEywPtWCRZsfwzTNMHvp8?via=matrix.org&via=t2bot.io&via=dhsdevelopments.com\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">@_discord_604614910030118912:t2bot.io<\/a><br>i'm guessing the one i use for Table was outer product for you too, but what were you thinking of using the arrows for?<\/blockquote><\/mx-reply>The horizontal left one was going to be modified assignment. I can't remember what I was thinking about for the up and down ones. It could have been sort before I settled on <code>∧<\/code> and <code>∨<\/code>"}}
{"origin_server_ts":1722615201334,"event_id":"$x8nH64fZXea-xKZkQdM5jTu8wNEnbpoXE4ht3ULumbs","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"image.png","msgtype":"m.image","url":"mxc://dhsdevelopments.com/KkDFHbxXLiznqIqhbVsBBtll","info":{"xyz.amorgan.blurhash":"L2S~x5x]WE-;?t^,~X^,%3RjE0IU","size":2248,"w":152,"h":82,"mimetype":"image/png"}}}
{"origin_server_ts":1722615201897,"event_id":"$nYq6qu_9SopEIDrs4lu_01STsh3UqFJQanQa10ZLN2E","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"`∵` looks a bit wonky in 385, I think:","msgtype":"m.text","formatted_body":"<code>∵<\/code> looks a bit wonky in 385, I think:"}}
{"origin_server_ts":1722615232615,"event_id":"$fRsn73HnRenWCTqKtqef77zw1jH4jsbP2jXV7p6I8tM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"`∵` looks a bit wonky in 385, see screenshot.","msgtype":"m.text","formatted_body":"<code>∵<\/code> looks a bit wonky in 385, see screenshot."},"m.relates_to":{"event_id":"$nYq6qu_9SopEIDrs4lu_01STsh3UqFJQanQa10ZLN2E","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * `∵` looks a bit wonky in 385, see screenshot.","msgtype":"m.text","formatted_body":" * <code>∵<\/code> looks a bit wonky in 385, see screenshot."}}
{"origin_server_ts":1722615286133,"event_id":"$HjtrZ5XSzRZTodAn67u8oPJgFQAOtsyW0YEAG9Y-0ug","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I've seen that, but it doesn't really describe how and the code seems to be involving outer product for some reason.","msgtype":"m.text","formatted_body":"I&#x27;ve seen that, but it doesn&#x27;t really describe how and the code seems to be involving outer product for some reason."}}
{"state_key":"@_discord_239772388747640841:t2bot.io","origin_server_ts":1722615319887,"event_id":"$ACMGMiahMGVg_zJmE918qxAcUXs2mh6GOgzfvxLDxgQ","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/cd675699fb21774546502f4c03eef8f9787083561763025950582243328","displayname":"krftdnr","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15277667,"name":"BQNator","position":13},{"color":0,"name":"@everyone","position":0}],"displayColor":15277667,"id":"239772388747640841","username":"krftdnr#0"},"avatar_url":"mxc://t2bot.io/cd675699fb21774546502f4c03eef8f9787083561763025950582243328","displayname":"krftdnr","membership":"join"},"replaces_state":"$KTfq8wd-epYFCjedgn9oI4XVTPGYDtY_PDvippZYLpA"}
{"origin_server_ts":1722615341340,"event_id":"$p2ojjXwX8SD07k0KgTOTK0Owk6O4j7TuOc0k-iLWw20","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah i don't like that it treats the two dots as the same as the dots in `⍨⍣⍥⍤¨` either","msgtype":"m.text","formatted_body":"yeah i don&#x27;t like that it treats the two dots as the same as the dots in <code>⍨⍣⍥⍤¨<\/code> either"}}
{"origin_server_ts":1722615372104,"event_id":"$Zq153H-H-w2vf1H2p00l-rsKbRuOo1tTlfSVNTpmlfQ","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Q6hTVQQqoDLDA57wSQ1L6R0Nly6HHtCX4qovqvCCTcE"}},"format":"org.matrix.custom.html","body":"I like `𐲍` for reduce-right (although I don't believe there is a flipped version for reduce-left)","msgtype":"m.text","formatted_body":"I like <code>𐲍<\/code> for reduce-right (although I don&#x27;t believe there is a flipped version for reduce-left)"}}
{"origin_server_ts":1722615433390,"event_id":"$D-WdoZ86GaB1CvwPLE0KLrKYfn6htV3YOT7OnJY9ItE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Zq153H-H-w2vf1H2p00l-rsKbRuOo1tTlfSVNTpmlfQ"}},"format":"org.matrix.custom.html","body":"this one? https://commons.wikimedia.org/wiki/File:OLD_HUNGARIAN_CAPITAL_LETTER_EG.svg","msgtype":"m.text","formatted_body":"this one? <a href=\"https://commons.wikimedia.org/wiki/File:OLD_HUNGARIAN_CAPITAL_LETTER_EG.svg\">https://commons.wikimedia.org/wiki/File:OLD_HUNGARIAN_CAPITAL_LETTER_EG.svg<\/a>"}}
{"origin_server_ts":1722615450096,"event_id":"$M3L8NagZNSzxVUQH_TFmgGuOjhdLdqWQlmO9flFjYNI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"not sure i see the reason but i can't deny it's a cool symbol (:","msgtype":"m.text","formatted_body":"not sure i see the reason but i can&#x27;t deny it&#x27;s a cool symbol (:"}}
{"origin_server_ts":1722615503614,"event_id":"$bmU1Bf2ZsWOhhRwgg6wgE7SP12YucyzIO2ENWtkxaf8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"also, haven't decided if i want to break the BMP barrier yet (:","msgtype":"m.text","formatted_body":"also, haven&#x27;t decided if i want to break the BMP barrier yet (:"}}
{"origin_server_ts":1722615547764,"event_id":"$3CCeY5FZEVLJlVCJNVZAFne53C8KIn7aF9TspirCeso","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"heh =). my theory behind it is that the bottom represents the original array, the top the result, and the lines show which elements of the array get combined","msgtype":"m.text","formatted_body":"heh =). my theory behind it is that the bottom represents the original array, the top the result, and the lines show which elements of the array get combined"}}
{"origin_server_ts":1722615561450,"event_id":"$y1WnhUxVsoEv4wPKrW8zKndRK6PhLu_nlOdbml6Z_gM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"oh! it's like a tree!","msgtype":"m.text","formatted_body":"oh! it&#x27;s like a tree!"}}
{"origin_server_ts":1722615576091,"event_id":"$dHXKz0kjKdfnd0aiO7hTSSXT7uNlhFe9F2zNtC3rNQ8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that's so cool actually","msgtype":"m.text","formatted_body":"that&#x27;s so cool actually"}}
{"origin_server_ts":1722615594246,"event_id":"$B-V7S89MmwG8cwGHW9ol9vAnF4SKRbNw5921UeViO6c","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeh, \"tree\" is a much better descriptor =P","msgtype":"m.text","formatted_body":"yeh, &quot;tree&quot; is a much better descriptor =P"}}
{"origin_server_ts":1722615674483,"event_id":"$DjkoieslMB3-Xsa0U6p52-lcJ2DDK8FdJsHPdu601go","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(maybe if it was flipped upside down it would be better? not sure how to tweak it to get a scan version)","msgtype":"m.text","formatted_body":"(maybe if it was flipped upside down it would be better? not sure how to tweak it to get a scan version)"}}
{"origin_server_ts":1722615704890,"event_id":"$TGZnAdnwdlcT4CHxDhodT_WBBRTkYLMyO_NdA5yYO8A","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"asked shapecatcher and there doesn't seem to be a mirrored version, but tbf shapecatcher doesn't know about the normal one either so maybe it's just not in the database","msgtype":"m.text","formatted_body":"asked shapecatcher and there doesn&#x27;t seem to be a mirrored version, but tbf shapecatcher doesn&#x27;t know about the normal one either so maybe it&#x27;s just not in the database"}}
{"origin_server_ts":1722615730392,"event_id":"$0N41qC714PF6ZUXF4H3FqVQ2mZ3IYuK3hZpYdtExThk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$DjkoieslMB3-Xsa0U6p52-lcJ2DDK8FdJsHPdu601go"}},"format":"org.matrix.custom.html","body":"makes more sense this way i think","msgtype":"m.text","formatted_body":"makes more sense this way i think"}}
{"origin_server_ts":1722615747072,"event_id":"$2WPNDUnfP9WpiHu6yWLa3Ny9TwoQm_IlzUVm7CCjfF4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i don't need a scan version but if i did maybe there coud be dots on each fork","msgtype":"m.text","formatted_body":"i don&#x27;t need a scan version but if i did maybe there coud be dots on each fork"}}
{"origin_server_ts":1722615763591,"event_id":"$dfu5KjMew_-yRewCRWHKlgA8EpuhUvPwDKnEFpzOUe8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"to mark \"it goes in the result\" or whatever","msgtype":"m.text","formatted_body":"to mark &quot;it goes in the result&quot; or whatever"}}
{"origin_server_ts":1722615779441,"event_id":"$oGHewpVXJdPwMW4mpPUGuvVAsX0JoZ5HPAonPncFNr8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe reduce could have a dot just at the topmost fork","msgtype":"m.text","formatted_body":"maybe reduce could have a dot just at the topmost fork"}}
{"origin_server_ts":1722615797701,"event_id":"$rIti4XdzaOGB6z9k7QV3bkXzK0S0AzfpCtAdoUxolMA","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeh!","msgtype":"m.text","formatted_body":"yeh!"}}
{"origin_server_ts":1722615814877,"event_id":"$HN0N_Z07uymWh1MRJkFNu8ZtPlv1fsIbqxn4zmAYlkg","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"or a little circle like `🝓`","msgtype":"m.text","formatted_body":"or a little circle like <code>🝓<\/code>"}}
{"origin_server_ts":1722615832857,"event_id":"$F6MBU8xMj-vj_o532IDc4ahMSMAzTz2cv6u6ZzNdFxY","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(versus `🝢`)","msgtype":"m.text","formatted_body":"(versus <code>🝢<\/code>)"}}
{"origin_server_ts":1722615851467,"event_id":"$o_xJ6ROYU3VnVzg09W2bWugbWlzBoOkxRVS6mMEOA1Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"oh, to not be limited by unicode!","msgtype":"m.text","formatted_body":"oh, to not be limited by unicode!"}}
{"origin_server_ts":1722615868656,"event_id":"$t7FPcZkDevSEX2TBuUXCPOEEV-NLUnMoYhXdsBgybLo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"sometimes i think i should just go PUA for some glyphs","msgtype":"m.text","formatted_body":"sometimes i think i should just go PUA for some glyphs"}}
{"origin_server_ts":1722615885615,"event_id":"$WZ3SBdLvvYdpwq-lIBRcx3wsJ_DdQWPBnf8uF7Cm1pA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but then i decide i want them to work without a font","msgtype":"m.text","formatted_body":"but then i decide i want them to work without a font"}}
{"origin_server_ts":1722615928843,"event_id":"$hMeqrJf8hG6ilArow3mWY6qTfezBOJAd7_sIq3VhB-c","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(I guess something like that last one, where the middle line is vertical, could indicate a binary-associative fold where the order of operations doesn't matter)","msgtype":"m.text","formatted_body":"(I guess something like that last one, where the middle line is vertical, could indicate a binary-associative fold where the order of operations doesn&#x27;t matter)"}}
{"origin_server_ts":1722615948620,"event_id":"$0izjbVxR6RwUIbAT0rgPlQ_VUiLwLTUscyAJ2JYtzBY","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but yeh, inventing new characters is a whole 'nother step","msgtype":"m.text","formatted_body":"but yeh, inventing new characters is a whole &#x27;nother step"}}
{"origin_server_ts":1722619210853,"event_id":"$LG1uY4MMsmCZpIEHpJ9eGkECQ7byhw1BF9hA2MzWY1M","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722619210726,"body":"i just wish humanity went ahead with an approach to character i/o like https://en.wikipedia.org/wiki/Cangjie_input_method#Early_development","com.beeper.origin_client_type":"ios","msgtype":"m.text","com.beeper.origin_client_version":"2.5.1 #9437"}}
{"origin_server_ts":1722622815057,"event_id":"$tHPIXVpV1HHVuHN2902IbRq1536sgLx2K1NuTYe3mvU","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"an APL with diacritics and accents and whatnot would be conceptually neat. kinda like a throwback to the overstriking required in early APLs","msgtype":"m.text","formatted_body":"an APL with diacritics and accents and whatnot would be conceptually neat. kinda like a throwback to the overstriking required in early APLs"}}
{"origin_server_ts":1722622957740,"event_id":"$R31dI3ze1qlMzKzbbhqZ3F3ejr9lo2YF2w8JMPPPRcY","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"bqn's 1-modifiers using combining accents would be cool, except expressions can be more than 1 character wide 😄","msgtype":"m.text","formatted_body":"bqn&#x27;s 1-modifiers using combining accents would be cool, except expressions can be more than 1 character wide 😄"}}
{"origin_server_ts":1722627439338,"event_id":"$4lfR_ATUex7ijVw9uTvVO61eBkzfr0-LoQxRxkwwsBc","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"sounds an awful lot like a visual programming language","msgtype":"m.text","formatted_body":"sounds an awful lot like a visual programming language"}}
{"state_key":"@_discord_348146203835367426:t2bot.io","origin_server_ts":1722627700634,"event_id":"$8dOnyVl0sFlAKPDJner3nuUtgc-qgicTaWUki5TYn0I","sender":"@_discord_348146203835367426:t2bot.io","user_id":"@_discord_348146203835367426:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/755eb31d60f2cdc053fee6950b0e69b18e0a9b291813396917355282432","displayname":"thothxv","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"348146203835367426","username":"thothxv#0"},"avatar_url":"mxc://t2bot.io/755eb31d60f2cdc053fee6950b0e69b18e0a9b291813396917355282432","displayname":"thothxv","membership":"join"},"replaces_state":"$nzlYE-w-We4qQfAncjWceTwoEVIkVt39uMh0yOSdUbs"}
{"origin_server_ts":1722629221787,"event_id":"$ILYCfyIp0yY5BfiAGPKymdJPBcy_ZiJb9DDKpIJY8bg","sender":"@_discord_80888203774533632:t2bot.io","user_id":"@_discord_80888203774533632:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"unicode supports joining many characters into groups and applying combining characters to the whole group","msgtype":"m.text","formatted_body":"unicode supports joining many characters into groups and applying combining characters to the whole group"}}
{"origin_server_ts":1722629248709,"event_id":"$9NkKHxAy9zN5Zj2-eIh9EivG-9fpaY5t9BYM1jIyrFw","sender":"@_discord_80888203774533632:t2bot.io","user_id":"@_discord_80888203774533632:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"see https://www.unicode.org/L2/L2021/21208-egyptian-ctrl.pdf","msgtype":"m.text","formatted_body":"see <a href=\"https://www.unicode.org/L2/L2021/21208-egyptian-ctrl.pdf\">https://www.unicode.org/L2/L2021/21208-egyptian-ctrl.pdf<\/a>"}}
{"origin_server_ts":1722630507364,"event_id":"$6DToXoUGZat1YlBWNEanRTGSapEKPmjYCKhU8P34GXE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"what could be a glyph for On Scalars (`⍤0⍥0`)? it seems like a nice primitive to have","msgtype":"m.text","formatted_body":"what could be a glyph for On Scalars (<code>⍤0⍥0<\/code>)? it seems like a nice primitive to have"}}
{"origin_server_ts":1722630586570,"event_id":"$h9gpUAYpwU09_BL395gGaPoKkMVwX7tV_eh82CdKPDA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"what could be a glyph for On Simples(/\"On Simple Scalars\"? \"On Scalars\"?) (`⍤0⍥0`)? it seems like a nice primitive to have","msgtype":"m.text","formatted_body":"what could be a glyph for On Simples(/&quot;On Simple Scalars&quot;? &quot;On Scalars&quot;?) (<code>⍤0⍥0<\/code>)? it seems like a nice primitive to have"},"m.relates_to":{"event_id":"$6DToXoUGZat1YlBWNEanRTGSapEKPmjYCKhU8P34GXE","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* what could be a glyph for On Simples(/\"On Simple Scalars\"? \"On Scalars\"?) (`⍤0⍥0`)? it seems like a nice primitive to have","msgtype":"m.text","formatted_body":"* what could be a glyph for On Simples(/&quot;On Simple Scalars&quot;? &quot;On Scalars&quot;?) (<code>⍤0⍥0<\/code>)? it seems like a nice primitive to have"}}
{"origin_server_ts":1722630629232,"event_id":"$9RG6qrWG4xI5XHxp6MDEO-MFUH1SmWCoh7Sts5Qwq4k","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"what could be a glyph for On Simples(/\"On Simple Scalars\"? \"On Scalars\"? \"Pervade\"?) (`⍤0⍥0`)? it seems like a nice primitive to have","msgtype":"m.text","formatted_body":"what could be a glyph for On Simples(/&quot;On Simple Scalars&quot;? &quot;On Scalars&quot;? &quot;Pervade&quot;?) (<code>⍤0⍥0<\/code>)? it seems like a nice primitive to have"},"m.relates_to":{"event_id":"$6DToXoUGZat1YlBWNEanRTGSapEKPmjYCKhU8P34GXE","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* what could be a glyph for On Simples(/\"On Simple Scalars\"? \"On Scalars\"? \"Pervade\"?) (`⍤0⍥0`)? it seems like a nice primitive to have","msgtype":"m.text","formatted_body":"* what could be a glyph for On Simples(/&quot;On Simple Scalars&quot;? &quot;On Scalars&quot;? &quot;Pervade&quot;?) (<code>⍤0⍥0<\/code>)? it seems like a nice primitive to have"}}
{"state_key":"@_discord_506589628418097152:t2bot.io","origin_server_ts":1722631297590,"event_id":"$Hogw5pUFxtf99rRZNnjRDGe4dGFAU1-GRIL1IZdknww","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.member","content":{"avatar_url":"mxc://t2bot.io/bd00c3aee6bd692a6f32b7dac813d0322ab385711746302884384866304","displayname":"bear8642","membership":"join"}}
{"state_key":"@_discord_506589628418097152:t2bot.io","origin_server_ts":1722631298276,"event_id":"$RMwOTTC36PgEja-Lye0laHS_pKWA8VrGOcn5sx9zVGs","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","prev_content":{"avatar_url":"mxc://t2bot.io/bd00c3aee6bd692a6f32b7dac813d0322ab385711746302884384866304","displayname":"bear8642","membership":"join"},"type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":9807270,"name":"k god","position":12},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"506589628418097152","username":"bear8642#0"},"avatar_url":"mxc://t2bot.io/bd00c3aee6bd692a6f32b7dac813d0322ab385711746302884384866304","displayname":"silas","membership":"join"},"replaces_state":"$Hogw5pUFxtf99rRZNnjRDGe4dGFAU1-GRIL1IZdknww"}
{"origin_server_ts":1722631298623,"event_id":"$5cSgln6eNaKWkqzu-2epmTEMyKph33Z6oGwwdrVu98c","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Is there a triple circle?","msgtype":"m.text","formatted_body":"Is there a triple circle?"}}
{"origin_server_ts":1722631742216,"event_id":"$BrRb9xUHU5k3DCngU_dIL2Bh0LtfppixXDmu_oKxq9E","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$5cSgln6eNaKWkqzu-2epmTEMyKph33Z6oGwwdrVu98c"}},"format":"org.matrix.custom.html","body":"no, there's a few double circles though","msgtype":"m.text","formatted_body":"no, there&#x27;s a few double circles though"}}
{"origin_server_ts":1722631781176,"event_id":"$K8rG74-w_tCo7HU6wvdHezznhXeGX06dY9PqUwopRq8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe `⚇︎` could work, since it's related to Each?","msgtype":"m.text","formatted_body":"maybe <code>⚇︎<\/code> could work, since it&#x27;s related to Each?"}}
{"origin_server_ts":1722631800191,"event_id":"$PjWD3if4dCjIlBYLDOmcQiF0UUtZmA4jeatV4HvCee8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"wait... does depth already do rank zero?","msgtype":"m.text","formatted_body":"wait... does depth already do rank zero?"}}
{"origin_server_ts":1722631834042,"event_id":"$FmyJXUf2PRchg84kCmlVajNyZaYxJ6nkci1Om8ufJzg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"ok no it doesn't","msgtype":"m.text","formatted_body":"ok no it doesn&#x27;t"}}
{"origin_server_ts":1722632003760,"event_id":"$2GJBszqecP5uv8vrPJGvS6wgmSDsGhDOnXm0Vlw-6nM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i'm not even convinced it's needed as a primitive but i think it could be useful sometimes","msgtype":"m.text","formatted_body":"i&#x27;m not even convinced it&#x27;s needed as a primitive but i think it could be useful sometimes"}}
{"origin_server_ts":1722635779476,"event_id":"$1zHXAw70cDSSgrRcsoXUSePIy2FJZeJen1OnetGxS_I","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"...on the other hand maybe I shouldn't add every primitive i think of, even if now with the four APL layers I have lots of space for extra glyphs (:","msgtype":"m.text","formatted_body":"...on the other hand maybe I shouldn&#x27;t add every primitive i think of, even if now with the four APL layers I have lots of space for extra glyphs (:"}}
{"origin_server_ts":1722639157703,"event_id":"$3kH0bJnxlmQyjGgQ2Y5IcfEDryyPAoZ7UGZ8Pc6M0X4","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Doesn't `each` achieve that?","msgtype":"m.text","formatted_body":"Doesn&#x27;t <code>each<\/code> achieve that?"}}
{"origin_server_ts":1722639939991,"event_id":"$oS-beBIKR3mX94tOJA7GpyY7p4BNj_QetzGlIwMs87s","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`F⍥0` is like `F¨¨¨¨¨\u2026¨¨`","msgtype":"m.text","formatted_body":"<code>F⍥0<\/code> is like <code>F¨¨¨¨¨\u2026¨¨<\/code>"}}
{"origin_server_ts":1722639957952,"event_id":"$0oWAUFKEqokNOe2EZ_0Kz-0Biv8vQm6553KJBUv22aA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(`F¨` is `F⍥¯1`)","msgtype":"m.text","formatted_body":"(<code>F¨<\/code> is <code>F⍥¯1<\/code>)"}}
{"origin_server_ts":1722640121279,"event_id":"$OB619rCqF5mQR4tLL31DsfW81_TKuhK_5ip256A2n6Y","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$FmyJXUf2PRchg84kCmlVajNyZaYxJ6nkci1Om8ufJzg"}},"format":"org.matrix.custom.html","body":"> <@_discord_604614910030118912:t2bot.io> ok no it doesn't\n\nit should, shouldn't it? `⍥1` should be the thing that does array leaves","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$FmyJXUf2PRchg84kCmlVajNyZaYxJ6nkci1Om8ufJzg?via=matrix.org&via=t2bot.io&via=dhsdevelopments.com\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">@_discord_604614910030118912:t2bot.io<\/a><br />ok no it doesn&#x27;t<\/blockquote><\/mx-reply>it should, shouldn't it? <code>⍥1<\/code> should be the thing that does array leaves"}}
{"origin_server_ts":1722640246840,"event_id":"$mbLa5eECsSoJ74r01Oyr-7RYTp6I6RyuwdPt9bYCLT0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"ah, right, because only scalars have depth `0` and simple arrays have depth `1`","msgtype":"m.text","formatted_body":"ah, right, because only scalars have depth <code>0<\/code> and simple arrays have depth <code>1<\/code>"}}
{"origin_server_ts":1722640258697,"event_id":"$E9TjZ06nlBicrRbsUKrPnc0EYVyGFefuJq4c7H77m9I","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"so `⍤0` before is just not needed?","msgtype":"m.text","formatted_body":"so <code>⍤0<\/code> before is just not needed?"}}
{"origin_server_ts":1722640268754,"event_id":"$v-mYuLYSRzhQfLJX1vZECbkwcqXnai4BuHu-H-NMbK0","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"body":"yeah","msgtype":"m.text"}}
{"origin_server_ts":1722640269781,"event_id":"$nCGtI1tdBA_-lA-ttUy8EM58pUnjogr2vkdYFfBwWmE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in that case maybe there doesn't need to be a primitive for on scalars then","msgtype":"m.text","formatted_body":"in that case maybe there doesn&#x27;t need to be a primitive for on scalars then"}}
{"state_key":"@_discord_160673472530350080:t2bot.io","origin_server_ts":1722642738910,"event_id":"$8gDK5wMXNEbX6FKVo0C8HOKaAsXGWVKYopHkYrTKe8Y","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"160673472530350080","username":"ludvikgalois#0"},"avatar_url":"mxc://t2bot.io/5827abec4e30d491cd06dbe80a6f057716d6b1ea1819521625817612288","displayname":"ludvikgalois","membership":"join"}}
{"state_key":"@_discord_828684654454112286:t2bot.io","origin_server_ts":1722667607729,"event_id":"$ExWZVY-Qd8IsV7FL5D2i0Jm1cmhK8_559xTXuRXwgaA","sender":"@_discord_828684654454112286:t2bot.io","user_id":"@_discord_828684654454112286:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":2123412,"name":"J-edi","position":11},{"color":0,"name":"@everyone","position":0}],"displayColor":2123412,"id":"828684654454112286","username":"bobterryo#0"},"avatar_url":"mxc://t2bot.io/87b031def8f42f4218daefa35370b2576f8768b71748045515594924032","displayname":"bobterryo","membership":"join"}}
{"origin_server_ts":1722690170656,"event_id":"$tyM8HuG5ei7t5R2OocBfVZ2zm0F4LGuP3DY70Ah6o3o","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Think J needs both depth and rank 0 for scalars, but otherwise not","msgtype":"m.text","formatted_body":"Think J needs both depth and rank 0 for scalars, but otherwise not"}}
{"origin_server_ts":1722694879977,"event_id":"$jgP_y9QPdiqGvnTKf4WrurNK0YVdM0VgIJeIafwSJaA","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I\u2019m not following the whole conversation but can you give an example of how you mean this?","msgtype":"m.text","formatted_body":"I\u2019m not following the whole conversation but can you give an example of how you mean this?"}}
{"origin_server_ts":1722694970356,"event_id":"$wBhc-SsNsxWLOxxlnQMLwjblK1NueVYODqruDX89xTQ","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in J simple arrays are depth 0, while in APL they have depth 1","msgtype":"m.text","formatted_body":"in J simple arrays are depth 0, while in APL they have depth 1"}}
{"origin_server_ts":1722695365076,"event_id":"$HF1h3ARkFDKAby3enXpOdqhbnigUd3TrjBPttZHmnZc","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You don\u2019t have mixed arrays in J like you do in APL so you don\u2019t deal with \u201cdepth\u201d as a concept as much.","msgtype":"m.text","formatted_body":"You don\u2019t have mixed arrays in J like you do in APL so you don\u2019t deal with \u201cdepth\u201d as a concept as much."}}
{"origin_server_ts":1722695589399,"event_id":"$BhLs3duE8Z3G81haOCrKJeY3YvAChE_w2y_Dew3dCSI","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah; for a J \"on simple scalars\" one would probably want two versions, one where the function returns scalars and they're merged into simple array leaves, and another that puts the results in boxes","msgtype":"m.text","formatted_body":"yeah; for a J \"on simple scalars\" one would probably want two versions, one where the function returns scalars and they're merged into simple array leaves, and another that puts the results in boxes"}}
{"origin_server_ts":1722696823061,"event_id":"$k0xFVb7GpHMsPgYtqhqIYZ72BD3t-jR72l4-BixU3pE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i can't decide if i want namespaces in tinyapl or not, are they useful?","msgtype":"m.text","formatted_body":"i can&#x27;t decide if i want namespaces in tinyapl or not, are they useful?"}}
{"origin_server_ts":1722698431822,"event_id":"$MGkYVFIoxFTkD4hmhtfIO5cclB3-PbnvwUdDSHninxk","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i think namespaces are always useful if you want to develop anything real","msgtype":"m.text","formatted_body":"i think namespaces are always useful if you want to develop anything real"}}
{"origin_server_ts":1722698432414,"event_id":"$otNPVpmWCDwOZwn8fRQcy9CkEuqUdF2vQqJylRHbukk","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Depends what you're doing. Seem to be primarily used for tree/object based things and where you don't want to commit to array shapes","msgtype":"m.text","formatted_body":"Depends what you&#x27;re doing. Seem to be primarily used for tree/object based things and where you don&#x27;t want to commit to array shapes"}}
{"origin_server_ts":1722698466610,"event_id":"$VXosIHjPdBsLwX8J_UyRV0gc0xe7CUo_80lv5A_CuEU","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i always miss good namespaces in k","msgtype":"m.text","formatted_body":"i always miss good namespaces in k"}}
{"origin_server_ts":1722698647944,"event_id":"$KV-icO7c3I3XwtuuDURpaxltJH8utPkV4oHsPE9nMco","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Might be worth investing implementation effort before committing either way. You're making a tinyapl","msgtype":"m.text","formatted_body":"Might be worth investing implementation effort before committing either way. You&#x27;re making a tinyapl"}}
{"origin_server_ts":1722698655975,"event_id":"$_Ivkyy7ffY0QPUqSiu83eX-RgIjj004jkaWh2VO40AU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"mostly I was thinking of namespaces because I'd like to have a standard library and putting 3000 functions in the main scope might get annoying","msgtype":"m.text","formatted_body":"mostly I was thinking of namespaces because I&#x27;d like to have a standard library and putting 3000 functions in the main scope might get annoying"}}
{"origin_server_ts":1722698734051,"event_id":"$f7WJ8zvC4DUgFTym7ITzUjsxNmhHsp-2CbLZ6MoA4f8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$KV-icO7c3I3XwtuuDURpaxltJH8utPkV4oHsPE9nMco"}},"format":"org.matrix.custom.html","body":"yeah, maybe I can do some testing first","msgtype":"m.text","formatted_body":"yeah, maybe I can do some testing first"}}
{"origin_server_ts":1722698744825,"event_id":"$asiTCRENeXHJoYiNqCyCf5DzcLaNBkYfUVGyQELrf_o","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but theoretically there shouldn't be many changes needed","msgtype":"m.text","formatted_body":"but theoretically there shouldn&#x27;t be many changes needed"}}
{"origin_server_ts":1722698752584,"event_id":"$AZGnGT5GWXunOgPiMOLON_PoLhkpTYl7x4iF2f9ayZo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"might be very wrong of course(:","msgtype":"m.text","formatted_body":"might be very wrong of course(:"}}
{"origin_server_ts":1722698777759,"event_id":"$7o9pwRrlEmePLUc2j_TpV7pOySouiBqcOJez0TjY-44","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the main problem is that mutating something inside the namespace has to bubble up","msgtype":"m.text","formatted_body":"the main problem is that mutating something inside the namespace has to bubble up"}}
{"origin_server_ts":1722698802397,"event_id":"$-nKn3v4K5_ATFN3ztuyhNjYG_Qv3M3l60IKlsS9bgaM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"wait... what if I make an alias?","msgtype":"m.text","formatted_body":"wait... what if I make an alias?"}}
{"origin_server_ts":1722698811350,"event_id":"$QIQCbsn_Qc9MFbV5f0Dd3OxteT6DsNWTHEm10WrO6RY","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Indeed! Haven't looked at your code much, but namespaces mean have to properly garbage collect","msgtype":"m.text","formatted_body":"Indeed! Haven&#x27;t looked at your code much, but namespaces mean have to properly garbage collect"}}
{"origin_server_ts":1722698897370,"event_id":"$FPAtRqFFal_SZH_qixWwiJZA4Dm7rxMvHtck-VAI8Uo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe I can do immutable namespaces only?","msgtype":"m.text","formatted_body":"maybe I can do immutable namespaces only?"}}
{"origin_server_ts":1722698941495,"event_id":"$E9H-gRpqP5C-DejxsuttWGRYuBjNcOib21t_-nckI9Y","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah now that I think about it they could introduce a lot of complexity that I don't know how to cleanly deal with","msgtype":"m.text","formatted_body":"yeah now that I think about it they could introduce a lot of complexity that I don&#x27;t know how to cleanly deal with"}}
{"origin_server_ts":1722699976349,"event_id":"$cNi-0foW5SKObXQJEjoH4mopEydvFcb-w9kpc9QUCTo","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"namespaces are a good way to do moduling","msgtype":"m.text","formatted_body":"namespaces are a good way to do moduling"}}
{"origin_server_ts":1722700057058,"event_id":"$QQ1N4rupVqqMjwY4oi7M43gX5St7FLY6Kxua4gCojPc","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"they are convenience over closures","msgtype":"m.text","formatted_body":"they are convenience over closures"}}
{"origin_server_ts":1722703074764,"event_id":"$a-6v_jZWJSdJtRyWvzG6MTtNgkbHU8kOzHAu9VeWKos","sender":"@_discord_506589628418097152:t2bot.io","user_id":"@_discord_506589628418097152:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Well, there the quote about them being a poor man's version of each other","msgtype":"m.text","formatted_body":"Well, there the quote about them being a poor man&#x27;s version of each other"}}
{"origin_server_ts":1722703442584,"event_id":"$BH6HBaJ7UYWX4v6ulo5rWg0LOaU9IURp5rKUTfRi7hQ","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"So, the rich will buy both.","msgtype":"m.text","formatted_body":"So, the rich will buy both."}}
{"origin_server_ts":1722703542392,"event_id":"$nH2kp_0r7vIP1maZ-bpzBRG3MeT4k1HYUNtyUbk1mZc","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The BQN version is just a closure that exposes the specified names for reading. So it gets its mutability from variable mutation in code within the namespace; it'll be mutable only if closures are.","msgtype":"m.text","formatted_body":"The BQN version is just a closure that exposes the specified names for reading. So it gets its mutability from variable mutation in code within the namespace; it'll be mutable only if closures are."}}
{"origin_server_ts":1722703570194,"event_id":"$WPNld7HcPtDkfxWhbj7YR4V21tP_0GNPNPgZ6bxd8wA","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"variable assignment is the poor man's function call etc etc","msgtype":"m.text","formatted_body":"variable assignment is the poor man&#x27;s function call etc etc"}}
{"origin_server_ts":1722703820472,"event_id":"$YC2eYDdfkOkRuFs-CHyEYhXmry0LhET_u2DrZ7QJWsA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$MGkYVFIoxFTkD4hmhtfIO5cclB3-PbnvwUdDSHninxk"}},"format":"org.matrix.custom.html","body":"> <@_discord_846111898888831016:t2bot.io> i think namespaces are always useful if you want to develop anything real\n\nExactly this. Look at Emacs if you want to see a system where you don't have namespaces but where everybody have sort of built a bad replacement by using certain naming conventions instead. Terrible. ","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$MGkYVFIoxFTkD4hmhtfIO5cclB3-PbnvwUdDSHninxk?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_846111898888831016:t2bot.io\">@_discord_846111898888831016:t2bot.io<\/a><br />i think namespaces are always useful if you want to develop anything real<\/blockquote><\/mx-reply>Exactly this. Look at Emacs if you want to see a system where you don't have namespaces but where everybody have sort of built a bad replacement by using certain naming conventions instead. Terrible."}}
{"origin_server_ts":1722703881045,"event_id":"$XEXBiQXObMLE3tPRzs9nZ-cZQHZnw8YVCPIS4a6C7GM","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Oh, but if functions/operators can't return functions now then maybe there is some implementation support needed.","msgtype":"m.text","formatted_body":"Oh, but if functions/operators can't return functions now then maybe there is some implementation support needed."}}
{"origin_server_ts":1722703925959,"event_id":"$oK2rt-SYdTffN4ENyGktBG7yuZNEVY4jl2IiM61Bxio","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Adding namespaces is a trivial thing to do though. It's just a second layer to identifiers.","msgtype":"m.text"}}
{"origin_server_ts":1722703948731,"event_id":"$BxgWq6yxdITB4T_byKyvX6BKFSQYi4fZN4FYAoA79eI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Instead of a symbol being just a name, it's now a name in a namespace.","msgtype":"m.text"}}
{"origin_server_ts":1722703959396,"event_id":"$e09A7slbsf3q2KUqfGtZVRl8CgEF2V844gklfnVEFGU","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$YC2eYDdfkOkRuFs-CHyEYhXmry0LhET_u2DrZ7QJWsA"}},"format":"org.matrix.custom.html","body":"and C lol","msgtype":"m.text","formatted_body":"and C lol"}}
{"origin_server_ts":1722703970488,"event_id":"$FZ3hZ_RPl3oJ2hqSLVsMCoHxFfYGlMw72NwpEUmqfNo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Oh yeah. Of course. ","msgtype":"m.text"}}
{"origin_server_ts":1722703993276,"event_id":"$182uEYSOya3f47LpJ_pt8UTxrA1t7WDsD6dWNMmuqSM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"And the same solution is practiced there","msgtype":"m.text"}}
{"origin_server_ts":1722703999931,"event_id":"$ZZ2lTABkg45GVKEAUZwERRzNO1LROk7o_QZnu0xEJiw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"And equally bad","msgtype":"m.text"}}
{"origin_server_ts":1722704407746,"event_id":"$lXLmwMjqtERkZ3hc8Z8yxeN7QhgsftzJsOCfUFw3FwE","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"In Singeli we've been getting along without them, although of course we're not at the point where the people writing libraries are different from the people using them. Having a scoping system helps a lot. You could do a renaming import like this with only one useless name introduced.\n```\nlocal {\n  local include 'util/tup'\n  def tup_exports = tup{iota, copy}\n}\ndef {tup_iota, tup_copy} = tup_exports\n```","msgtype":"m.text","formatted_body":"In Singeli we've been getting along without them, although of course we're not at the point where the people writing libraries are different from the people using them. Having a scoping system helps a lot. You could do a renaming import like this with only one useless name introduced.<br><pre><code>local {\n  local include &#39;util/tup&#39;\n  def tup_exports = tup{iota, copy}\n}\ndef {tup_iota, tup_copy} = tup_exports<\/code><\/pre>"}}
{"origin_server_ts":1722705159253,"event_id":"$czuWA6hshNOpBiK6j38isuBS8lnQ1IUTDLjdpX7beE0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$BxgWq6yxdITB4T_byKyvX6BKFSQYi4fZN4FYAoA79eI"}},"format":"org.matrix.custom.html","body":"not sure i follow","msgtype":"m.text","formatted_body":"not sure i follow"}}
{"origin_server_ts":1722706602424,"event_id":"$w-dARtTcXfC_qKIKjSxjZkr_tX3BaN8KsK_mOp6FwH4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"I mean, in its simplest form, adding a namespace is just making symbols into a pair of strings rather than a single string.","msgtype":"m.text"}}
{"origin_server_ts":1722706644607,"event_id":"$hB62n7ENa-xm3z91Y6XJ3H3a3eJmbK4UC1BGBv-ZRHI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Once the parser has transformed the string into the appropriate symbol object, everything else is the same ","msgtype":"m.text"}}
{"origin_server_ts":1722706651376,"event_id":"$tDZWjEu-Khs2vrObwQj0wRF_oYxC_hrGlMF5OXZ3Ccw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"body":"Once the parser has transformed the string into the appropriate symbol object, everything else is the same.","msgtype":"m.text"},"m.relates_to":{"event_id":"$hB62n7ENa-xm3z91Y6XJ3H3a3eJmbK4UC1BGBv-ZRHI","rel_type":"m.replace"},"body":"* Once the parser has transformed the string into the appropriate symbol object, everything else is the same.","msgtype":"m.text"}}
{"origin_server_ts":1722707477294,"event_id":"$X1qtgI-tUm_ONYWoLmr7GckG3-r1-_uJMbGPVB7I1IQ","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"no nested namespaces? :megamind:","msgtype":"m.text","formatted_body":"no nested namespaces? :megamind:"}}
{"origin_server_ts":1722707525481,"event_id":"$m1dZrNorVBgZ3hTYqrQlKS2WkzOL7rmFsIU_wr-YcZY","sender":"@_discord_156021301654454272:t2bot.io","user_id":"@_discord_156021301654454272:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"no nested or dynamic namespaces? :megamind:","msgtype":"m.text","formatted_body":"no nested or dynamic namespaces? :megamind:"},"m.relates_to":{"event_id":"$X1qtgI-tUm_ONYWoLmr7GckG3-r1-_uJMbGPVB7I1IQ","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* no nested or dynamic namespaces? :megamind:","msgtype":"m.text","formatted_body":"* no nested or dynamic namespaces? :megamind:"}}
{"origin_server_ts":1722710164741,"event_id":"$DUV7ariddHzYayFhvvBOypIIIGweTM6hmDI5isbcSYU","sender":"@subsetpark:matrix.org","user_id":"@subsetpark:matrix.org","type":"m.room.message","content":{"m.mentions":{},"body":"Erlang/elixir\u2019s name spacing and module system is the best there ever was. Everything else is secondary :)","msgtype":"m.text"}}
{"origin_server_ts":1722713440422,"event_id":"$fmaBZRDMrZd85pLud_u-xc8BpmVqNScPHUOzferUCM4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$w-dARtTcXfC_qKIKjSxjZkr_tX3BaN8KsK_mOp6FwH4"}},"format":"org.matrix.custom.html","body":"oh, with that meaning of namespace","msgtype":"m.text","formatted_body":"oh, with that meaning of namespace"}}
{"origin_server_ts":1722713472016,"event_id":"$wCmUv74u_G4YmUFBCIF_wm0FgkbRX_ojQnpBhqUrMhE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I was thinking something more similar to Dyalog's, where namespaces are scalars you can put in arrays and pass around","msgtype":"m.text","formatted_body":"I was thinking something more similar to Dyalog&#x27;s, where namespaces are scalars you can put in arrays and pass around"}}
{"origin_server_ts":1722715810564,"event_id":"$7dCnaIa3qMJVbF2Is5hx5V1EsAy5qZ8pbHmS1pIs_dc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"why is outer product defined to box the results instead of mixing them into a higher rank array? alternative question, could it be useful to use this alternative definition instead of the traditional one in TinyAPL?","msgtype":"m.text","formatted_body":"why is outer product defined to box the results instead of mixing them into a higher rank array? alternative question, could it be useful to use this alternative definition instead of the traditional one in TinyAPL?"}}
{"origin_server_ts":1722715842107,"event_id":"$zv4sMN8kLB2QN_oNChMItSawMGCdyby5-N0N6z6hVNA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"of course the two are equivalent - nested to flat is Mix after the outer product, flat to nested is Enclose in the operand","msgtype":"m.text","formatted_body":"of course the two are equivalent - nested to flat is Mix after the outer product, flat to nested is Enclose in the operand"}}
{"origin_server_ts":1722715885562,"event_id":"$-B9q6fQGKpL0KYpDgQ-kWpbjlZICRHL4TdYmUN7oZgc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but keeping it flat seems like the more APL-y thing, idk","msgtype":"m.text","formatted_body":"but keeping it flat seems like the more APL-y thing, idk"}}
{"origin_server_ts":1722716103658,"event_id":"$NadJoRJwSBUNQdjvQUYdaSrcFEXNQie1ymoP4Q4jasA","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that'd result in the rather weird thing of `(1 2)(3 4) ∘.+ (5 6)(7 8)` giving a depth-1 output, even though the inputs are depth-2","msgtype":"m.text","formatted_body":"that'd result in the rather weird thing of <code>(1 2)(3 4) ∘.+ (5 6)(7 8)<\/code> giving a depth-1 output, even though the inputs are depth-2"}}
{"origin_server_ts":1722716127007,"event_id":"$R2myxW6iQaN4UGKwutAdt4_fjEE7ZguWNK64xYMIoF4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"by the same logic, you could make `¨` \"flat\" by having it include a mix","msgtype":"m.text","formatted_body":"by the same logic, you could make <code>¨<\/code> \"flat\" by having it include a mix"}}
{"origin_server_ts":1722717433092,"event_id":"$Ttqh15vo0ElemcOnkOPEBS8Gu_mkSb8IAzfQuz1YgGU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it's not something I really thought about, just came across a case where flat would've been easier and wondered if it could make sense generally","msgtype":"m.text","formatted_body":"it&#x27;s not something I really thought about, just came across a case where flat would&#x27;ve been easier and wondered if it could make sense generally"}}
{"origin_server_ts":1722717452853,"event_id":"$w0wxqbkem8MrMj9T7NSweuM9_LFo-DfHfcg35oLvkCA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"though I'm not convinced my definition would result in a depth 1 result for that case","msgtype":"m.text","formatted_body":"though I&#x27;m not convinced my definition would result in a depth 1 result for that case"}}
{"origin_server_ts":1722717467991,"event_id":"$Qyf-WzFgzPYqd2euXXsIGHDWECitA34NDVMrsidMXaQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe Mix atop nested Table would","msgtype":"m.text","formatted_body":"maybe Mix atop nested Table would"}}
{"origin_server_ts":1722717602850,"event_id":"$j3kC_CyzxN0V6OItdnWjSqLPqja98ny7D8BlmHw2GhU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but with my definition I don't think so? it'd just collect the scalars even if they're nested","msgtype":"m.text","formatted_body":"but with my definition I don&#x27;t think so? it&#x27;d just collect the scalars even if they&#x27;re nested"}}
{"origin_server_ts":1722718198706,"event_id":"$Xi8OE-_an9DkIn7dV90DiYX0BIuNNyZrhbtB6sCXxc4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"what's \"collect the scalars\" here","msgtype":"m.text","formatted_body":"what's \"collect the scalars\" here"}}
{"origin_server_ts":1722718352094,"event_id":"$VoS-9fhsRsPPwtV9SS0adVlnHy7qwSXLHrEH9PE--nI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"like, because the result of the inner function is a scalar, it does nothing; if it was a vector it would introduce a trailing axis; etc","msgtype":"m.text","formatted_body":"like, because the result of the inner function is a scalar, it does nothing; if it was a vector it would introduce a trailing axis; etc"}}
{"origin_server_ts":1722718406500,"event_id":"$SEnVUvW-t91tRFT_JoPQTlAUEwRdB3PjONqy6DYtVic","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`(1 2)(3 4) ∘.+ (5 6)(7 8)` runs does e.g. `1 2 + 5 6` returning a vector `6 8` though","msgtype":"m.text","formatted_body":"<code>(1 2)(3 4) ∘.+ (5 6)(7 8)<\/code> runs does e.g. <code>1 2 + 5 6<\/code> returning a vector <code>6 8<\/code> though"}}
{"origin_server_ts":1722718415123,"event_id":"$oPYjJ4fR9zKs4IfPmIEjyfoHt5CBTcoP_lpv1IvW89c","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"`(1 2)(3 4) ∘.+ (5 6)(7 8)` does e.g. `1 2 + 5 6` returning a vector `6 8` though","msgtype":"m.text","formatted_body":"<code>(1 2)(3 4) ∘.+ (5 6)(7 8)<\/code> does e.g. <code>1 2 + 5 6<\/code> returning a vector <code>6 8<\/code> though"},"m.relates_to":{"event_id":"$SEnVUvW-t91tRFT_JoPQTlAUEwRdB3PjONqy6DYtVic","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* `(1 2)(3 4) ∘.+ (5 6)(7 8)` does e.g. `1 2 + 5 6` returning a vector `6 8` though","msgtype":"m.text","formatted_body":"* <code>(1 2)(3 4) ∘.+ (5 6)(7 8)<\/code> does e.g. <code>1 2 + 5 6<\/code> returning a vector <code>6 8<\/code> though"}}
{"origin_server_ts":1722718450540,"event_id":"$WMlFFaLROB9mOk3IfhDD9BYHoDaoJuUBycNBfVQd7NY","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah because there's an implicit each which I was excluding from my model","msgtype":"m.text","formatted_body":"yeah because there&#x27;s an implicit each which I was excluding from my model"}}
{"origin_server_ts":1722718459275,"event_id":"$OspJSwIZ23mOr-V7ePe1cFcuOy2ejPUCzr9J7pAIvgk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"...I guess I didn't say that part","msgtype":"m.text","formatted_body":"...I guess I didn&#x27;t say that part"}}
{"origin_server_ts":1722718481875,"event_id":"$dbQEV4q5KiF_mWQopwiVavXV4VlTDkasvepCbHoivsM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"so maybe converting between the two isn't that simple?","msgtype":"m.text","formatted_body":"so maybe converting between the two isn&#x27;t that simple?"}}
{"origin_server_ts":1722718496117,"event_id":"$d69aQe9WSLKGHtg2tVMTI2jcd3gMrLIgOy8S5F1gmhg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe flat -> nested is just Each on the inner function though","msgtype":"m.text","formatted_body":"maybe flat -&gt; nested is just Each on the inner function though"}}
{"origin_server_ts":1722718507622,"event_id":"$3XFQBmCau1HLH_rhexB7V8PFBougACNx30Zeh9fmqMM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the reverse I'm not sure","msgtype":"m.text","formatted_body":"the reverse I&#x27;m not sure"}}
{"origin_server_ts":1722718528862,"event_id":"$M56VYK13GRZ2FKnhdJyayj7jy0qUpglhfeX3dJQuG_s","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$WMlFFaLROB9mOk3IfhDD9BYHoDaoJuUBycNBfVQd7NY"}},"format":"org.matrix.custom.html","body":"like `a (F⍤0 99) b`?","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$WMlFFaLROB9mOk3IfhDD9BYHoDaoJuUBycNBfVQd7NY\"> ↰ <\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a> <\/mx-reply>like <code>a (F⍤0 99) b<\/code>?"}}
{"origin_server_ts":1722718731911,"event_id":"$zHz7pa9A5D0CS6CBRTlQ1i4wyMg_Sewzu9KVsOvLuDs","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I don't think so, `((1 2)(3 4)) ({⊃⍵}⍤0 99) ((5 6)(7 8))` returns a rank 2 result so it's not right","msgtype":"m.text","formatted_body":"I don&#x27;t think so, <code>((1 2)(3 4)) ({⊃⍵}⍤0 99) ((5 6)(7 8))<\/code> returns a rank 2 result so it&#x27;s not right"}}
{"origin_server_ts":1722718977933,"event_id":"$nufPSnKcv0v6OgEaVLqwVVlpcHji03pjn6d0pkOwDfs","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"then I don't understand what your model could be","msgtype":"m.text","formatted_body":"then I don't understand what your model could be"}}
{"origin_server_ts":1722724076905,"event_id":"$qtVHSqrvqPrBm0NwWK_49ejXTSpexo_Qu-oaKf7Wa4s","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"apply function to each pair of elements of the two arguments, combining the results as cells, in the same way Rank does","msgtype":"m.text","formatted_body":"apply function to each pair of elements of the two arguments, combining the results as cells, in the same way Rank does"}}
{"origin_server_ts":1722724264202,"event_id":"$c3DB5bFyJDD1goglFUtPLi6vv0DNXDe9EP7A1SYwc-4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"rank operates on cells, not elements, which is why it's more reasonable for it to put its results in cells not elements","msgtype":"m.text","formatted_body":"rank operates on cells, not elements, which is why it's more reasonable for it to put its results in cells not elements"}}
{"origin_server_ts":1722724383038,"event_id":"$PKmk6Gharhr8rjj1OPMKDjfloZf-TqDf-36NTkdDAlo","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i.e. `a ∘.F b` reimplemented with `⍤` looks like `a ((⊂F⍥⊃)⍤0⍤0 99) b` - the `⊃` and `⊂` are \"balanced\"","msgtype":"m.text","formatted_body":"i.e. <code>a ∘.F b<\/code> reimplemented with <code>⍤<\/code> looks like <code>a ((⊂F⍥⊃)⍤0⍤0 99) b<\/code> - the <code>⊃<\/code> and <code>⊂<\/code> are \"balanced\""}}
{"origin_server_ts":1722724477019,"event_id":"$ANHVQA70ptrHOYmXw9zzqne1cv7IhalmI5UxjWOIkIc","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(simpler form being `a ({⍺⍵}¨⍤0 99) b` but that uses `¨`)","msgtype":"m.text","formatted_body":"(simpler form being <code>a ({⍺⍵}¨⍤0 99) b<\/code> but that uses <code>¨<\/code>)"}}
{"origin_server_ts":1722725194476,"event_id":"$XSgHtJv9ed-eZovbjMLmEd5LHugQoQfvonP9IfBgOeU","redacted_because":{"room_id":"!WpdazzauuDxyGNAiCr:matrix.org","origin_server_ts":1722725614130,"event_id":"$0AuzKfo2MZXrn4FM14ruWELP9SzrHqFMMNsg49WVVS4","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","unsigned":{},"redacts":"$XSgHtJv9ed-eZovbjMLmEd5LHugQoQfvonP9IfBgOeU","type":"m.room.redaction","content":{"redacts":"$XSgHtJv9ed-eZovbjMLmEd5LHugQoQfvonP9IfBgOeU"}},"sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{}}
{"origin_server_ts":1722725614130,"event_id":"$0AuzKfo2MZXrn4FM14ruWELP9SzrHqFMMNsg49WVVS4","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","redacts":"$XSgHtJv9ed-eZovbjMLmEd5LHugQoQfvonP9IfBgOeU","type":"m.room.redaction","content":{"redacts":"$XSgHtJv9ed-eZovbjMLmEd5LHugQoQfvonP9IfBgOeU"}}
{"origin_server_ts":1722727531167,"event_id":"$cVDkbpmSSidHlTnigVdokSlhO4zFzNpQW6IaKBZh-F8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$c3DB5bFyJDD1goglFUtPLi6vv0DNXDe9EP7A1SYwc-4"}},"format":"org.matrix.custom.html","body":"this is a good explanation, thanks","msgtype":"m.text","formatted_body":"this is a good explanation, thanks"}}
{"origin_server_ts":1722727540737,"event_id":"$vGIuJ9_jG62Zv38u3pimQ_GM7EygJgbihHHKU4wbH-A","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"not every random idea makes sense!","msgtype":"m.text","formatted_body":"not every random idea makes sense!"}}
{"origin_server_ts":1722727668808,"event_id":"$sxxuz4qeDh5SestDr5_P1ZQ2BAsbhExbHlZag3x4mqA","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that particular thing of matching input to output type isn't necessarily mandatory though; e.g. I think it'd be quite useful to have a primitive for `{⊂⍺F⍵}⍤k`, i.e. a Rank that doesn't mix results","msgtype":"m.text","formatted_body":"that particular thing of matching input to output type isn't necessarily mandatory though; e.g. I think it'd be quite useful to have a primitive for <code>{⊂⍺F⍵}⍤k<\/code>, i.e. a Rank that doesn't mix results"}}
{"origin_server_ts":1722727701298,"event_id":"$_DbsppANMkBtMueGIdu8nFkDDpdR9seG8ECe7ycLvak","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"whether that'd be acceptable as the only Rank is a much more difficult question","msgtype":"m.text","formatted_body":"whether that'd be acceptable as the only Rank is a much more difficult question"}}
{"state_key":"@_discord_898723608426340373:t2bot.io","origin_server_ts":1722736512683,"event_id":"$q4RXO9j-LVPdtfSAzP1dPy0gb1udgQw4_BibCUYdbkY","sender":"@_discord_898723608426340373:t2bot.io","user_id":"@_discord_898723608426340373:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"898723608426340373","username":"andrewcraig_#0"},"avatar_url":"","displayname":"andrewcraig_","membership":"join"}}
{"origin_server_ts":1722745377369,"event_id":"$M148ac-A-NtZ8N7upCV3J3Barlf5ahybtKmqKb5GoQM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$sxxuz4qeDh5SestDr5_P1ZQ2BAsbhExbHlZag3x4mqA"}},"m.mentions":{"user_ids":["@dzaima:matrix.org"]},"format":"org.matrix.custom.html","body":"> <@dzaima:matrix.org> that particular thing of matching input to output type isn't necessarily mandatory though; e.g. I think it'd be quite useful to have a primitive for `{⊂⍺F⍵}⍤k`, i.e. a Rank that doesn't mix results\n\nI'd say I use that a lot more than regular rank.","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$sxxuz4qeDh5SestDr5_P1ZQ2BAsbhExbHlZag3x4mqA?via=matrix.org&via=t2bot.io&via=dhsdevelopments.com\">In reply to<\/a> <a href=\"https://matrix.to/#/@dzaima:matrix.org\">@dzaima:matrix.org<\/a><br>that particular thing of matching input to output type isn't necessarily mandatory though; e.g. I think it'd be quite useful to have a primitive for <code>{⊂⍺F⍵}⍤k<\/code>, i.e. a Rank that doesn't mix results<\/blockquote><\/mx-reply>I'd say I use that a lot more than regular rank."}}
{"origin_server_ts":1722745469700,"event_id":"$usgexJKTljtCpmYJjVNlhlUxc9DjOwdBCoBlYrvpZlQ","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"And in Kap, the underlying implementation of the rank operator literally finishes off with running a mix operation on the result, the common path is much less efficient.","msgtype":"m.text"}}
{"origin_server_ts":1722754598504,"event_id":"$DIHWz_-qo9HMrLHso1QphGalUwnlVClLg_GVElux9Q4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"So I started Kap when kotlin multiplatform was pretty new. There wasn't any platform-independent IO library back then, so I built one myself.","msgtype":"m.text"}}
{"origin_server_ts":1722754652020,"event_id":"$60xyiyw7uhbrEDoILB-iBlhPj_4nR6qsyXTAqukRcEw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"It's obviously somewhat complex, since I had to implement an entire simualted filesystem for the browser JS part, and implement buffered IO using only Unix promitives for the lative part (and doing IO correctly is as you all know pretty tricky).","msgtype":"m.text"}}
{"origin_server_ts":1722754672053,"event_id":"$LN00hmDOwqYyVS8N59JQTI3g0DW8mPuQ341Bwnu7_80","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"And now there's Okio which is a library that does all of this for me.","msgtype":"m.text"}}
{"origin_server_ts":1722754730653,"event_id":"$RAOpGuXjhfwh3IzamYyP2Jp8K5nCluGS0MVRDyVF-Mc","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"But... It's highly incompatible with my approach, meaning that a lot of code would have to be rewritten for me to take advantage of it. But, it'd reduce the size of the Kap codebase by some non-insignificant amount and likely lake it more reliable as well. But there's a lot of work. What to do","msgtype":"m.text"}}
{"origin_server_ts":1722754745680,"event_id":"$XXgx7a94j_alcJDb0ah2NJiCjG0JeALNF3v-wSdxxFM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"body":"But... It's highly incompatible with my approach, meaning that a lot of code would have to be rewritten for me to take advantage of it. But, it'd reduce the size of the Kap codebase by some non-insignificant amount and likely lake it more reliable as well. But there's a lot of work. What to do,","msgtype":"m.text"},"m.relates_to":{"event_id":"$RAOpGuXjhfwh3IzamYyP2Jp8K5nCluGS0MVRDyVF-Mc","rel_type":"m.replace"},"m.mentions":{},"body":" * But... It's highly incompatible with my approach, meaning that a lot of code would have to be rewritten for me to take advantage of it. But, it'd reduce the size of the Kap codebase by some non-insignificant amount and likely lake it more reliable as well. But there's a lot of work. What to do,","msgtype":"m.text"}}
{"origin_server_ts":1722754748219,"event_id":"$XQqTAv0fpASUNXx6u9KSbrIf-NQt5deK8gWuhocHvG4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"body":"But... It's highly incompatible with my approach, meaning that a lot of code would have to be rewritten for me to take advantage of it. But, it'd reduce the size of the Kap codebase by some non-insignificant amount and likely lake it more reliable as well. But there's a lot of work. What to do.","msgtype":"m.text"},"m.relates_to":{"event_id":"$RAOpGuXjhfwh3IzamYyP2Jp8K5nCluGS0MVRDyVF-Mc","rel_type":"m.replace"},"m.mentions":{},"body":" * But... It's highly incompatible with my approach, meaning that a lot of code would have to be rewritten for me to take advantage of it. But, it'd reduce the size of the Kap codebase by some non-insignificant amount and likely lake it more reliable as well. But there's a lot of work. What to do.","msgtype":"m.text"}}
{"origin_server_ts":1722754752038,"event_id":"$MD0mZABJGankdNGQPJNGSRYA3s_zbQ4Pcbp2KO5JsGY","redacted_because":{"room_id":"!WpdazzauuDxyGNAiCr:matrix.org","origin_server_ts":1722754756958,"event_id":"$PqObISq9EPTZohg5jNf-n0pVS6giqxG4I9KlKhxPvjo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","unsigned":{},"redacts":"$MD0mZABJGankdNGQPJNGSRYA3s_zbQ4Pcbp2KO5JsGY","type":"m.room.redaction","content":{"redacts":"$MD0mZABJGankdNGQPJNGSRYA3s_zbQ4Pcbp2KO5JsGY"}},"sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{}}
{"origin_server_ts":1722754756958,"event_id":"$PqObISq9EPTZohg5jNf-n0pVS6giqxG4I9KlKhxPvjo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","redacts":"$MD0mZABJGankdNGQPJNGSRYA3s_zbQ4Pcbp2KO5JsGY","type":"m.room.redaction","content":{"redacts":"$MD0mZABJGankdNGQPJNGSRYA3s_zbQ4Pcbp2KO5JsGY"}}
{"origin_server_ts":1722759235328,"event_id":"$AS-4-YMvg7IEjHtqFxUVXgs9Mus7BFpgfHQ9H-vFtbE","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722759235192,"body":"> library that does all [...] reduce the size\n\nit helps to remember that the effective size/complexity of your program has the lower bound of the transitive sum of sizes/complexities of its dependencies. :-)","com.beeper.origin_client_type":"ios","msgtype":"m.text","com.beeper.origin_client_version":"2.5.1 #9437"}}
{"origin_server_ts":1722759330883,"event_id":"$SWqzZWLwZRpQdbyw-rfGIvzhr28D0bmkl2dw1mrJpP4","sender":"@ovf:beeper.com","user_id":"@ovf:beeper.com","type":"m.room.message","content":{"com.beeper.origin_client_ts":1722759330783,"m.new_content":{"format":"org.matrix.custom.html","body":"> library that does all [...] reduce the size\n\nit helps to remember that the effective size/complexity of your program has the lower bound of the recursive sum of sizes/complexities of its dependencies. :-)","msgtype":"m.text","formatted_body":"<blockquote>\n<p>library that does all [...] reduce the size<\/p>\n<\/blockquote>\n<p>it helps to remember that the effective size/complexity of your program has the lower bound of the recursive sum of sizes/complexities of its dependencies. :-)<\/p>"},"m.relates_to":{"event_id":"$AS-4-YMvg7IEjHtqFxUVXgs9Mus7BFpgfHQ9H-vFtbE","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":" * > library that does all [...] reduce the size\n\nit helps to remember that the effective size/complexity of your program has the lower bound of the recursive sum of sizes/complexities of its dependencies. :-)","com.beeper.origin_client_type":"ios","msgtype":"m.text","com.beeper.origin_client_version":"2.5.1 #9437","formatted_body":" * <blockquote>\n<p>library that does all [...] reduce the size<\/p>\n<\/blockquote>\n<p>it helps to remember that the effective size/complexity of your program has the lower bound of the recursive sum of sizes/complexities of its dependencies. :-)<\/p>"}}
{"origin_server_ts":1722759786341,"event_id":"$qyfndU2P_VxMnUKHVxGcUWzsnSDTQautMUJ03Lsd-EE","sender":"@arlyle:matrix.org","user_id":"@arlyle:matrix.org","type":"m.reaction","content":{"m.relates_to":{"event_id":"$AS-4-YMvg7IEjHtqFxUVXgs9Mus7BFpgfHQ9H-vFtbE","rel_type":"m.annotation","key":"👍"}}}
{"origin_server_ts":1722834632743,"event_id":"$HYoq9taBAQFQyOqCw9cu6ipA4n41KOckMA9e3Dr6tLQ","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"The current implementation of dyadic `⍴` allows for `¯1` in one position to indicate that the shape should be computed. If the remaining dimensions doesn't evenly divide the size of the right argument, it raises an error.","msgtype":"m.text","formatted_body":"The current implementation of dyadic <code>⍴<\/code> allows for <code>¯1<\/code> in one position to indicate that the shape should be computed. If the remaining dimensions doesn't evenly divide the size of the right argument, it raises an error."}}
{"origin_server_ts":1722834740072,"event_id":"$Qa2blqWLkxf5Cdsab8KJhsWOY_z3Hiccb8RxJj2Exo0","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I'm considering allowing some alternatives to`¯1`, specifically the keywords `:match` (equivalent to `¯1`), `:fill` (add the fill element to extend the last row) and `:truncate` (remove the last row if it doesn't fill the last row)","msgtype":"m.text","formatted_body":"I'm considering allowing some alternatives to<code>¯1<\/code>, specifically the keywords <code>:match<\/code> (equivalent to <code>¯1<\/code>), <code>:fill<\/code> (add the fill element to extend the last row) and <code>:truncate<\/code> (remove the last row if it doesn't fill the last row)"}}
{"origin_server_ts":1722834747484,"event_id":"$DEEg7SKgM2t_BAasUdJ6j56agfUYikaKHQhYxo9IW0g","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I'm considering allowing some alternatives to`¯1`, specifically the keywords `:match` (equivalent to `¯1`), `:fill` (add the fill element to extend the last row) and `:truncate` (remove the last row if it doesn't fill it completely)","msgtype":"m.text","formatted_body":"I'm considering allowing some alternatives to<code>¯1<\/code>, specifically the keywords <code>:match<\/code> (equivalent to <code>¯1<\/code>), <code>:fill<\/code> (add the fill element to extend the last row) and <code>:truncate<\/code> (remove the last row if it doesn't fill it completely)"},"m.relates_to":{"event_id":"$Qa2blqWLkxf5Cdsab8KJhsWOY_z3Hiccb8RxJj2Exo0","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * I'm considering allowing some alternatives to`¯1`, specifically the keywords `:match` (equivalent to `¯1`), `:fill` (add the fill element to extend the last row) and `:truncate` (remove the last row if it doesn't fill it completely)","msgtype":"m.text","formatted_body":" * I'm considering allowing some alternatives to<code>¯1<\/code>, specifically the keywords <code>:match<\/code> (equivalent to <code>¯1<\/code>), <code>:fill<\/code> (add the fill element to extend the last row) and <code>:truncate<\/code> (remove the last row if it doesn't fill it completely)"}}
{"origin_server_ts":1722834873468,"event_id":"$CR5WwVFJsvDcAfVHNl_xHDNpQiG85CGhcNgoQE8MlwY","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"So you could do something like `2 :fill 3 ⍴ ⍳7` which would result in `2 2 3 ⍴ (⍳7),(5⍴0)`","msgtype":"m.text","formatted_body":"So you could do something like <code>2 :fill 3 ⍴ ⍳7<\/code> which would result in <code>2 2 3 ⍴ (⍳7),(5⍴0)<\/code>"}}
{"origin_server_ts":1722834893583,"event_id":"$CYKkfVsQ_v_P5tVA4e-595sSeHbKex1xY2yaBFUM3UM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Is this a good design?","msgtype":"m.text"}}
{"origin_server_ts":1722846093437,"event_id":"$exlb5Tjre1pVyv8VPQzclSVDhGIb2kbiH3_-rWuhs7Y","sender":"@_discord_180028909969080320:t2bot.io","user_id":"@_discord_180028909969080320:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"This is quite similar to the bqn system, which I like for its flexibility","msgtype":"m.text","formatted_body":"This is quite similar to the bqn system, which I like for its flexibility"}}
{"origin_server_ts":1722851790998,"event_id":"$Qx-e0Uqz-UqPQdN5hZfpivhB7AHzHMtiVHADPKiMWM4","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$CYKkfVsQ_v_P5tVA4e-595sSeHbKex1xY2yaBFUM3UM"}},"format":"org.matrix.custom.html","body":"I've been thinking about values like this for along time and have not come up with a really good solution for APL. BQN uses function and operator glyphs (since it allows functions and operators in arrays) that hint at the functionality. J (`$` and `$,`) uses `_` (infinity, but here also used to be a kind of \"fill in the blank\") with an operator to specify behaviour: `$!.]` (the default) erroring, `$!.<.` truncating, `$!.>.` filling, and `$!.val!.>.` filling with a custom value.\nI guess words (symbols, right?) work, albeit a bit verbose. Don't forget the (for `⍴` natural fourth) choice of `:recycle`.","msgtype":"m.text","formatted_body":"I&#x27;ve been thinking about values like this for along time and have not come up with a really good solution for APL. BQN uses function and operator glyphs (since it allows functions and operators in arrays) that hint at the functionality. J (<code>$<\/code> and <code>$,<\/code>) uses <code>_<\/code> (infinity, but here also used to be a kind of &quot;fill in the blank&quot;) with an operator to specify behaviour: <code>$!.]<\/code> (the default) erroring, <code>$!.&lt;.<\/code> truncating, <code>$!.&gt;.<\/code> filling, and <code>$!.val!.&gt;.<\/code> filling with a custom value.<br>I guess words (symbols, right?) work, albeit a bit verbose. Don&#x27;t forget the (for <code>⍴<\/code> natural fourth) choice of <code>:recycle<\/code>."}}
{"origin_server_ts":1722852879729,"event_id":"$HeAkhKHKU6PItZcTMnPfyg4TFAPtKSvKhgPPNSlUUxc","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Recycle?","msgtype":"m.text"}}
{"origin_server_ts":1722852885479,"event_id":"$h6aMkM9fovn5Ou1TDTgCp6SU6JbQ1XeP_ra8zyiUq-I","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"As in wrap around?","msgtype":"m.text"}}
{"origin_server_ts":1722853343861,"event_id":"$ibtmkJ7EB6SQ7Oc9d4HUHPEIP0-u4YUpebwJDmbgoX0","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Yes, like `⍴` would normally do when running out of elements, like `5⍴1 2 3`","msgtype":"m.text","formatted_body":"Yes, like <code>⍴<\/code> would normally do when running out of elements, like <code>5⍴1 2 3<\/code>"}}
{"origin_server_ts":1722853360207,"event_id":"$1mkUW2W3DZ9PZpMP_4p5l2Hm2hkpQ84u43RssMF2lhM","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"Yes, like `⍴` would normally do when running out of elements, like `5⍴1 2 3` giving `1 2 3 1 2`","msgtype":"m.text","formatted_body":"Yes, like <code>⍴<\/code> would normally do when running out of elements, like <code>5⍴1 2 3<\/code> giving <code>1 2 3 1 2<\/code>"},"m.relates_to":{"event_id":"$ibtmkJ7EB6SQ7Oc9d4HUHPEIP0-u4YUpebwJDmbgoX0","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* Yes, like `⍴` would normally do when running out of elements, like `5⍴1 2 3` giving `1 2 3 1 2`","msgtype":"m.text","formatted_body":"* Yes, like <code>⍴<\/code> would normally do when running out of elements, like <code>5⍴1 2 3<\/code> giving <code>1 2 3 1 2<\/code>"}}
{"origin_server_ts":1722859802835,"event_id":"$llu26ekALyxz-Pp3PLhjxnDglSU3ZDB7Eyp6xiPmliU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Qa2blqWLkxf5Cdsab8KJhsWOY_z3Hiccb8RxJj2Exo0"}},"format":"org.matrix.custom.html","body":"sounds like a good use of the keywords feature to me","msgtype":"m.text","formatted_body":"sounds like a good use of the keywords feature to me"}}
{"origin_server_ts":1722859843863,"event_id":"$Z56LpI_8dkXdXetiR-knTIqIv0DfTaJlUJR3_pbOrVo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i was considering doing negative numbers for the various options and then exposing `⎕reshape→fill` or whatever to the user but that may be a bit *too* verbose","msgtype":"m.text","formatted_body":"i was considering doing negative numbers for the various options and then exposing <code>⎕reshape→fill<\/code> or whatever to the user but that may be a bit <em>too<\/em> verbose"}}
{"origin_server_ts":1722859894086,"event_id":"$qNOVQaOi1r-u-Khr5qEZSyN_c4d1bDUoYnESl9owDgU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yours is a good medium, clear in what it does yet somewhat compact","msgtype":"m.text","formatted_body":"yours is a good medium, clear in what it does yet somewhat compact"}}
{"origin_server_ts":1722860117465,"event_id":"$qFhxpVflqB_VN8GJHmvGmsDdkxYrrF6OGHBS3eOodt4","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"rubenverg (@_discord_604614910030118912:t2bot.io) Would you consider a J-like solution, i.e. `⍴⍠`?","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a> Would you consider a J-like solution, i.e. <code>⍴⍠<\/code>?"}}
{"origin_server_ts":1722860169463,"event_id":"$F3SQacJ2mnq0iE16Zkmk0uGm6Z-y6hjWCYd4vGc8jCw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"variant is not 100% excluded yet","msgtype":"m.text","formatted_body":"variant is not 100% excluded yet"}}
{"origin_server_ts":1722860227793,"event_id":"$c9wL2VN1IwqXYkHFf8of0dkFPixdKWMeVFn4j9TNKS8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"presumably easier with closures","msgtype":"m.text","formatted_body":"presumably easier with closures"}}
{"origin_server_ts":1722878507545,"event_id":"$q4qZY4-siHCsBswF8_m6CA1JCQ7Ym8U6fCA_HNgjmjI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"OK, I've implemented the 4 different options when calling dyadic `⍴`:","msgtype":"m.text","formatted_body":"OK, I've implemented the 4 different options when calling dyadic <code>⍴<\/code>:"}}
{"origin_server_ts":1722878510713,"event_id":"$47sxE8_TlFuF4vjqjylvs28Gn8L9XR-lHJU_UraiOB4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"https://kapdemo.dhsdevelopments.com/reference.html#_shapereshape","msgtype":"m.text"}}
{"origin_server_ts":1722878538080,"event_id":"$dbpTRvQjUkR3GUWLc3v6SvA5e8VTV-cFkvoInZZjmgA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"The tests and build is running now, so the web version will be updated in 15 minutes or so.","msgtype":"m.text"}}
{"state_key":"@_discord_262780141485293569:t2bot.io","origin_server_ts":1722887652452,"event_id":"$Ya4-3oj9kdJuEaF-UQM3PfoT2vnJxagUDWqFyE2BnwE","sender":"@_discord_262780141485293569:t2bot.io","user_id":"@_discord_262780141485293569:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":1752220,"name":"APL Wizard","position":16},{"color":9807270,"name":"k god","position":12},{"color":15277667,"name":"BQNator","position":13},{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":1752220,"id":"262780141485293569","username":"attinat#0"},"avatar_url":"mxc://t2bot.io/4e784f61f2c4094e00409c85955167c2f092014e1798661885734682624","displayname":"attinat","membership":"join"}}
{"origin_server_ts":1722890312674,"event_id":"$NL0x0ZhgB0nz_3O36MsmxOyHyMA7N2Fli5CbmT9fPxQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"maybe the question is better suited here; what should be the correct behavior when multiplying two complex numbers with very large real and imaginary parts? currently my code returns `NaN` because it performs `(real x * real y) - (imag x * imag y)` which is ∞-∞ = NaN, but tha't clearly unwanted behavior","msgtype":"m.text","formatted_body":"maybe the question is better suited here; what should be the correct behavior when multiplying two complex numbers with very large real and imaginary parts? currently my code returns <code>NaN<\/code> because it performs <code>(real x * real y) - (imag x * imag y)<\/code> which is ∞-∞ = NaN, but tha&#x27;t clearly unwanted behavior"}}
{"origin_server_ts":1722890604858,"event_id":"$hu4UM4-iLg7BSw7E4oztWTsCKn6BVz9gGJlKgtn10v0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i guess i can just do the `(abs x * abs y) ⊗ (phase x + phase y)` thing instead","msgtype":"m.text","formatted_body":"i guess i can just do the <code>(abs x * abs y) ⊗ (phase x + phase y)<\/code> thing instead"}}
{"origin_server_ts":1722891150193,"event_id":"$XKGAtMkdjIvAJn-hjebRXYgS0H2-Iw-QsZtRh-zM-w0","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You can scale either argument by any value before multiplying. Powers of two will be a little more accurate, although I don't know if there's a great way to choose what power. If you know it overflowed, maybe square root of the maximum float for both arguments is reasonable?","msgtype":"m.text","formatted_body":"You can scale either argument by any value before multiplying. Powers of two will be a little more accurate, although I don't know if there's a great way to choose what power. If you know it overflowed, maybe square root of the maximum float for both arguments is reasonable?"}}
{"origin_server_ts":1722893459101,"event_id":"$DIIHadiG2179MvdRnLXETJwnFRSk1F_lkqCqBfLKiOk","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$DjkoieslMB3-Xsa0U6p52-lcJ2DDK8FdJsHPdu601go"}},"format":"org.matrix.custom.html","body":"ah there is `𐊙` which in some fonts is that upside-down. alongside `𐊜`","msgtype":"m.text","formatted_body":"ah there is <code>𐊙<\/code> which in some fonts is that upside-down. alongside <code>𐊜<\/code>"}}
{"origin_server_ts":1722893558120,"event_id":"$8mTivKOOl8VA7gVM2AxUxc1D66Mzzt75EfQGLrs4IvI","sender":"@_discord_624974820840308737:t2bot.io","user_id":"@_discord_624974820840308737:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"other alternatives would be `ᚠ` or `ᚥ`","msgtype":"m.text","formatted_body":"other alternatives would be <code>ᚠ<\/code> or <code>ᚥ<\/code>"}}
{"origin_server_ts":1722894504969,"event_id":"$mw5NMwHrHpsZNWRWZyIorb9280o2EzUWp38LEadVnm0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$XKGAtMkdjIvAJn-hjebRXYgS0H2-Iw-QsZtRh-zM-w0"}},"format":"org.matrix.custom.html","body":"not sure how to guess the correct scale factor","msgtype":"m.text","formatted_body":"not sure how to guess the correct scale factor"}}
{"origin_server_ts":1722894601911,"event_id":"$ZCzFetD9tvk87P9-H3gOkKlPEG8GkjjvANWkoUBN694","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"going with cartesian unless infinte in which case polar (because there's some FP issues otherwise), trying to make tests pass now","msgtype":"m.text","formatted_body":"going with cartesian unless infinte in which case polar (because there&#x27;s some FP issues otherwise), trying to make tests pass now"}}
{"origin_server_ts":1722894751574,"event_id":"$ImpU-QKnDORe2VsiXwxuYQOsmy4SJQiSFP7Mt5AF8RA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"going with cartesian unless infinte in which case polar (because there's some FP issues otherwise), trying to make tests pass now","msgtype":"m.text","formatted_body":"going with cartesian unless infinte in which case polar (because there&#x27;s some FP issues otherwise), trying to make tests pass now"},"m.relates_to":{"event_id":"$ZCzFetD9tvk87P9-H3gOkKlPEG8GkjjvANWkoUBN694","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* going with cartesian unless infinte in which case polar (because there's some FP issues otherwise), trying to make tests pass now","msgtype":"m.text","formatted_body":"* going with cartesian unless infinte in which case polar (because there&#x27;s some FP issues otherwise), trying to make tests pass now"}}
{"origin_server_ts":1722917551363,"event_id":"$LvUzlvQM4GxlQhjgLIhET8maTOliwgirLLZDNJwxil0","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$8mTivKOOl8VA7gVM2AxUxc1D66Mzzt75EfQGLrs4IvI"}},"m.mentions":{"user_ids":["@_discord_624974820840308737:t2bot.io"]},"format":"org.matrix.custom.html","body":"> <@_discord_624974820840308737:t2bot.io> other alternatives would be `ᚠ` or `ᚥ`\n\nRunic letters?","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$8mTivKOOl8VA7gVM2AxUxc1D66Mzzt75EfQGLrs4IvI?via=matrix.org&via=t2bot.io&via=dhsdevelopments.com\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_624974820840308737:t2bot.io\">@_discord_624974820840308737:t2bot.io<\/a><br>other alternatives would be <code>ᚠ<\/code> or <code>ᚥ<\/code><\/blockquote><\/mx-reply>Runic letters?"}}
{"origin_server_ts":1722926343061,"event_id":"$OkNCb4Mv1fbVmeQ4McHTrbUhNI7_MX6t2OxnHo5K0uI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"thinking `(□xyz)` for creating lambdas and `f⊏` for turning them back into functions","msgtype":"m.text","formatted_body":"thinking <code>(□xyz)<\/code> for creating lambdas and <code>f⊏<\/code> for turning them back into functions"}}
{"origin_server_ts":1722926357457,"event_id":"$nFo3AxwAKQwybT9bUQHNAt-OvI7ZQ3rfx3MsDgbXV-Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Open can be an operator of course","msgtype":"m.text","formatted_body":"Open can be an operator of course"}}
{"origin_server_ts":1722926375114,"event_id":"$_3RWZJDB2dfyagpBxdIQ2sQYp8p20ZZ-9cybiyMivz0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Wrap needs to be syntax","msgtype":"m.text","formatted_body":"Wrap needs to be syntax"}}
{"origin_server_ts":1722926670210,"event_id":"$nFYsAKNvLw1EYFeJolJHYBu5JXRa5P7f4oOAgwj6nfM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"if and when I figure out closures of course","msgtype":"m.text","formatted_body":"if and when I figure out closures of course"}}
{"origin_server_ts":1722927307883,"event_id":"$EHxTfh72uWFbEU4bptcAhr9nE4d4__TlT6-PKaw4WrQ","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Sounds like J gerunds","msgtype":"m.text","formatted_body":"Sounds like J gerunds"}}
{"origin_server_ts":1722927374296,"event_id":"$-1DDR9DS-rKAuC7i-dv9eI63H5AkgfDUwPXKeauNXF4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah, or Kap first class functions","msgtype":"m.text","formatted_body":"yeah, or Kap first class functions"}}
{"origin_server_ts":1722928001937,"event_id":"$JW6oxgcmlH2XiwuunoZsry9b4_parKl67A62VcnxQvE","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rubenverg: don't you already use quad for system variables?","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a>: don't you already use quad for system variables?"}}
{"origin_server_ts":1722929061541,"event_id":"$CdVYWXAiVAXXloLz2CtzM27iNCHdXGzF2KchXi_Gy5Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that's a square not a quad","msgtype":"m.text","formatted_body":"that&#x27;s a square not a quad"}}
{"origin_server_ts":1722929065638,"event_id":"$6708_nzQLNzSYerR7KkpbJTTqvm57WcA0PkjuPNUre8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"could it get confusing?","msgtype":"m.text","formatted_body":"could it get confusing?"}}
{"origin_server_ts":1722929075115,"event_id":"$svmkWkWUM39qLqNHt7Kwv0H2VwO-fvBHBMSVarunRmk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"thought about it as a box and an open box","msgtype":"m.text","formatted_body":"thought about it as a box and an open box"}}
{"origin_server_ts":1722929228600,"event_id":"$q0zZiA76lLHszaXRy6zwWRuRL5yZViiUZLiZBF_tDOc","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You may regret the name TinyAPL eventually\u2026","msgtype":"m.text","formatted_body":"You may regret the name TinyAPL eventually\u2026"}}
{"origin_server_ts":1722929319211,"event_id":"$De_B-ULXj6-T9orYAMRuIwFEJEIYwA-Uj8Oq7HTp3ro","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"can call it RelativelyTinyAPL (:","msgtype":"m.text","formatted_body":"can call it RelativelyTinyAPL (:"}}
{"origin_server_ts":1722929348929,"event_id":"$0yF9rEMkVavsbOhxKE1jhM0MVUt4XwtRqZooIPguY74","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i've been told my lines-to-functions ratio is low","msgtype":"m.text","formatted_body":"i&#x27;ve been told my lines-to-functions ratio is low"}}
{"origin_server_ts":1722934427213,"event_id":"$1hLHiCvIlzpaUb-K5670F8PAEjsFLicTkG1sQR_BI9E","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I'm not sure having `□`,  `⎕` and `⌷` is great idea unless your font is really good.","msgtype":"m.text","formatted_body":"I'm not sure having <code>□<\/code>,  <code>⎕<\/code> and <code>⌷<\/code> is great idea unless your font is really good."}}
{"origin_server_ts":1722934447316,"event_id":"$XIvAiTBfwqBmZvyKkQeOwKGwFSGeGFeBaELDlz807aw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I thought `λ` was pretty good.","msgtype":"m.text","formatted_body":"I thought <code>λ<\/code> was pretty good."}}
{"origin_server_ts":1722935246972,"event_id":"$LHCMeVXmwOGkzxKP8BfowzH36j4Xh7qFHgCFj_EJjMA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it has the usual alphabetic-character problem","msgtype":"m.text","formatted_body":"it has the usual alphabetic-character problem"}}
{"origin_server_ts":1722935254681,"event_id":"$5hQWBnft2O1lc87TshIJE3KFy-8B7_W3VBcDIYr9EL8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"or \"problem\", depending on how you see it","msgtype":"m.text","formatted_body":"or &quot;problem&quot;, depending on how you see it"}}
{"origin_server_ts":1722935266172,"event_id":"$xAyDWS-yZKOImGlWy2yUaGfHcGaVSZUfYiAX34US52w","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(i've still not completely decided which way I lean)","msgtype":"m.text","formatted_body":"(i&#x27;ve still not completely decided which way I lean)"}}
{"origin_server_ts":1722935329785,"event_id":"$Ek8XgB5aDQyFjTX1zquV_qGEH87foJ_ScvcrliKCxc8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Just saying, the runic characters are also alphabetic. :-)","msgtype":"m.text"}}
{"origin_server_ts":1722935959262,"event_id":"$vW07vEcZNLWYwaNIWvr7_qIZbOCj64KAOUawiJTAh1Y","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"But, I agree with you on the issue, since Kap also assumes that Unicode alphabetic characters are allowed as part of words.","msgtype":"m.text"}}
{"origin_server_ts":1722936213292,"event_id":"$0VU621MyG1cwXgvIMoT1_L-_uSsH8rkyzrD8vWQMMxo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Alternatively, you can also use `𝛌`.","msgtype":"m.text","formatted_body":"Alternatively, you can also use <code>𝛌<\/code>."}}
{"origin_server_ts":1722936487576,"event_id":"$X_LTk7QEhkIeI10V5sV27Rq5XWyTzAKIDT1KDuecXuw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"suppose i can","msgtype":"m.text","formatted_body":"suppose i can"}}
{"origin_server_ts":1722936543144,"event_id":"$9ZDOfo7YEjS5UMkAj-SaPRdHtjsJfezwRsJyCQMD3Mg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"or not, it's actually still an alphabetic character","msgtype":"m.text","formatted_body":"or not, it&#x27;s actually still an alphabetic character"}}
{"origin_server_ts":1722936553927,"event_id":"$pDb9ngpUdIn5jIzUenHKaRa9fwqJXTHIpvxFrxx7MPg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"```λ ghci\nGHCi, version 9.10.1: https://www.haskell.org/ghc/  :? for help\nghci> import Data.Char \nghci> isAlpha '𝛌'\nTrue```","msgtype":"m.text","formatted_body":"<pre><code>λ ghci\nGHCi, version 9.10.1: https://www.haskell.org/ghc/  :? for help\nghci&gt; import Data.Char \nghci&gt; isAlpha &#x27;𝛌&#x27;\nTrue<\/code><\/pre>"}}
{"origin_server_ts":1722942873195,"event_id":"$rqO7ArAXtwhrYeFxg_3f810NzLlk8ml0Jxh8in0gOTo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"because down arrow is extended to do Infix and up arrow is extended to do Outfix, it makes more sense for double down arrow to be On Infixes and double up arrow to do On Outfixes, right? even if it's opposite from the pairing J does","msgtype":"m.text","formatted_body":"because down arrow is extended to do Infix and up arrow is extended to do Outfix, it makes more sense for double down arrow to be On Infixes and double up arrow to do On Outfixes, right? even if it&#x27;s opposite from the pairing J does"}}
{"origin_server_ts":1722951760629,"event_id":"$B-x2dlISrcO1ENgjeyT3zoTbWNUWMyPtkeMDIg1GupE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"makes sense combinators for `xF(xGy)` and `(xFy)Gy`?","msgtype":"m.text","formatted_body":"makes sense combinators for <code>xF(xGy)<\/code> and <code>(xFy)Gy<\/code>?"}}
{"origin_server_ts":1722951887654,"event_id":"$yIu14N2oUHvowJiiAK8BjlHA0hSHhXpqU_jLaYLrEBM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"uiua combinators page calls them N and ν","msgtype":"m.text","formatted_body":"uiua combinators page calls them N and ν"}}
{"origin_server_ts":1722951977998,"event_id":"$ajZES3PjwAPbXo82n8R4ThZAJeCF95baQI_ANONKgsI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$B-x2dlISrcO1ENgjeyT3zoTbWNUWMyPtkeMDIg1GupE"}},"format":"org.matrix.custom.html","body":"> <@_discord_604614910030118912:t2bot.io> makes sense combinators for `xF(xGy)` and `(xFy)Gy`?\n\nI can't say I've ever needed them. But then again, I'm not a combinator person","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$B-x2dlISrcO1ENgjeyT3zoTbWNUWMyPtkeMDIg1GupE?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">@_discord_604614910030118912:t2bot.io<\/a><br />makes sense combinators for <code>xF(xGy)<\/code> and <code>(xFy)Gy<\/code>?<\/blockquote><\/mx-reply>I can't say I've ever needed them. But then again, I'm not a combinator person"}}
{"origin_server_ts":1722952016053,"event_id":"$r_A4ouhFbgxQy_WrTfwgwwWr-gmQD-n1H1hE5TvPF8E","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"came up with them because I had a usecase but I kinda forgot(:","msgtype":"m.text","formatted_body":"came up with them because I had a usecase but I kinda forgot(:"}}
{"origin_server_ts":1722952142753,"event_id":"$-LqTT3vj1Uz37ccuacm66oD6UloQlptDICRmPVe2sbA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"in train speak it's (left F G) and (F G right)","msgtype":"m.text","formatted_body":"in train speak it&#x27;s (left F G) and (F G right)"}}
{"origin_server_ts":1722952208066,"event_id":"$txQCco2e2CE-VXPfCRglao3L7zJ1prV5abGvPXz_2uw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"am thinking `⇽` and `⇾` by similarity with the hooks","msgtype":"m.text","formatted_body":"am thinking <code>⇽<\/code> and <code>⇾<\/code> by similarity with the hooks"}}
{"origin_server_ts":1722952286213,"event_id":"$WXccBMZlqrnA1FpX81VDe778XBQ5hXVSqIoQqE_06vI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and then with double operators you can do stuff like (Fx)G(xHy) etc","msgtype":"m.text","formatted_body":"and then with double operators you can do stuff like (Fx)G(xHy) etc"}}
{"origin_server_ts":1722952309166,"event_id":"$7zSb4Ooe_oxL5WXN-Ojt16rZTmVBOICxpNKEBLsYau0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm much more on the specialized combinator side than on the use trains for everything side","msgtype":"m.text","formatted_body":"I&#x27;m much more on the specialized combinator side than on the use trains for everything side"}}
{"origin_server_ts":1722952618835,"event_id":"$Z_nI2bITiQP2i-Nq4CTgsdMyTACwH-XmbsI5uePXy8s","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I think I want to reduce trains just because they don't look as good with all the parens, idk","msgtype":"m.text","formatted_body":"I think I want to reduce trains just because they don&#x27;t look as good with all the parens, idk"}}
{"origin_server_ts":1722952635092,"event_id":"$ngzjrIG93WXkCSNIZu-VHB0F1xOxaIY4I3gdT0PgOys","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"or maybe I just like the concept of lots of combinators(:","msgtype":"m.text","formatted_body":"or maybe I just like the concept of lots of combinators(:"}}
{"origin_server_ts":1722952706200,"event_id":"$qkZRqsTOpbmYRZ0bqKZjoLtwy3r5gj0lSQNbbfSuIwc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"need good names for them though, ideas?","msgtype":"m.text","formatted_body":"need good names for them though, ideas?"}}
{"origin_server_ts":1722953071760,"event_id":"$BcQUTJctvJdVQwXwq-g9051J9qZv_tRYUtWQiKlFlxU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Left Fork and Right Fork maybe?","msgtype":"m.text","formatted_body":"Left Fork and Right Fork maybe?"}}
{"origin_server_ts":1722953236658,"event_id":"$XPy7VGJhOajaoz9qPZaNAqueqNAkx_sDK1fDQmPusmk","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Ask Conor to give you some names. 😀","msgtype":"m.text"}}
{"origin_server_ts":1722953446494,"event_id":"$T-6bWIDl5l8syzQRbrFJFax62Sdo2VIZVy3bJF5WTxc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"how'd I ask him?","msgtype":"m.text","formatted_body":"how&#x27;d I ask him?"}}
{"origin_server_ts":1722953467379,"event_id":"$0jaE-rKrE_LfcV-M8MsNp6Jge_Hdx0Gvu5nJmCslO9w","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"left and right fork sound fine as temporary names","msgtype":"m.text","formatted_body":"left and right fork sound fine as temporary names"}}
{"origin_server_ts":1722953486752,"event_id":"$pkyeoeL3_5zVOngxjihMSsCTKdYZGi0WINUYr9OA2YU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"easy to change later(:","msgtype":"m.text","formatted_body":"easy to change later(:"}}
{"origin_server_ts":1722953937497,"event_id":"$RHM5zJkibU8Gj9EZfJt6wvEo4hVnXS8Hv6JyBa2PQSQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i'm more and more convinced i should add variant but i don't know how to technically do it; the thing i thought about now is step for `\u2026`","msgtype":"m.text","formatted_body":"i&#x27;m more and more convinced i should add variant but i don&#x27;t know how to technically do it; the thing i thought about now is step for <code>\u2026<\/code>"}}
{"origin_server_ts":1722955624603,"event_id":"$785rvVDf6M29hrZtTpja4VksQv8INj-V2uy_kiL-s5A","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"alright, added left and right fork to [combinator page](http://tinyapl.rubenverg.com/docs/info/combinators)","msgtype":"m.text","formatted_body":"alright, added left and right fork to [combinator page](<a href=\"http://tinyapl.rubenverg.com/docs/info/combinators\">http://tinyapl.rubenverg.com/docs/info/combinators<\/a>)"}}
{"origin_server_ts":1722955716712,"event_id":"$QIQS1J4oZZdqCZf_C571a0SJ8B6NLwzGdd-7GItcbwU","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Email? ","msgtype":"m.text"}}
{"origin_server_ts":1722955975541,"event_id":"$ikZX1nDbsuTcDTIipomAWAR29hIJuy4L3edBvLhGrIc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"good idea i'll write them an email","msgtype":"m.text","formatted_body":"good idea i&#x27;ll write them an email"}}
{"origin_server_ts":1722960098644,"event_id":"$Uz7QOGGjHKu6PVNULXP3YdTwyqxTBtqft4Y62WLFCKg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"sent","msgtype":"m.text","formatted_body":"sent"}}
{"origin_server_ts":1722964157809,"event_id":"$-jQO7RQMExx-Qb5qywy2FSbqQjFAHb7yRWNywzYXtRQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"thinking `⍰` for fuzzy (extended's `%`); `%` is nice but might want to keep it for Case","msgtype":"m.text","formatted_body":"thinking <code>⍰<\/code> for fuzzy (extended&#x27;s <code>%<\/code>); <code>%<\/code> is nice but might want to keep it for Case"}}
{"origin_server_ts":1722964179726,"event_id":"$_DGn3j7_N5xkFr-1hTZ0aW1P84wwSMyeHegnHGMWbkg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"btw, why is Case defined with nesting instead of rank, if all the subarrays have to be of the same length anyways?","msgtype":"m.text","formatted_body":"btw, why is Case defined with nesting instead of rank, if all the subarrays have to be of the same length anyways?"}}
{"origin_server_ts":1722964529169,"event_id":"$8--8-xTxCpjJIpdhVktwHK0pV7hLI8shielildWanwA","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"body":"in dzaima/APL I did it primarily just because I don't (like to) shove rank into anywhere posible just because it's possible","msgtype":"m.text"}}
{"origin_server_ts":1722964667094,"event_id":"$xTSX_cT3oYaK-4NqVkeB3K5QX4z1FmXgF3Ts1Kke5ww","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"body":"but it allows for the neat extension of allowing scalars to be extended","msgtype":"m.text"}}
{"origin_server_ts":1722965598752,"event_id":"$qvSg--4K2l8RY_2Ff3IKYy9F6fkaUTHBwdYoF856geE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"interesting, to me rank generally feels much more natural than depth","msgtype":"m.text","formatted_body":"interesting, to me rank generally feels much more natural than depth"}}
{"origin_server_ts":1722965611072,"event_id":"$xonlkHUqvTxlgaUQbBSW1NyuaU_8d_CKAfqmmRs4JvQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$xTSX_cT3oYaK-4NqVkeB3K5QX4z1FmXgF3Ts1Kke5ww"}},"format":"org.matrix.custom.html","body":"this is actually interesting i guess","msgtype":"m.text","formatted_body":"this is actually interesting i guess"}}
{"origin_server_ts":1722968166338,"event_id":"$uAp2rMMvtryteIpuGIJRpRdOcx2iV9fS44yMLkQdx8k","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"to me, rank is most useful for meaningfully-high-rank things - images, game boards/worlds & co. Using it as just \"depth but where the parts are all equal-shape\" feels like just plain making it a subset of depth, but with a completely separate vocabulary of operations; that's nice for efficiency, and perhaps makes operations that only apply to equal-part-shape things less weird (i.e. those which could be trivially done with depth, but would error on non-equal-shape-part inputs (e.g. Transpose, Case)), but that's about it. Kinda similar to separating ints and floats - perhaps better for efficiency, and removes the weirdness that is using floats as array indices, but doesn't let you do much more by itself","msgtype":"m.text","formatted_body":"to me, rank is most useful for meaningfully-high-rank things - images, game boards/worlds &amp; co. Using it as just \"depth but where the parts are all equal-shape\" feels like just plain making it a subset of depth, but with a completely separate vocabulary of operations; that's nice for efficiency, and perhaps makes operations that only apply to equal-part-shape things less weird (i.e. those which could be trivially done with depth, but would error on non-equal-shape-part inputs (e.g. Transpose, Case)), but that's about it. Kinda similar to separating ints and floats - perhaps better for efficiency, and removes the weirdness that is using floats as array indices, but doesn't let you do much more by itself"}}
{"origin_server_ts":1722968361026,"event_id":"$NkjC1JwdiLcqLogVJhK0vZ1OYYpdh2kHTIHB0Xu_edY","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the cells, whereas if it were done via depth you'd need to do `¨¨` or `⚇¯2`, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some `⚇(+n)`, encoding the depth of data operated on))","msgtype":"m.text","formatted_body":"whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the cells, whereas if it were done via depth you'd need to do <code>¨¨<\/code> or <code>⚇¯2<\/code>, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some <code>⚇(+n)<\/code>, encoding the depth of data operated on))"}}
{"origin_server_ts":1722968377652,"event_id":"$f59XpsIvVbgy8TZ9EzrVD3Drcs2PEcRRtpwUim7308E","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the board elements, whereas if it were done via depth you'd need to do `¨¨` or `⚇¯2`, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some `⚇(+n)`, encoding the depth of data operated on))","msgtype":"m.text","formatted_body":"whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the board elements, whereas if it were done via depth you'd need to do <code>¨¨<\/code> or <code>⚇¯2<\/code>, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some <code>⚇(+n)<\/code>, encoding the depth of data operated on))"},"m.relates_to":{"event_id":"$NkjC1JwdiLcqLogVJhK0vZ1OYYpdh2kHTIHB0Xu_edY","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the board elements, whereas if it were done via depth you'd need to do `¨¨` or `⚇¯2`, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some `⚇(+n)`, encoding the depth of data operated on))","msgtype":"m.text","formatted_body":"* whereas using rank for actually-high-rank things gives the opportunity for depth-based operations to operate on the individual components (i.e. Each on the board of a 2D game will operate on the board elements, whereas if it were done via depth you'd need to do <code>¨¨<\/code> or <code>⚇¯2<\/code>, forcibly encoding the arbitrary unrelated fact that the board is 2D (or, worse, some <code>⚇(+n)<\/code>, encoding the depth of data operated on))"}}
{"origin_server_ts":1722968437599,"event_id":"$fAs3BzDwfURZFmMviCMwojKgPDuKX8_wPgMh3QC30jA","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"whereas using it for anything with equal-shape parts just means that `¨` will get you to whatever happens to not have equal shape parts","msgtype":"m.text","formatted_body":"whereas using it for anything with equal-shape parts just means that <code>¨<\/code> will get you to whatever happens to not have equal shape parts"}}
{"origin_server_ts":1722968714408,"event_id":"$U0tOWkJua5yLgKJawFDM3nPW9I5xRQfNxVJvj31i6LI","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I kinda don't even really like leading-axis theory, as it, well, puts emphasis on the direction/order of axes, making some \"subsets\" of others. But it does nevertheless provide for a uniform/special-case-less way to do axis-order-agnostic stuff","msgtype":"m.text","formatted_body":"I kinda don't even really like leading-axis theory, as it, well, puts emphasis on the direction/order of axes, making some \"subsets\" of others. But it does nevertheless provide for a uniform/special-case-less way to do axis-order-agnostic stuff"}}
{"state_key":"@_discord_718551566336000090:t2bot.io","origin_server_ts":1722980028565,"event_id":"$gA641qEZ8zn2UL7WRhOrPNaKRTuKLVwAntbl8E7RpT4","sender":"@_discord_718551566336000090:t2bot.io","user_id":"@_discord_718551566336000090:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"718551566336000090","username":"jam3943598#0"},"avatar_url":"","displayname":"jam3943598","membership":"join"}}
{"origin_server_ts":1722985333547,"event_id":"$Fy4JqCnYw9I_NaDcMueennJ7WRbKNzR4oTw-TwM6hn4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$_DGn3j7_N5xkFr-1hTZ0aW1P84wwSMyeHegnHGMWbkg"}},"format":"org.matrix.custom.html","body":"> <@_discord_604614910030118912:t2bot.io> btw, why is Case defined with nesting instead of rank, if all the subarrays have to be of the same length anyways?\n\nBecause it's more convenient, and matches how you normally use it. Also it allows for scalar extension of some values.","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$_DGn3j7_N5xkFr-1hTZ0aW1P84wwSMyeHegnHGMWbkg?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">@_discord_604614910030118912:t2bot.io<\/a><br />btw, why is Case defined with nesting instead of rank, if all the subarrays have to be of the same length anyways?<\/blockquote><\/mx-reply>Because it's more convenient, and matches how you normally use it. Also it allows for scalar extension of some values."}}
{"origin_server_ts":1722985501482,"event_id":"$Gi94yJafDbHpqTDtYlIWKTHk909_FbxUleoWjCisjDM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"hm, you do you \"normally use\" it?","msgtype":"m.text","formatted_body":"hm, you do you &quot;normally use&quot; it?"}}
{"origin_server_ts":1722985507750,"event_id":"$Be0jM7GljKMzFADwlqJBZmiVMc1L7aYrLYNibHRziXY","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"have any example?","msgtype":"m.text","formatted_body":"have any example?"}}
{"origin_server_ts":1722985553623,"event_id":"$TPJW6Fg0B7vggxXYaMYSXCh5e_YClYMh-i23hSVbTDI","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"when doc'ing it for omnibar I think I went \"huh that's a primitive?\"","msgtype":"m.text","formatted_body":"when doc&#x27;ing it for omnibar I think I went &quot;huh that&#x27;s a primitive?&quot;"}}
{"origin_server_ts":1722986482026,"event_id":"$qxQFHwo1MhAc8fNCEbmJExg8p-iOzUpjTKjN9_yDT-4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"oh, maybe I can fix the no trains issue with a an APLAN-like thing","msgtype":"m.text","formatted_body":"oh, maybe I can fix the no trains issue with a an APLAN-like thing"}}
{"origin_server_ts":1722986562415,"event_id":"$Rcj1j8SLY3pIIrdUkW27mbtCpCxpE0w5MVhBqP1iLS8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`⦅>⋄-⋄<⦆` or something","msgtype":"m.text","formatted_body":"<code>⦅&gt;⋄-⋄&lt;⦆<\/code> or something"}}
{"origin_server_ts":1722986638066,"event_id":"$1vb5Bb0NbFIR5lPiV4vVQHcu4iTURy08tSnUtJRH0CU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"this actually sounds like a pretty good idea","msgtype":"m.text","formatted_body":"this actually sounds like a pretty good idea"}}
{"origin_server_ts":1722987006069,"event_id":"$-jw4DjRPJtexOxTOLHJ-AyceUkFku-z-GquC4-Bi5gM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"might even be able to do cap/force-atop with `⋄⋄` or something like that","msgtype":"m.text","formatted_body":"might even be able to do cap/force-atop with <code>⋄⋄<\/code> or something like that"}}
{"origin_server_ts":1722987042592,"event_id":"$czxBKda1CqzdpQYPSfwOn-faLKulDs1i50hTuZ7fuCo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"also means I can do array right tines (or whatever they're called) with no problem","msgtype":"m.text","formatted_body":"also means I can do array right tines (or whatever they&#x27;re called) with no problem"}}
{"origin_server_ts":1722987070439,"event_id":"$jKnWsSbeJj6bCv-ahhNW39ujQvZubpLWvALg68CMug0","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it's kinda verbose but it's much nicer than the 90000 sets of parens you need to use the Fork operator pair","msgtype":"m.text","formatted_body":"it&#x27;s kinda verbose but it&#x27;s much nicer than the 90000 sets of parens you need to use the Fork operator pair"}}
{"origin_server_ts":1722987091769,"event_id":"$ZVyWrauvxX_C9jfkuvLCh8HHGh8riyOudoLs4NpGuhU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(which I'll probably still have for when you want to do a single fork of simple functions)","msgtype":"m.text","formatted_body":"(which I&#x27;ll probably still have for when you want to do a single fork of simple functions)"}}
{"origin_server_ts":1722987193869,"event_id":"$jcfld8BE_K5_wZgjqJjBFsAzQwMPpzLITti3ad18lYU","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"are there any good documents on how to make good bytecode for array languages / are there any bytecodes that are well commented","msgtype":"m.text","formatted_body":"are there any good documents on how to make good bytecode for array languages / are there any bytecodes that are well commented"}}
{"origin_server_ts":1722987212378,"event_id":"$NSqBAkL6JlcobtHCTSQ9yx1XI0OYlgEglZXyt3-JAv8","sender":"@_discord_846111898888831016:t2bot.io","user_id":"@_discord_846111898888831016:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and like, not apl-ified c","msgtype":"m.text","formatted_body":"and like, not apl-ified c"}}
{"origin_server_ts":1722987316031,"event_id":"$rnWjIF9wygsHEpL6fGId0PfbDbhFWecyBNDG0ztRPwg","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Gi94yJafDbHpqTDtYlIWKTHk909_FbxUleoWjCisjDM"}},"format":"org.matrix.custom.html","body":"> <@_discord_604614910030118912:t2bot.io> hm, you do you \"normally use\" it?\n\nThere is an example in this post: https://blog.dhsdevelopments.com/lazy-evaluation-helping-implementation-of-transform-by-mask-in-kap","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$Gi94yJafDbHpqTDtYlIWKTHk909_FbxUleoWjCisjDM?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">@_discord_604614910030118912:t2bot.io<\/a><br />hm, you do you &quot;normally use&quot; it?<\/blockquote><\/mx-reply>There is an example in this post: https://blog.dhsdevelopments.com/lazy-evaluation-helping-implementation-of-transform-by-mask-in-kap"}}
{"origin_server_ts":1722987331469,"event_id":"$0eZXKvpWta5uEB3BdfJR6NbIYrm9O5HBNcPHvWotRl4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"oh and I can even do modfiier trains maybe","msgtype":"m.text","formatted_body":"oh and I can even do modfiier trains maybe"}}
{"origin_server_ts":1722987365109,"event_id":"$-oaWMEJ8KUeWARGQLP8sYFSoik7DfbTZiHp7U-8QE7s","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(I just know the name and don't know anything more than what a skim of the nuvoc page told me)","msgtype":"m.text","formatted_body":"(I just know the name and don&#x27;t know anything more than what a skim of the nuvoc page told me)"}}
{"origin_server_ts":1722987434594,"event_id":"$GPhD6YezWzRgUpJVBvsCJ5ZZwwKBmV3HobHjth5cfnU","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$jcfld8BE_K5_wZgjqJjBFsAzQwMPpzLITti3ad18lYU"}},"format":"org.matrix.custom.html","body":"BQN's is documented [here](https://mlochbaum.github.io/BQN/implementation/vm.html).","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$jcfld8BE_K5_wZgjqJjBFsAzQwMPpzLITti3ad18lYU\"> ↰ <\/a> <a href=\"https://matrix.to/#/@_discord_846111898888831016:t2bot.io\">i__love__murder<\/a> <\/mx-reply>BQN's is documented <a href=\"https://mlochbaum.github.io/BQN/implementation/vm.html\">here<\/a>."}}
{"origin_server_ts":1722987459526,"event_id":"$wVUTMt8OqbavOgnFlC-3pGRB_gS-M4nEO1rEFg33QJw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$rnWjIF9wygsHEpL6fGId0PfbDbhFWecyBNDG0ztRPwg"}},"format":"org.matrix.custom.html","body":"alright that's actually a very cool use case","msgtype":"m.text","formatted_body":"alright that&#x27;s actually a very cool use case"}}
{"origin_server_ts":1722987621019,"event_id":"$hTUIETRbzpvrZsVrWqf9sj3g-gNSMCV92x2T_W963h4","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"just realized once (if?) I have lambdas there's no reason to not allow them inside vector notation, I can just automatically Wrap them","msgtype":"m.text","formatted_body":"just realized once (if?) I have lambdas there&#x27;s no reason to not allow them inside vector notation, I can just automatically Wrap them"}}
{"origin_server_ts":1722987845720,"event_id":"$WDkGMsbioBSxe5VxCPJO54CX4SD3ztPaVSDMom_wesw","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"is parsing (normal function) trains just start from the rightmost, consume 2 at a time and make a fork until possible, consume 1 if remains and make an atop?","msgtype":"m.text","formatted_body":"is parsing (normal function) trains just start from the rightmost, consume 2 at a time and make a fork until possible, consume 1 if remains and make an atop?"}}
{"origin_server_ts":1722988067584,"event_id":"$yRU04Eg1deSdiUCuZ2L7Osb6xC4he-cPxCUdP5PUGjg","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Gi94yJafDbHpqTDtYlIWKTHk909_FbxUleoWjCisjDM"}},"format":"org.matrix.custom.html","body":"it's a pretty useful extension of `boolarr×arr` for zeroing elements, except it works on characters & infinities; other uses being, say, blending together lowercase & uppercase copies; I've wanted it a decent amount of times in AoC for masking off values in flood fill/similar stuff. It's a pretty important SIMD instruction, though in arraylangs equivalent uses are usually Under/At (though, unless the interpreter optimizes them to the blend, it'll likely be quite slower)","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$Gi94yJafDbHpqTDtYlIWKTHk909_FbxUleoWjCisjDM\"> ↰ <\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a> <\/mx-reply>it's a pretty useful extension of <code>boolarr×arr<\/code> for zeroing elements, except it works on characters &amp; infinities; other uses being, say, blending together lowercase &amp; uppercase copies; I've wanted it a decent amount of times in AoC for masking off values in flood fill/similar stuff. It's a pretty important SIMD instruction, though in arraylangs equivalent uses are usually Under/At (though, unless the interpreter optimizes them to the blend, it'll likely be quite slower)"}}
{"origin_server_ts":1722988075366,"event_id":"$Iah4QuF5O9yR3todtulIjxzGLkAYG8CHL5V4tCSU08U","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$WDkGMsbioBSxe5VxCPJO54CX4SD3ztPaVSDMom_wesw"}},"format":"org.matrix.custom.html","body":"yep","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$WDkGMsbioBSxe5VxCPJO54CX4SD3ztPaVSDMom_wesw\"> ↰ <\/a> <a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a> <\/mx-reply>yep"}}
{"origin_server_ts":1722988121305,"event_id":"$UDQ7lfyJ5OPgaLZBP8dn4DV6c2KyJBTmVqOWA8-bf5U","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"[here's](https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76) the train part of my mini-apl parser","msgtype":"m.text","formatted_body":"<a href=\"https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76\">here's<\/a> the train part of my mini-apl parser"}}
{"origin_server_ts":1722988134502,"event_id":"$5vdRhcvJ3cbQvHeKELuGTtG5LehQ4sS0ghXg380-pCY","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"[here's](https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76) the train part of a mini-apl parser I once made","msgtype":"m.text","formatted_body":"<a href=\"https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76\">here's<\/a> the train part of a mini-apl parser I once made"},"m.relates_to":{"event_id":"$UDQ7lfyJ5OPgaLZBP8dn4DV6c2KyJBTmVqOWA8-bf5U","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* [here's](https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76) the train part of a mini-apl parser I once made","msgtype":"m.text","formatted_body":"* <a href=\"https://gist.github.com/dzaima/5130955a1c2065aa1a94a4707b309844#file-apl-js-L70-L76\">here's<\/a> the train part of a mini-apl parser I once made"}}
{"origin_server_ts":1722988273575,"event_id":"$2VIoCMdXe2X-IuNGlZMqCzdm7TCeYZEZKOGQ95kir7Q","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Iah4QuF5O9yR3todtulIjxzGLkAYG8CHL5V4tCSU08U"}},"format":"org.matrix.custom.html","body":"great, how would supporting something like Cap or a syntax version of Nothing work?","msgtype":"m.text","formatted_body":"great, how would supporting something like Cap or a syntax version of Nothing work?"}}
{"origin_server_ts":1722988282212,"event_id":"$8OETkpA7QjppOkkRnaV2rtmcaIbRMQOUiRwB3qrJlyY","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"do I just detect it in g and force atop?","msgtype":"m.text","formatted_body":"do I just detect it in g and force atop?"}}
{"origin_server_ts":1722988288883,"event_id":"$EvH1t6_A3NUR5WRkkLK03b7rbpQrECuKb1qCWeAmmyo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"or in h?","msgtype":"m.text","formatted_body":"or in h?"}}
{"origin_server_ts":1722988316133,"event_id":"$oXgs-7N-fyQeg8nBhOY85a6dibHpc4LjPwKr3-gnU-E","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"if the two things you took are `nothing; function`, make an atop, and continue","msgtype":"m.text","formatted_body":"if the two things you took are <code>nothing; function<\/code>, make an atop, and continue"}}
{"origin_server_ts":1722988317777,"event_id":"$uuLf3iwsQ4kuvhsZTedha_uTKh7cDIm5VZjx6B-ZLNs","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I guess it can occur in all three and only masks sense in one of them, right?","msgtype":"m.text","formatted_body":"I guess it can occur in all three and only masks sense in one of them, right?"}}
{"origin_server_ts":1722988374653,"event_id":"$w1JI_1RY5pgdgzKTjHIDn1P2yFYSPvUm2ImtRr-PGzo","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`(F · G)` being an unhandled situation","msgtype":"m.text","formatted_body":"<code>(F · G)<\/code> being an unhandled situation"}}
{"origin_server_ts":1722988392324,"event_id":"$ILyM4OncpL-wiaO17fT7QC0Apv4HGmcZDwg86XD1c8w","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Cap in J just tests whether the left tine is the primitive `[:`, maybe every time it's run? But of course I don't recommend doing it that way.","msgtype":"m.text","formatted_body":"Cap in J just tests whether the left tine is the primitive <code>[:<\/code>, maybe every time it's run? But of course I don't recommend doing it that way."}}
{"origin_server_ts":1722988511727,"event_id":"$FP78prKX0DhTYUPTMG2n9FKZ6gUUWGa-DQWgjHPwv88","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(`(F G ·)` also unspecified)","msgtype":"m.text","formatted_body":"(<code>(F G ·)<\/code> also unspecified)"}}
{"origin_server_ts":1722988546269,"event_id":"$ZJ7_VHMV7GO31TTO1FiLl4wl_P6MLVjgaRqa4uFgMfE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah, as I said only one of the three makes sense","msgtype":"m.text","formatted_body":"yeah, as I said only one of the three makes sense"}}
{"origin_server_ts":1722988559287,"event_id":"$XjxB-WzFJUcaucRcugsxEaj5Jiw4ezEP3XBdijikPLk","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"is there a possible meaning that could be given to them?","msgtype":"m.text","formatted_body":"is there a possible meaning that could be given to them?"}}
{"origin_server_ts":1722988603203,"event_id":"$gDnE8TlrF5FoBvXKsZ06G9Ih1HGmO9E-iHgH8J0mT6g","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"BQN makes `(F G ·)` be `·` (for `𝕨` which can dynamically be either `·`, or a value)","msgtype":"m.text","formatted_body":"BQN makes <code>(F G ·)<\/code> be <code>·<\/code> (for <code>𝕨<\/code> which can dynamically be either <code>·<\/code>, or a value)"}}
{"origin_server_ts":1722988640997,"event_id":"$BLLu5oY-xcenrwY6bUVnKYQ97CgJEi-eqlCTIJPTH1w","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah, I don't think I'll have nothing as a true value, just the meaning of `⋄⋄` inside a train","msgtype":"m.text","formatted_body":"yeah, I don&#x27;t think I&#x27;ll have nothing as a true value, just the meaning of <code>⋄⋄<\/code> inside a train"}}
{"origin_server_ts":1722988821093,"event_id":"$D3cxvHJqPLBwG8TZGqUCj8vOLPayUw1kFgLsaGLCggQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"are modifier trains actually useful?","msgtype":"m.text","formatted_body":"are modifier trains actually useful?"}}
{"origin_server_ts":1722988831524,"event_id":"$pamBj5A5qm9hOJkechxJd8nvMnh9o6K83TXcwYCeLbQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"will ask the j channel","msgtype":"m.text","formatted_body":"will ask the j channel"}}
{"origin_server_ts":1722989363525,"event_id":"$z-b-AXWj0xw9rj7MlG2StPUyKh5ElEAXlwSjXrl5ZcQ","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"wait... modifier trains don't just take modifiers, they *return* modfiiers","msgtype":"m.text","formatted_body":"wait... modifier trains don&#x27;t just take modifiers, they <em>return<\/em> modfiiers"}}
{"origin_server_ts":1722989391880,"event_id":"$5vG29IA5H5FzhRCFRXbfomvqgyOyQdB7qgcbz1s7MBg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I can support that by doing `_⦅ ⦆_` or whatever but ehh","msgtype":"m.text","formatted_body":"I can support that by doing <code>_⦅ ⦆_<\/code> or whatever but ehh"}}
{"origin_server_ts":1722989404712,"event_id":"$gAk7oIe3coLv_yfR47DJxxj4xMvzkoP4NkL6Fqc7kZA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'll think about it, let's start with normal trains for now.","msgtype":"m.text","formatted_body":"I&#x27;ll think about it, let&#x27;s start with normal trains for now."}}
{"state_key":"@_discord_199111346258837504:t2bot.io","origin_server_ts":1723011483768,"event_id":"$qvWmnAKEpIMebp-daNJ5l8WALgR23v3jiBRr2OahnJM","sender":"@_discord_199111346258837504:t2bot.io","user_id":"@_discord_199111346258837504:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"199111346258837504","username":"athas#0"},"avatar_url":"mxc://t2bot.io/1c0cdaabffabc3e264edf09221f8b627530545481821068258250326016","displayname":"athas","membership":"join"}}
{"origin_server_ts":1723022488070,"event_id":"$tJGmYC9pNTBWOy10zO2HN8f4v8dfUeiuRxeZnbf-yAw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_604614910030118912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rubenverg: The idea of returning modifiers is weird, since if you have a function `F` returning a modifier, and a regular function `A`, then calling `A F x` is not statically decidable. If the call to `F` returns an operator, then that operator should affect the evaluation of `A`, but if it returns a value, it's just a regular call chain.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_604614910030118912:t2bot.io\">rubenverg<\/a>: The idea of returning modifiers is weird, since if you have a function <code>F<\/code> returning a modifier, and a regular function <code>A<\/code>, then calling <code>A F x<\/code> is not statically decidable. If the call to <code>F<\/code> returns an operator, then that operator should affect the evaluation of <code>A<\/code>, but if it returns a value, it's just a regular call chain."}}
{"origin_server_ts":1723022519786,"event_id":"$oQQd412BK7RFByMIihgXzoP_N-hlX5sWx78cOAdV9o4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"My understanding was that Tinyapl was statically parsed just like Kap, in which case this would not work?","msgtype":"m.text"}}
{"origin_server_ts":1723022759296,"event_id":"$Ra4NLkdLZe4ZOSyF7kfEulASTR6swsa3D3-8hac3OAA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"functions can't return modifiers","msgtype":"m.text","formatted_body":"functions can&#x27;t return modifiers"}}
{"origin_server_ts":1723022766865,"event_id":"$t8odUmC3X36-Otn1LyBPDq2UOe3L0Y8XkoPykIYwfMo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"modifier trains, which are syntax, can","msgtype":"m.text","formatted_body":"modifier trains, which are syntax, can"}}
{"origin_server_ts":1723022819440,"event_id":"$ybW9dliayBn8eG3g40Yjd4fJlEara-DVTuQEb9KCnXc","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"specifying their type with `⦅⦆` for functions, `_⦅⦆` for adverbs and `_⦅⦆_` for conjunctions, just like dfns","msgtype":"m.text","formatted_body":"specifying their type with <code>⦅⦆<\/code> for functions, <code>_⦅⦆<\/code> for adverbs and <code>_⦅⦆_<\/code> for conjunctions, just like dfns"}}
{"origin_server_ts":1723023006268,"event_id":"$UW7po81CR-1bmqn31sDJpvxCNC7L2vwWOj6WsEo-4bM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"OK, so it's statically decidable using declarations. That makes sense.","msgtype":"m.text"}}
{"origin_server_ts":1723029478717,"event_id":"$i-o7Gm1gc-9rvD65_3QpEzp2KJUjB-y28299niGLb_8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"[trains docpage](https://beta.tinyapl.rubenverg.com/docs/info/trains)","msgtype":"m.text","formatted_body":"[trains docpage](<a href=\"https://beta.tinyapl.rubenverg.com/docs/info/trains\">https://beta.tinyapl.rubenverg.com/docs/info/trains<\/a>)"}}
{"origin_server_ts":1723029807859,"event_id":"$4ulegmsbjXoNV_9-eknLsWLNhCD9kaxAR8V-iox53_U","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"there might be a few that j doesn't define and I can but i'll find out when i implement them and see the missing cases","msgtype":"m.text","formatted_body":"there might be a few that j doesn&#x27;t define and I can but i&#x27;ll find out when i implement them and see the missing cases"}}
{"state_key":"@_discord_1054270572332326952:t2bot.io","origin_server_ts":1723092713044,"event_id":"$wNlAuDdS3-MPfe5SIuikbgEX5HuYrxeZJRvofAAGDDM","sender":"@_discord_1054270572332326952:t2bot.io","user_id":"@_discord_1054270572332326952:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"1054270572332326952","username":"d4rl1ng_k1tty#0"},"avatar_url":"","displayname":"d4rl1ng_k1tty","membership":"join"}}
{"state_key":"@_discord_234196445576691713:t2bot.io","origin_server_ts":1723105248774,"event_id":"$5dwLnU9-KMVsgc55SBFLbgNwsFidYYkJfyMxYdczxCE","sender":"@_discord_234196445576691713:t2bot.io","user_id":"@_discord_234196445576691713:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":0,"name":"@everyone","position":0}],"displayColor":0,"id":"234196445576691713","username":"cswine#0"},"avatar_url":"mxc://t2bot.io/d18c68a6be5033367d0456a6c1ff4f1ea416d4901821461517652983808","displayname":"cswine","membership":"join"}}
{"origin_server_ts":1723112010738,"event_id":"$8PEtkIcNqwhlD4OcW7an_xi1-2Gml_fEwFQy1n3UMG8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Is there a good algorithm to implement integer log? I need something that works on bigints.","msgtype":"m.text"}}
{"origin_server_ts":1723112145406,"event_id":"$YhRuRTSz_rjcAJK_dJUftbY_100vfadSKnzt0JBvOw8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Basically, I need `⌊⍺⍟⍵` where both arguments are integers.","msgtype":"m.text","formatted_body":"Basically, I need <code>⌊⍺⍟⍵<\/code> where both arguments are integers."}}
{"origin_server_ts":1723113474860,"event_id":"$Yfsp2etww358ySUh8araVex-y9OlR6X2zxG4j7kRgpI","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$YhRuRTSz_rjcAJK_dJUftbY_100vfadSKnzt0JBvOw8"}},"format":"org.matrix.custom.html","body":"`{⌊(⌊2⍟⍵)÷⌈2⍟⍺}` should be a lower bound and  `{⌈(⌊2⍟⍵)÷⌊2⍟⍺}` should be an upper bound and both should be relatively easy to calculate. Perhaps do binary search between those?","msgtype":"m.text","formatted_body":"<code>{⌊(⌊2⍟⍵)÷⌈2⍟⍺}<\/code> should be a lower bound and  <code>{⌈(⌊2⍟⍵)÷⌊2⍟⍺}<\/code> should be an upper bound and both should be relatively easy to calculate. Perhaps do binary search between those?"}}
{"origin_server_ts":1723113513677,"event_id":"$BtcmaWUrzKKgIjcOeOiz1akniLUKM5i1-va3KHfc-kQ","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"The problem is that I can't rely on floating point log, since it'll just be infinity for large arguments.","msgtype":"m.text"}}
{"origin_server_ts":1723113535365,"event_id":"$cMPwBxwhlvyP80XSZC6sscN3erfY309YxtESWevW3Xo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Oh wait, log2.","msgtype":"m.text"}}
{"origin_server_ts":1723113539915,"event_id":"$q8qmKnfeM6fBI_2gpInz7VX8pkbIijsFCEV9GjOmSbw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"That's just bit count.","msgtype":"m.text"}}
{"origin_server_ts":1723113792490,"event_id":"$Z83K79TjzZ40gBjoW3a7QcY34GOhEvWRs6YQnpXKRXo","redacted_because":{"room_id":"!WpdazzauuDxyGNAiCr:matrix.org","origin_server_ts":1723115770305,"event_id":"$wAX4l3aBLg1iTYSB9W7YNriocmDEQnEyXo8nXegp3og","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","unsigned":{},"redacts":"$Z83K79TjzZ40gBjoW3a7QcY34GOhEvWRs6YQnpXKRXo","type":"m.room.redaction","content":{"redacts":"$Z83K79TjzZ40gBjoW3a7QcY34GOhEvWRs6YQnpXKRXo"}},"sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{}}
{"origin_server_ts":1723113836000,"event_id":"$n06nWOVyg4dEZioBRBg4SaPBdxGbNXUo5W4sqcj4IY0","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"But how do I narrow it down efficiently?","msgtype":"m.text"}}
{"origin_server_ts":1723115770305,"event_id":"$wAX4l3aBLg1iTYSB9W7YNriocmDEQnEyXo8nXegp3og","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","redacts":"$Z83K79TjzZ40gBjoW3a7QcY34GOhEvWRs6YQnpXKRXo","type":"m.room.redaction","content":{"redacts":"$Z83K79TjzZ40gBjoW3a7QcY34GOhEvWRs6YQnpXKRXo"}}
{"origin_server_ts":1723116295149,"event_id":"$zwrl2ThPmqXpFNf80lN0lLM5JniyLWgfOXaNKhGXzPw","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"The idea with binary search would be that if your bounds are `l` and `h` you maintain `10*l` and keep testing out `(10*l)×(10*⌊2÷⍨h-l)` against `⍵` to halve the search space. Or maintaining `⌊⍵÷10*l` might be a little better at least until `l-h` gets small.","msgtype":"m.text","formatted_body":"The idea with binary search would be that if your bounds are <code>l<\/code> and <code>h<\/code> you maintain <code>10*l<\/code> and keep testing out <code>(10*l)×(10*⌊2÷⍨h-l)<\/code> against <code>⍵<\/code> to halve the search space. Or maintaining <code>⌊⍵÷10*l<\/code> might be a little better at least until <code>l-h<\/code> gets small."}}
{"origin_server_ts":1723116564833,"event_id":"$w8KcIkNfTFxIHq8TKE2oksdQnV396kxD51HPqTaAPYw","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Since 10 has such a small lower bound you could also get more resolution using `2⍟10*k ←→ k×2⍟10`, so, compute `⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k` for some integer `k`.","msgtype":"m.text","formatted_body":"Since 10 has such a small lower bound you could also get more resolution using <code>2⍟10*k ←→ k×2⍟10<\/code>, so, compute <code>⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k<\/code> for some integer <code>k<\/code>."}}
{"origin_server_ts":1723116578497,"event_id":"$wkg-FwwuNFoU50eO8_GGOk62chgyqqmITdgT1h-W6mc","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"Since 10 has such a small log you could also get more resolution using `2⍟10*k ←→ k×2⍟10`, so, compute `⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k` for some integer `k`.","msgtype":"m.text","formatted_body":"Since 10 has such a small log you could also get more resolution using <code>2⍟10*k ←→ k×2⍟10<\/code>, so, compute <code>⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k<\/code> for some integer <code>k<\/code>."},"m.relates_to":{"event_id":"$w8KcIkNfTFxIHq8TKE2oksdQnV396kxD51HPqTaAPYw","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* Since 10 has such a small log you could also get more resolution using `2⍟10*k ←→ k×2⍟10`, so, compute `⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k` for some integer `k`.","msgtype":"m.text","formatted_body":"* Since 10 has such a small log you could also get more resolution using <code>2⍟10*k ←→ k×2⍟10<\/code>, so, compute <code>⌊(k×⌊2⍟⍵)÷⌈2⍟⍺*k<\/code> for some integer <code>k<\/code>."}}
{"origin_server_ts":1723120766720,"event_id":"$Q9G0FDJpAlLcyTOJBHW6zyuwYw_FJjlD7f-RXDb-hFE","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$BtcmaWUrzKKgIjcOeOiz1akniLUKM5i1-va3KHfc-kQ"}},"format":"org.matrix.custom.html","body":"you can take the float log of the most significant 53 bits, and add the bit count. And if that lands near an integer boundary, test the two possible near values","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$BtcmaWUrzKKgIjcOeOiz1akniLUKM5i1-va3KHfc-kQ\"> ↰ <\/a> <a href=\"https://matrix.to/#/@loke:dhsdevelopments.com\">loke<\/a> <\/mx-reply>you can take the float log of the most significant 53 bits, and add the bit count. And if that lands near an integer boundary, test the two possible near values"}}
{"origin_server_ts":1723120858296,"event_id":"$WCxvK4hHZ5qMsJOdoPQhkTXj9yNoaiZS4w8kkqMk4p8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Will that work even if it's a 1000-digit number?","msgtype":"m.text"}}
{"origin_server_ts":1723120950627,"event_id":"$WP57cHxkzeO-awDkU1t8TWGA-QJNZkkK2pUiTRkVB2M","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"that's what the integer boundary check is for","msgtype":"m.text","formatted_body":"that's what the integer boundary check is for"}}
{"origin_server_ts":1723121075730,"event_id":"$IAHXJ-v8YySMFAjWrOQnj1BDJs_T0eaHSkpAAQ2ZNH4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"dzaima/APL:\n```\n> ⎕pp←99\n99\n> 2 ⍟ 2L*1000\n1000.0000000000001\n> 2 ⍟ ¯1+2L*1000\n999.9999999999999\n> 2 ⍟ 2÷⍨3×2L*1000\n1000.5849625007213\n```\nthough I only implemented it for `2⍟`, but idea is the same and doesn't actually strictly need anything `2`-specific","msgtype":"m.text","formatted_body":"dzaima/APL:<br><pre><code>&#62; ⎕pp←99\n99\n&#62; 2 ⍟ 2L*1000\n1000.0000000000001\n&#62; 2 ⍟ ¯1+2L*1000\n999.9999999999999\n&#62; 2 ⍟ 2÷⍨3×2L*1000\n1000.5849625007213<\/code><\/pre>though I only implemented it for <code>2⍟<\/code>, but idea is the same and doesn't actually strictly need anything <code>2<\/code>-specific"}}
{"origin_server_ts":1723121163767,"event_id":"$Ze6Yh3yrbR8O3ehU_DNh1YJxI_Vkt8GKl1_QdaBs4lY","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"And the uncertainty in the logarithm has to be pretty small because a difference of 1 in the log is a factor of `⍺` in the argument, which is at least 2, so it clearly shows up in the high bits.","msgtype":"m.text","formatted_body":"And the uncertainty in the logarithm has to be pretty small because a difference of 1 in the log is a factor of <code>⍺<\/code> in the argument, which is at least 2, so it clearly shows up in the high bits."}}
{"origin_server_ts":1723121322612,"event_id":"$F4lBBUcUTrNSz_WPMI75_dhHbOj2Uzw2GOjvz0gYQB4","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(the dzaima/APL thing [does use](https://github.com/dzaima/APL/blob/5eb0a4205e27afa6122096a25008474eec562dc0/src/APL/types/functions/builtins/fns/LogBuiltin.java#L58-L67) the bit count, whereas for arbitrary numbers you'd need to rely on the approximated log; but yeah all you need from it is integer-level precision, whereas you get an entire 30 fractional bits even on billion-digit numbers)","msgtype":"m.text","formatted_body":"(the dzaima/APL thing <a href=\"https://github.com/dzaima/APL/blob/5eb0a4205e27afa6122096a25008474eec562dc0/src/APL/types/functions/builtins/fns/LogBuiltin.java#L58-L67\">does use<\/a> the bit count, whereas for arbitrary numbers you'd need to rely on the approximated log; but yeah all you need from it is integer-level precision, whereas you get an entire 30 fractional bits even on billion-digit numbers)"}}
{"origin_server_ts":1723122635566,"event_id":"$me1hTADIzxGfY1f972Kc26XB1OrhQiSDmsJGM67g1N0","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"said differently, to change the result of `⌊a⍟b` by two or more, either `a` or `b` must change by at least a factor of `2`, whereas the float log will react to a factor of change below `0.000000001`; so you only need to check potential results ±1 around the float log (and if it's far from an integer, you needn't check anything, assuming the float log isn't, like, extremely horrifically imprecise)","msgtype":"m.text","formatted_body":"said differently, to change the result of <code>⌊a⍟b<\/code> by two or more, either <code>a<\/code> or <code>b<\/code> must change by at least a factor of <code>2<\/code>, whereas the float log will react to a factor of change below <code>0.000000001<\/code>; so you only need to check potential results ±1 around the float log (and if it's far from an integer, you needn't check anything, assuming the float log isn't, like, extremely horrifically imprecise)"}}
{"origin_server_ts":1723134875321,"event_id":"$vobv-cjUFt4Zxs5GCCLzeyF9KOkQ3DLiEXTN6iAJJ78","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"body":"Thanks. That's interesting indeed","msgtype":"m.text"}}
{"state_key":"@_discord_918522255913398304:t2bot.io","origin_server_ts":1723148438405,"event_id":"$8Sl7nO7W_XhbupOgcHMS8OWqIAGxbMBPo4-6D8gCcwQ","sender":"@_discord_918522255913398304:t2bot.io","user_id":"@_discord_918522255913398304:t2bot.io","type":"m.room.member","content":{"uk.half-shot.discord.member":{"bot":false,"roles":[{"color":15105570,"name":"Dyalog Adept","position":14},{"color":0,"name":"@everyone","position":0}],"displayColor":15105570,"id":"918522255913398304","username":"poorhiram#0"},"avatar_url":"mxc://t2bot.io/d2d4214dbf0f188936b38a78426de1080d907699","displayname":"poorhiram","membership":"join"}}
{"origin_server_ts":1723183293529,"event_id":"$FdRP0Lw_3q613Vbf7APSUyEvyKW8sQkTDRjny2qsc78","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I've wanted to rewrite `⊥` and `⊤` for a while now, but every time I look at the APL definition, I get confused. It does a bunch of things I don't think anyone ever used (multi-dimensional left arguments to decode, for example). And it does some things backwards (such as returning a transposed version of what I would expect).","msgtype":"m.text","formatted_body":"I've wanted to rewrite <code>⊥<\/code> and <code>⊤<\/code> for a while now, but every time I look at the APL definition, I get confused. It does a bunch of things I don't think anyone ever used (multi-dimensional left arguments to decode, for example). And it does some things backwards (such as returning a transposed version of what I would expect)."}}
{"origin_server_ts":1723183339588,"event_id":"$TT5fvT-UxRmu5q5KHQd047OgFxSTBg6A5AfcsWWDBFE","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"So my question is: Is there a simple way to explain the behaviour such that it can be straightforwardly implemented (i.e. I have misunderstood these functions), or is there a better definition that I can switch to?","msgtype":"m.text"}}
{"origin_server_ts":1723183951075,"event_id":"$tgkhjIAXUS3xgvVCQG5U7gwPb_L8yrYPlq7_xk3pWkY","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm not sure I see the value in a higher dimensional version since if you only accepted vectors you could use the rank operator to get the same result.  Actually, I'm not sure what \"radix along the first axis\" means exactly when your argument is of rank greater than 2 if not basically what you'd get with rank 1 application.","msgtype":"m.text","formatted_body":"I&#x27;m not sure I see the value in a higher dimensional version since if you only accepted vectors you could use the rank operator to get the same result.  Actually, I&#x27;m not sure what &quot;radix along the first axis&quot; means exactly when your argument is of rank greater than 2 if not basically what you&#x27;d get with rank 1 application."}}
{"origin_server_ts":1723184091306,"event_id":"$MBWw3bo2KW-CukEhVWLQkDNtpHje5ZzxJ2ML_ZG1UEM","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"As for orientation I think this is basically what you get when you implement it as a fold using Horner's method.","msgtype":"m.text","formatted_body":"As for orientation I think this is basically what you get when you implement it as a fold using Horner&#x27;s method."}}
{"origin_server_ts":1723184806373,"event_id":"$4YdmF4oxKPizgECQkYs0_Fw2aO71GEIR_o0t7x6uIGI","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"Yeah, I feel the APL function is overengineered.","msgtype":"m.text"}}
{"origin_server_ts":1723184842926,"event_id":"$P45N6gbWrA1w-HvFvAmD40Snkho_84mmB0-iNVmGZG4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"I wonder if there is anything written explaining the thinking behind the original design.","msgtype":"m.text"}}
{"origin_server_ts":1723185151407,"event_id":"$Rq1UBUL3LaHTdbszpZqWDS5N81T_Ml6GXokKcontwT0","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$tgkhjIAXUS3xgvVCQG5U7gwPb_L8yrYPlq7_xk3pWkY"}},"format":"org.matrix.custom.html","body":"There isn't any point in *not* extending to higher ranks. As long as the extension is reasonable of course.","msgtype":"m.text","formatted_body":"There isn&#x27;t any point in <em>not<\/em> extending to higher ranks. As long as the extension is reasonable of course."}}
{"origin_server_ts":1723185313131,"event_id":"$wfKEokvtJm-MULWaAGAAe1_prtDsPrbd_WR3cyaHLbA","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I do agree it does have some baggage that a re-implementation should be free from though.","msgtype":"m.text","formatted_body":"I do agree it does have some baggage that a re-implementation should be free from though."}}
{"origin_server_ts":1723185632047,"event_id":"$toe_4onBi9TGJmhJshT8klvQFoLQ1mEu7Svq0rY9RkY","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Scalar left argument to encode should just work.","msgtype":"m.text","formatted_body":"Scalar left argument to encode should just work."}}
{"origin_server_ts":1723185780862,"event_id":"$qE8baDpC91Te-fzG7ngnTBuf0gLQC-EK-dV0UR0v_0A","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$Rq1UBUL3LaHTdbszpZqWDS5N81T_Ml6GXokKcontwT0"}},"format":"org.matrix.custom.html","body":"Not exactly an argument that it\u2019s meaningful is it?","msgtype":"m.text","formatted_body":"Not exactly an argument that it\u2019s meaningful is it?"}}
{"origin_server_ts":1723186031484,"event_id":"$8eoJslRKowE0xqUo6Zvh2uTWV6k6dTGjQXYT4JE_Pq0","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Also my point was that I don\u2019t see any other interpretation not \u201cdon\u2019t do this\u201d.","msgtype":"m.text","formatted_body":"Also my point was that I don\u2019t see any other interpretation not \u201cdon\u2019t do this\u201d."}}
{"origin_server_ts":1723186190621,"event_id":"$ScNbfUrmb69Cw-hzHeEjyiHc00VqkHS9ggPGxm6KCBc","sender":"@_discord_1262574255451668500:t2bot.io","user_id":"@_discord_1262574255451668500:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the higher the rank, the less often it comes up in practical applications,\nand generalizations to do stuff that nobody ever uses are just bloat","msgtype":"m.text","formatted_body":"the higher the rank, the less often it comes up in practical applications,<br>and generalizations to do stuff that nobody ever uses are just bloat"}}
{"origin_server_ts":1723192643914,"event_id":"$xpXNyanocCnqz-rfGLLnttndbHhw5U3AKBcr70JemXw","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$ScNbfUrmb69Cw-hzHeEjyiHc00VqkHS9ggPGxm6KCBc"}},"format":"org.matrix.custom.html","body":"yeah, let's just get rid of high-rank from apl altogether /s","msgtype":"m.text","formatted_body":"yeah, let&#x27;s just get rid of high-rank from apl altogether /s"}}
{"origin_server_ts":1723192653778,"event_id":"$iOfjmcHblkYbwxTtYUSMxFyBEemPzIQ6S9zG-C8Taxk","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"yeah, let's just get rid of high-rank anything from apl altogether /s","msgtype":"m.text","formatted_body":"yeah, let&#x27;s just get rid of high-rank anything from apl altogether /s"},"m.relates_to":{"event_id":"$xpXNyanocCnqz-rfGLLnttndbHhw5U3AKBcr70JemXw","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* yeah, let's just get rid of high-rank anything from apl altogether /s","msgtype":"m.text","formatted_body":"* yeah, let&#x27;s just get rid of high-rank anything from apl altogether /s"}}
{"origin_server_ts":1723192701077,"event_id":"$Zlkh_e_wUg6sC9nKQg_NPL0ml4kgkwqgm2z1Cxc2iGU","sender":"@_discord_651823008347979793:t2bot.io","user_id":"@_discord_651823008347979793:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$toe_4onBi9TGJmhJshT8klvQFoLQ1mEu7Svq0rY9RkY"}},"format":"org.matrix.custom.html","body":"yes, that's the one breaking change I'm in favour of. If you mean `⎕CT←0 ⋄ x|y` then write that instead of `x⊤y`!","msgtype":"m.text","formatted_body":"yes, that&#x27;s the one breaking change I&#x27;m in favour of. If you mean <code>⎕CT←0 ⋄ x|y<\/code> then write that instead of <code>x⊤y<\/code>!"}}
{"origin_server_ts":1723193201421,"event_id":"$5y_NSlM6QgIWYtU3zH6NugC8Xkhd3R6MTXu7Ht_-4rA","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I'm guessing s/he means `2⊤589` instead of `2⊥⍣¯1⊢589`","msgtype":"m.text","formatted_body":"I&#x27;m guessing s/he means <code>2⊤589<\/code> instead of <code>2⊥⍣¯1⊢589<\/code>"}}
{"origin_server_ts":1723193296447,"event_id":"$RPoKWKV6KtPxv-PUwLWSKr3n64hijc2k-07llG8iEr8","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"You could still have `(1 1⍴2)⊤58` with the current behavior.","msgtype":"m.text","formatted_body":"You could still have <code>(1 1⍴2)⊤58<\/code> with the current behavior."}}
{"origin_server_ts":1723194714252,"event_id":"$ArlX5mPrJtoSjSLqzTf792k4B7eVIkZWQsQqyZvPfCI","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"the heights people will go to avoid \"they\" in a sentence","msgtype":"m.text","formatted_body":"the heights people will go to avoid &quot;they&quot; in a sentence"}}
{"origin_server_ts":1723194732929,"event_id":"$JApj7UQ0ni3PGPJPvkbqXlV6ToborLM1WpkCY0Q7a9E","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$ScNbfUrmb69Cw-hzHeEjyiHc00VqkHS9ggPGxm6KCBc"}},"format":"org.matrix.custom.html","body":"that said, they make it consistent.","msgtype":"m.text","formatted_body":"that said, they make it consistent."}}
{"origin_server_ts":1723194735624,"event_id":"$vTGpJSf38SApfX290_jNJo7aM0VwAtp3QnmPAaYRY3c","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"That goodness we have you on the case...","msgtype":"m.text","formatted_body":"That goodness we have you on the case..."}}
{"origin_server_ts":1723194744281,"event_id":"$24D3FFlz5rQyy5rp6MxJHge9TQhrvsbiUdEjUsiKaNg","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it's an underrated feature of programming languages","msgtype":"m.text","formatted_body":"it&#x27;s an underrated feature of programming languages"}}
{"origin_server_ts":1723196665691,"event_id":"$Ue7OiR1mjPE3o8zyUm5EmUGc3YnOnHuqdBNCGfcWl_s","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$ArlX5mPrJtoSjSLqzTf792k4B7eVIkZWQsQqyZvPfCI"}},"format":"org.matrix.custom.html","body":"<off topic opinion>It's probably best not to assume maliciousness for anachronistic gender inclusive language. Most of the time you're just antagonising someone who is acting in good faith. Since they're already trying to do the \"right thing\", you can just correct it without turning it into an adversarial situation.<\/off topic opinion>","msgtype":"m.text","formatted_body":"&lt;off topic opinion&gt;It&#x27;s probably best not to assume maliciousness for anachronistic gender inclusive language. Most of the time you&#x27;re just antagonising someone who is acting in good faith. Since they&#x27;re already trying to do the &quot;right thing&quot;, you can just correct it without turning it into an adversarial situation.&lt;/off topic opinion&gt;"}}
{"origin_server_ts":1723196808815,"event_id":"$7pQv8ev4UTeE8F93J3ID7S4jdZ6hq0M4MGEll1j1EG8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"OK, I note that there are some differing opinions, so I will shelve this for a while longer while I think about what I will do.","msgtype":"m.text"}}
{"origin_server_ts":1723197129678,"event_id":"$WEhOtU1_DcHJXWx1KilniUy_wevAcJMSqpO2XEkGs0k","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Another question: Up until now, I have used `⍴∵` to represent popcount. This is of course a bit controversial since `⍴` isn't really counting anything, it's returning the size of something.","msgtype":"m.text","formatted_body":"Another question: Up until now, I have used <code>⍴∵<\/code> to represent popcount. This is of course a bit controversial since <code>⍴<\/code> isn't really counting anything, it's returning the size of something."}}
{"origin_server_ts":1723197185914,"event_id":"$2Z0M9jva-DRQCzr2aWynt5RbAn-ZJASb-qrqQihxWEs","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"Now I've implemented a bitlength operation (basically `⌊2⍟`) for integers, and I note that this operation would be much better suited for `⍴∵`.","msgtype":"m.text","formatted_body":"Now I've implemented a bitlength operation (basically <code>⌊2⍟<\/code>) for integers, and I note that this operation would be much better suited for <code>⍴∵<\/code>."}}
{"origin_server_ts":1723197226356,"event_id":"$T8vp7EIos3Lz8ooajWcRDHJN-OtYkJ9JP5qAdBvixVQ","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"So where do I move popcount? Perhaps `⍳∵` or `⍸∵`.","msgtype":"m.text","formatted_body":"So where do I move popcount? Perhaps <code>⍳∵<\/code> or <code>⍸∵<\/code>."}}
{"origin_server_ts":1723197324215,"event_id":"$d5bVM2QX_SSY324d1qWnRe4NI6Mndgp8tltOVgfxxyA","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"`⍸∵` makes the most sense to me","msgtype":"m.text","formatted_body":"<code>⍸∵<\/code> makes the most sense to me"}}
{"origin_server_ts":1723197329110,"event_id":"$kgs3jM2iO9Ge9jgh7QfXZLQmG5dnFTNjfGdG1QnngOA","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"`⍸∵` makes the most sense to me. it's already related to key.","msgtype":"m.text","formatted_body":"<code>⍸∵<\/code> makes the most sense to me. it&#x27;s already related to key."},"m.relates_to":{"event_id":"$d5bVM2QX_SSY324d1qWnRe4NI6Mndgp8tltOVgfxxyA","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* `⍸∵` makes the most sense to me. it's already related to key.","msgtype":"m.text","formatted_body":"* <code>⍸∵<\/code> makes the most sense to me. it&#x27;s already related to key."}}
{"origin_server_ts":1723197339266,"event_id":"$YtMC2_BOU5uEHTlk-k3Sfw2t8TWySdFlqMn0Z_mHLS8","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"why not +/","msgtype":"m.text","formatted_body":"why not +/"}}
{"origin_server_ts":1723197359392,"event_id":"$ma68z_2y81NeiV2ozm1-h7xhlyxF7b3DKwVQKE2f9r8","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"where should return the indices of 1 bits","msgtype":"m.text","formatted_body":"where should return the indices of 1 bits"}}
{"origin_server_ts":1723197363760,"event_id":"$kEyM45I2BPk_Q_PG3oLhccXcJryRkjnFL59R5FvX3qM","sender":"@_discord_356107472269869058:t2bot.io","user_id":"@_discord_356107472269869058:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"`⍸∵` makes the most sense to me. it's already related to key and the shape of its result is the popcount","msgtype":"m.text","formatted_body":"<code>⍸∵<\/code> makes the most sense to me. it&#x27;s already related to key and the shape of its result is the popcount"},"m.relates_to":{"event_id":"$d5bVM2QX_SSY324d1qWnRe4NI6Mndgp8tltOVgfxxyA","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* `⍸∵` makes the most sense to me. it's already related to key and the shape of its result is the popcount","msgtype":"m.text","formatted_body":"* <code>⍸∵<\/code> makes the most sense to me. it&#x27;s already related to key and the shape of its result is the popcount"}}
{"origin_server_ts":1723197417748,"event_id":"$WYUz-KStS2Kopt19FPZIZIxBBYI2C_i3jF7-UbMyWj8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_125549206139174912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rak1507: Implementation reasons. `∵` is implemented internally by calling `.deriveBitwise` on a function object. `+/` is a compound function so its implementation of `.deriverBitwise` would have to delegate to the underlying function, which is a bit ugly.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_125549206139174912:t2bot.io\">rak1507<\/a>: Implementation reasons. <code>∵<\/code> is implemented internally by calling <code>.deriveBitwise<\/code> on a function object. <code>+/<\/code> is a compound function so its implementation of <code>.deriverBitwise<\/code> would have to delegate to the underlying function, which is a bit ugly."}}
{"origin_server_ts":1723197456599,"event_id":"$Bj7FjrXRnKFnumbuPR9oi6CkuO6gQBd5Z-wACr3ZlQs","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"It doesn't mean it can't be done, but it's, as I said, ugly. And it also remind me of apl360 having +/, -/ etc, but it not being generalised.","msgtype":"m.text"}}
{"origin_server_ts":1723197475777,"event_id":"$4Bz9cF6rTi2uqxN0-oezVGJpzc5MqQAf_2CK-4DRUAQ","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"fair enough","msgtype":"m.text","formatted_body":"fair enough"}}
{"origin_server_ts":1723197485486,"event_id":"$xBmd1fVMFkWgM91cpxch3ZeJSKKBOKFUSOoWp2k9u0Y","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"imo if you can't find a nice fit for it, don't bother having it as a built in","msgtype":"m.text","formatted_body":"imo if you can&#x27;t find a nice fit for it, don&#x27;t bother having it as a built in"}}
{"origin_server_ts":1723197502950,"event_id":"$wfjfpLUFonwqtFmD6GLPiNNgfhroU8craFVRsxg9R3Q","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"bc it's easy enough to implement anyway","msgtype":"m.text","formatted_body":"bc it&#x27;s easy enough to implement anyway"}}
{"origin_server_ts":1723197505838,"event_id":"$PG97Th2Gve1Q_hlkOqx_lPSO0sc0-MzKa4P4owy8RV8","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"It already exists as a builtin. :-) I could give it the name `popcnt` though.","msgtype":"m.text","formatted_body":"It already exists as a builtin. :-) I could give it the name <code>popcnt<\/code> though."}}
{"origin_server_ts":1723197577568,"event_id":"$VgraFZ8eHmoQVyNgkyw30U0BKwEOPKOA_YFCvQwjVJk","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"well yeah I know you said that","msgtype":"m.text","formatted_body":"well yeah I know you said that"}}
{"origin_server_ts":1723197584254,"event_id":"$wYMH-nVq5NmquMe-X4ijCksgb6LRTlrMfbEZzQyLJr0","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but it's not a good fit","msgtype":"m.text","formatted_body":"but it&#x27;s not a good fit"}}
{"origin_server_ts":1723197587731,"event_id":"$juQeLj9w8PDSs_X2nlkCqwNwBEbNg8_tMaoUyKTJ49E","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"so it should be removed","msgtype":"m.text","formatted_body":"so it should be removed"}}
{"origin_server_ts":1723197880077,"event_id":"$28fWn0pbQn5oism_yhDYw5ujW1oXx5mEuzJmLUp2x2M","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_125549206139174912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rak1507: So your suggestion is either don","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_125549206139174912:t2bot.io\">rak1507<\/a>: So your suggestion is either don"}}
{"origin_server_ts":1723197893935,"event_id":"$JgCwF-_lPv4KtosHLWCKiA7ICqV8kohmlaapo6bE4dg","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{"user_ids":["@_discord_125549206139174912:t2bot.io"]},"format":"org.matrix.custom.html","body":"rak1507: So your suggestion is either don't include it as a derived function, or add it to `+/`?","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_125549206139174912:t2bot.io\">rak1507<\/a>: So your suggestion is either don't include it as a derived function, or add it to <code>+/<\/code>?"},"m.relates_to":{"event_id":"$28fWn0pbQn5oism_yhDYw5ujW1oXx5mEuzJmLUp2x2M","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * rak1507: So your suggestion is either don't include it as a derived function, or add it to `+/`?","msgtype":"m.text","formatted_body":" * <a href=\"https://matrix.to/#/@_discord_125549206139174912:t2bot.io\">rak1507<\/a>: So your suggestion is either don't include it as a derived function, or add it to <code>+/<\/code>?"}}
{"origin_server_ts":1723197985434,"event_id":"$g_PcYc9xDO0OgFzjCHztPhV2FnCVsfgmTPL05anKBMg","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah","msgtype":"m.text","formatted_body":"yeah"}}
{"origin_server_ts":1723197996313,"event_id":"$3ZbrhHdjnRsB0taJQnoXOAK8eMfpURhQs7TXbRUaJ0E","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"unless there's something else that would make sense","msgtype":"m.text","formatted_body":"unless there&#x27;s something else that would make sense"}}
{"origin_server_ts":1723198004744,"event_id":"$xll_m2JtXzXyxboNU1EqCKiBRif0b0Fk2A17LE6OmdM","sender":"@_discord_125549206139174912:t2bot.io","user_id":"@_discord_125549206139174912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but I'm not sure there is","msgtype":"m.text","formatted_body":"but I&#x27;m not sure there is"}}
{"origin_server_ts":1723198692613,"event_id":"$029zR920gJ9rDjLPQvuUCH_dYvBYlfSKVR0xGkCqMb4","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"I","msgtype":"m.text"}}
{"origin_server_ts":1723198715633,"event_id":"$-DLkN7Hfgp8u_C34vUOTqYirCRwJufBf5HP4CWdUNhw","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.new_content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I'll see how ugly the implementation for `+/∵` will be.","msgtype":"m.text","formatted_body":"I'll see how ugly the implementation for <code>+/∵<\/code> will be."},"m.relates_to":{"event_id":"$029zR920gJ9rDjLPQvuUCH_dYvBYlfSKVR0xGkCqMb4","rel_type":"m.replace"},"m.mentions":{},"format":"org.matrix.custom.html","body":" * I'll see how ugly the implementation for `+/∵` will be.","msgtype":"m.text","formatted_body":" * I'll see how ugly the implementation for <code>+/∵<\/code> will be."}}
{"origin_server_ts":1723203262328,"event_id":"$i8yxm1UZ_a6qP6Z6Z-fYb4nNjItR_oTd2oOCgF3W2bQ","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$FdRP0Lw_3q613Vbf7APSUyEvyKW8sQkTDRjny2qsc78"}},"format":"org.matrix.custom.html","body":"For `⊥`, defining it as rank 1 but allowing nested arguments would make sense. So `8⊥2 3 4` works as in APL and then `2⊥3 2⍴2 3 4 5 6 7` and `⊃2⊥(2 4 6)(3 5 7)` are equivalent ways to do 3 2-digit numbers. The `⊃` is a little annoying but reduction has it too. Similar stuff applies to `⊤` but I think there are some extra complications.","msgtype":"m.text","formatted_body":"<mx-reply><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$FdRP0Lw_3q613Vbf7APSUyEvyKW8sQkTDRjny2qsc78\"> ↰ <\/a> <a href=\"https://matrix.to/#/@loke:dhsdevelopments.com\">loke<\/a> <\/mx-reply>For <code>⊥<\/code>, defining it as rank 1 but allowing nested arguments would make sense. So <code>8⊥2 3 4<\/code> works as in APL and then <code>2⊥3 2⍴2 3 4 5 6 7<\/code> and <code>⊃2⊥(2 4 6)(3 5 7)<\/code> are equivalent ways to do 3 2-digit numbers. The <code>⊃<\/code> is a little annoying but reduction has it too. Similar stuff applies to <code>⊤<\/code> but I think there are some extra complications."}}
{"origin_server_ts":1723204017427,"event_id":"$bg3Hc0Cut--nIP_RwurUUtzuC2oQg7xp_CxjSB4ATzo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@mlochbaum:matrix.org"]},"format":"org.matrix.custom.html","body":"Marshall: something like that is what I'm considering.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@mlochbaum:matrix.org\">Marshall<\/a>: something like that is what I'm considering."}}
{"origin_server_ts":1723265727671,"event_id":"$HgFaJLX_LDfKYMfBGROrLMB7XxOyke9JEt0wicMyO2Q","sender":"@jrkpthinks:matrix.org","user_id":"@jrkpthinks:matrix.org","type":"m.room.message","content":{"body":"Do \"reverse\" & \"transpose\" implementations usually set a flag indicating to traverse the data in a different  pattern, or actually copy the data around?","msgtype":"m.text"}}
{"origin_server_ts":1723267238239,"event_id":"$8PNb3KRGcrxFQnbZwETxTXItp2mJVGpQ1C_bzYECDwA","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I think _usually_ they move memory.  One alternative is to use \u201cstriding\u201d which is similar to your description.  I think @Marshall has an essay about it somewhere.","msgtype":"m.text","formatted_body":"I think <em>usually<\/em> they move memory.  One alternative is to use \u201cstriding\u201d which is similar to your description.  I think @Marshall has an essay about it somewhere."}}
{"origin_server_ts":1723267502832,"event_id":"$Xs-qiX96NNPNc5lmSob-Pl7Otut344SuwCdktL0GveM","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Maybe [this](https://mlochbaum.github.io/BQN/implementation/primitive/transpose.html#strided-representation)?","msgtype":"m.text","formatted_body":"Maybe [this](<a href=\"https://mlochbaum.github.io/BQN/implementation/primitive/transpose.html#strided-representation)?\">https://mlochbaum.github.io/BQN/implementation/primitive/transpose.html#strided-representation)?<\/a>"}}
{"origin_server_ts":1723267645466,"event_id":"$K1VVbnltOuexI8ZZWizMYVJEpBWQ8rbLc5RuiYY7WGY","sender":"@_discord_870115701279584326:t2bot.io","user_id":"@_discord_870115701279584326:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I think April and KAP employ laziness in various ways.","msgtype":"m.text","formatted_body":"I think April and KAP employ laziness in various ways."}}
{"origin_server_ts":1723268467743,"event_id":"$E2w3xcbft3SVrG8esMLwqL8_5eKZARMwMFHu6LUqm20","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Streams can probably be treated pretty much just like lazy arrays","msgtype":"m.text","formatted_body":"Streams can probably be treated pretty much just like lazy arrays"}}
{"origin_server_ts":1723269250828,"event_id":"$Ff8qF6bC-R3GOa1n1sGTYgPnckdOjNBNRyVVeajqrrY","sender":"@jrkpthinks:matrix.org","user_id":"@jrkpthinks:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"discodoug:  thanks I'll read that before deciding on how to represent 2d arrays ","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_870115701279584326:t2bot.io\">@_discord_870115701279584326:t2bot.io<\/a>:  thanks I'll read that before deciding on how to represent 2d arrays "}}
{"origin_server_ts":1723274174878,"event_id":"$whixplThqjBujunJwI3o-cMG-yS2-q6DfbTBDgEM7sM","sender":"@jrkpthinks:matrix.org","user_id":"@jrkpthinks:matrix.org","type":"m.room.message","content":{"body":"I think I will just use nested 1d arrays and do the obvious brute force implementation of everything. If the idea is worth pursuing I can rewrite it.","msgtype":"m.text"}}
{"origin_server_ts":1723287757527,"event_id":"$W_IJAJYHyv7rDapDAPC9vg-ihWprzuHetfyO3DK2voQ","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"2D kernel transpose still works with nested arrays, only the load and store steps are a little slower because they have to read base pointers instead of computing them with arithmetic. But kernel transpose isn't much faster on 8-byte data so it only starts mattering once you have optimized element types.","msgtype":"m.text","formatted_body":"2D kernel transpose still works with nested arrays, only the load and store steps are a little slower because they have to read base pointers instead of computing them with arithmetic. But kernel transpose isn't much faster on 8-byte data so it only starts mattering once you have optimized element types."}}
{"origin_server_ts":1723299153984,"event_id":"$L7n3d0YGArEqWB4uTn-41S4m_LJjP-fVOCimdlx99ZA","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@mlochbaum:matrix.org"]},"format":"org.matrix.custom.html","body":"Marshall: I was about to implement a new decode function that would return nested arguments. Then I realised that having `2 decode 2 3` return `(1 1) (1 0 0)` would be annoying, since `⊃ 2 decode 2 3` would then fill with zeroes on the wrong side.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@mlochbaum:matrix.org\">Marshall<\/a>: I was about to implement a new decode function that would return nested arguments. Then I realised that having <code>2 decode 2 3<\/code> return <code>(1 1) (1 0 0)<\/code> would be annoying, since <code>⊃ 2 decode 2 3<\/code> would then fill with zeroes on the wrong side."}}
{"origin_server_ts":1723299230733,"event_id":"$JDUWmM8TJLRrHW-89AutIBjpdLq3p9KDNlyEiAqmnQ0","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"I guess I could implement monadic `⊇` to disclose but with the fill element on the left (i.e. like `⌽ ⊃ ⌽¨`)","msgtype":"m.text","formatted_body":"I guess I could implement monadic <code>⊇<\/code> to disclose but with the fill element on the left (i.e. like <code>⌽ ⊃ ⌽¨<\/code>)"}}
{"origin_server_ts":1723299547923,"event_id":"$-XZ_Urak7L48SRi-TwXZSKEwnjPaIBFXf9OlylpiWaE","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Or flip the endianness that decode and encode take and return","msgtype":"m.text","formatted_body":"Or flip the endianness that decode and encode take and return"}}
{"origin_server_ts":1723299635643,"event_id":"$BmndVv8jtpSEOOEIPPC2zfgCVlecOydJnvTmdbrdnzM","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{"user_ids":["@_discord_239772388747640841:t2bot.io"]},"format":"org.matrix.custom.html","body":"krftdnr: I could, but that's less useful.","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@_discord_239772388747640841:t2bot.io\">krftdnr<\/a>: I could, but that's less useful."}}
{"origin_server_ts":1723300259273,"event_id":"$GTjOjVdiCz9rgE4Z7dXAUkm5fr9-xNw_HVKlmPG8Opc","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Problem is that shapes are big-endian. The ordering question is one of many reasons why they're not BQN primitives.","msgtype":"m.text","formatted_body":"Problem is that shapes are big-endian. The ordering question is one of many reasons why they're not BQN primitives."}}
{"origin_server_ts":1723300466870,"event_id":"$WKm99Wj4dbSX7kot-1S0SsvDfJiMvAGUnBYel7XGA6Q","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"I'd call the shapes little endian (most significant on the right). But I see what you mean.","msgtype":"m.text"}}
{"origin_server_ts":1723300932685,"event_id":"$1KXLFcIf-VBiuVtwdnBsIR0p7IcfcaZY_IFmKhriYSI","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"Indices are big-endian, this is not up to interpretation. Index `4 5 6` in a shape `10 10 10` array refers to element 456 in the ravel.","msgtype":"m.text","formatted_body":"Indices are big-endian, this is not up to interpretation. Index <code>4 5 6<\/code> in a shape <code>10 10 10<\/code> array refers to element 456 in the ravel."}}
{"origin_server_ts":1723300993473,"event_id":"$ozY83xCP4kmNjfNVLZ3ywlZmXnbJJiZwnuRa0M5Fefo","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"format":"org.matrix.custom.html","body":"The indexes, yes. But the shape when you do `⊃` adds on the right, which makes it kinda little endian.","msgtype":"m.text","formatted_body":"The indexes, yes. But the shape when you do <code>⊃<\/code> adds on the right, which makes it kinda little endian."}}
{"origin_server_ts":1723301089780,"event_id":"$1yGLQSKpLTjXDt0Y2MEy5sGUFBvc17Oxw5W8ZiF3ViY","sender":"@mlochbaum:matrix.org","user_id":"@mlochbaum:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"It concatenates the inner and outer shapes, I don't think it makes sense to say that's directed either way.","msgtype":"m.text","formatted_body":"It concatenates the inner and outer shapes, I don't think it makes sense to say that's directed either way."}}
{"origin_server_ts":1723301226579,"event_id":"$Ajj620OR6VP8LGMxVAfWgqZkvMJR1p7Fv5qTd165_QU","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.mentions":{},"body":"That's fair.","msgtype":"m.text"}}
{"origin_server_ts":1723311614512,"event_id":"$-twLoSFGnE2pPP34KsC6UiaD_kt1LQkFz0ii5n9B_wE","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$2Z0M9jva-DRQCzr2aWynt5RbAn-ZJASb-qrqQihxWEs"}},"format":"org.matrix.custom.html","body":"You could make bitlength `⍟∵`","msgtype":"m.text","formatted_body":"You could make bitlength <code>⍟∵<\/code>"}}
{"origin_server_ts":1723314328003,"event_id":"$qK4Hpe8_7b1nwDapbBz-pHWWh8EAdGVUu8F2CLBq9ls","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"kinda think I want compress and dilate from n2k","msgtype":"m.text","formatted_body":"kinda think I want compress and dilate from n2k"}}
{"origin_server_ts":1723314409813,"event_id":"$bIsoHwMFwRzWdt2tCqLqD9DII2VuNtuC2mrWgr2BXLo","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"guess they're just `⊕⍆⍤1` and `⦅ℜ⋄⍮⋄ℑ⦆⍤0`","msgtype":"m.text","formatted_body":"guess they&#x27;re just <code>⊕⍆⍤1<\/code> and <code>⦅ℜ⋄⍮⋄ℑ⦆⍤0<\/code>"}}
{"origin_server_ts":1723314423836,"event_id":"$iQdnEMbLgtXHdr9rIPId6zMwnj7jwxpHXcz8DJ7GvXM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"so maybe not that useful?","msgtype":"m.text","formatted_body":"so maybe not that useful?"}}
{"origin_server_ts":1723314432791,"event_id":"$ssOK7cwMc4WKsUzorxvwhaGd1cBjrmVKG3ya7cCWTQA","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but they seem like nice primitive","msgtype":"m.text","formatted_body":"but they seem like nice primitive"}}
{"origin_server_ts":1723314439001,"event_id":"$q-porONmH1jr63BPrXFYrB4VTl6cDP3K6mETgAMWcis","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"kinda think I want condense and dilate from n2k","msgtype":"m.text","formatted_body":"kinda think I want condense and dilate from n2k"},"m.relates_to":{"event_id":"$qK4Hpe8_7b1nwDapbBz-pHWWh8EAdGVUu8F2CLBq9ls","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* kinda think I want condense and dilate from n2k","msgtype":"m.text","formatted_body":"* kinda think I want condense and dilate from n2k"}}
{"origin_server_ts":1723314444381,"event_id":"$m1XrLf5sq8nyTUzQatzx02-z5SJQrh2XjATKo5x0B3I","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"glyphs are an issue","msgtype":"m.text","formatted_body":"glyphs are an issue"}}
{"origin_server_ts":1723314451595,"event_id":"$pEtovjJsR7fAAcLkOrwqIs039GwGLbk-ziRRqwOHwHY","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"i don't think i like n2k's `<` and `>`","msgtype":"m.text","formatted_body":"i don&#x27;t think i like n2k&#x27;s <code>&lt;<\/code> and <code>&gt;<\/code>"}}
{"origin_server_ts":1723314719355,"event_id":"$gZttVWLvwSBKkjS4amAStflbHYVyHGKdQ0URyvQWwe0","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"They get more useful once you have the hypercomplexes","msgtype":"m.text","formatted_body":"They get more useful once you have the hypercomplexes"}}
{"origin_server_ts":1723314739388,"event_id":"$k6svvzJdWfCLXLgZU4rfIzqqvM2CrK6FECEUPBoD9R8","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"yeah defn","msgtype":"m.text","formatted_body":"yeah defn"}}
{"origin_server_ts":1723314748567,"event_id":"$arK16ZTFA317GXp9vh5gCtvGsk5bIqbnnGUBNEedo5E","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"yeah definitely","msgtype":"m.text","formatted_body":"yeah definitely"},"m.relates_to":{"event_id":"$k6svvzJdWfCLXLgZU4rfIzqqvM2CrK6FECEUPBoD9R8","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* yeah definitely","msgtype":"m.text","formatted_body":"* yeah definitely"}}
{"origin_server_ts":1723334755860,"event_id":"$qxyPeRn1tg7HJPhN9JFke3RH0ys-JfK-TiVR0Jd2ZUU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"vectorization is definitely very low on the list of priorities, I first want to do \"easy\" optimizations like specialized array types","msgtype":"m.text","formatted_body":"vectorization is definitely very low on the list of priorities, I first want to do &quot;easy&quot; optimizations like specialized array types"}}
{"origin_server_ts":1723334772988,"event_id":"$HnL6L7qSL3QxSCQyiIvE2J0X8qcoJz56thDWYjMTINU","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"and even that I'm not sure I'll do soon","msgtype":"m.text","formatted_body":"and even that I&#x27;m not sure I&#x27;ll do soon"}}
{"origin_server_ts":1723334788070,"event_id":"$Uyr8v2-uvNwjA-niRGiBi12Doq8FbhOhayalDw6xhLM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"(of course if llvm can do vectors by itself that's nice!)","msgtype":"m.text","formatted_body":"(of course if llvm can do vectors by itself that&#x27;s nice!)"}}
{"origin_server_ts":1723334805257,"event_id":"$zpuIE9GpOVGTT_Lo4C99qnxXpARu8oDTZt6I1nKrUyM","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"but I'm not gonna go use ghc prim vectorization stuff anytime soon","msgtype":"m.text","formatted_body":"but I&#x27;m not gonna go use ghc prim vectorization stuff anytime soon"}}
{"origin_server_ts":1723334875865,"event_id":"$nj7ohKZdtpfVrpoMJvbLvlzEQmYZyWCiwHCe6Bo79xE","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"there seem to be very few resources about ghc wasm in general, is it just new or is it unused?","msgtype":"m.text","formatted_body":"there seem to be very few resources about ghc wasm in general, is it just new or is it unused?"}}
{"origin_server_ts":1723334990681,"event_id":"$FMEI8Vq6FQ40GhQzAvu4FjB3zszfHbzSWAa-D23qpGY","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$nj7ohKZdtpfVrpoMJvbLvlzEQmYZyWCiwHCe6Bo79xE"}},"format":"org.matrix.custom.html","body":"Years all blur together, but I'm pretty sure that it was \"brand new\" around the time of Zurihac last year. Asterius had been around for a while, but getting it into mainline is recent","msgtype":"m.text","formatted_body":"Years all blur together, but I&#x27;m pretty sure that it was &quot;brand new&quot; around the time of Zurihac last year. Asterius had been around for a while, but getting it into mainline is recent"}}
{"origin_server_ts":1723335024379,"event_id":"$TCuI4qbndzuPo-RyGOGF7vzGoc-peyBU17koiWXbcSs","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"remember trying to use asterius a while back but had some issues, I think the main one was that the image was too big to download(:","msgtype":"m.text","formatted_body":"remember trying to use asterius a while back but had some issues, I think the main one was that the image was too big to download(:"}}
{"origin_server_ts":1723335041972,"event_id":"$2OvWBRS45Kk4xOU3BqtIbnJXB0yIvLtd4Gto2B4bGpQ","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"a thing CBQN had going for it is that the NaN-boxing means that floats are effectively unboxed in generic arrays; presumably that'd be rather impossible in haskell, and isn't gonna work for complex numbers anyway","msgtype":"m.text","formatted_body":"a thing CBQN had going for it is that the NaN-boxing means that floats are effectively unboxed in generic arrays; presumably that'd be rather impossible in haskell, and isn't gonna work for complex numbers anyway"}}
{"origin_server_ts":1723335233204,"event_id":"$q27SqJUle83_tK5K_cDVGFtgO27DsaQ_X6oorAporaA","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"I haven't looked too closely into CBQN's implementation. Is NaN-boxing something bizarre like turning doubles into references by encoding locations in the signalling bits, or is my imagination running away from me?","msgtype":"m.text","formatted_body":"I haven&#x27;t looked too closely into CBQN&#x27;s implementation. Is NaN-boxing something bizarre like turning doubles into references by encoding locations in the signalling bits, or is my imagination running away from me?"}}
{"origin_server_ts":1723335316583,"event_id":"$Rb3VAnAPKenJFnbGqhQOGfrzepmGFatLcbTWjBtfnG8","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"it's packing pointers (& characters) in the space of signaling NaNs ([comment block](https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195))","msgtype":"m.text","formatted_body":"it's packing pointers (&amp; characters) in the space of signaling NaNs (<a href=\"https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195\">comment block<\/a>)"}}
{"origin_server_ts":1723335339447,"event_id":"$QxC4Q_pxGOYMdXJwHRe-EjNWKHTKjwCiXOp9_zpVfOU","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"yeah; packing pointers (& characters, and some other things) in the space of signaling NaNs ([comment block](https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195))","msgtype":"m.text","formatted_body":"yeah; packing pointers (&amp; characters, and some other things) in the space of signaling NaNs (<a href=\"https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195\">comment block<\/a>)"},"m.relates_to":{"event_id":"$Rb3VAnAPKenJFnbGqhQOGfrzepmGFatLcbTWjBtfnG8","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* yeah; packing pointers (& characters, and some other things) in the space of signaling NaNs ([comment block](https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195))","msgtype":"m.text","formatted_body":"* yeah; packing pointers (&amp; characters, and some other things) in the space of signaling NaNs (<a href=\"https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195\">comment block<\/a>)"}}
{"origin_server_ts":1723335486256,"event_id":"$r6xu3Ub9oaHe7xuVLuNGF3W9IniO79gtvpbrPchY57I","sender":"@dzaima:matrix.org","user_id":"@dzaima:matrix.org","type":"m.room.message","content":{"m.new_content":{"format":"org.matrix.custom.html","body":"yeah; packing pointers (and characters, and some other things) in the space of signaling NaNs ([comment block](https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195))","msgtype":"m.text","formatted_body":"yeah; packing pointers (and characters, and some other things) in the space of signaling NaNs (<a href=\"https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195\">comment block<\/a>)"},"m.relates_to":{"event_id":"$Rb3VAnAPKenJFnbGqhQOGfrzepmGFatLcbTWjBtfnG8","rel_type":"m.replace"},"format":"org.matrix.custom.html","body":"* yeah; packing pointers (and characters, and some other things) in the space of signaling NaNs ([comment block](https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195))","msgtype":"m.text","formatted_body":"* yeah; packing pointers (and characters, and some other things) in the space of signaling NaNs (<a href=\"https://github.com/dzaima/CBQN/blob/315ab8563a8e4755cd03f5c2b6cc2132ed933976/src/h.h#L180-L195\">comment block<\/a>)"}}
{"origin_server_ts":1723335529506,"event_id":"$X8SjLHKWo6nqA88YdLKk7dgZs-aCbAOqADyY32tReKY","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"A main target of Uiua is webassembly also, it seems to mostly focuses on adding optimizations for idioms that are common, but would be inefficient without the optimization.","msgtype":"m.text","formatted_body":"A main target of Uiua is webassembly also, it seems to mostly focuses on adding optimizations for idioms that are common, but would be inefficient without the optimization."}}
{"origin_server_ts":1723335619142,"event_id":"$sigeK4A4SUYGr8RwZHacNlHT8KUuyZ_0Vkwv4qvntEY","sender":"@_discord_239772388747640841:t2bot.io","user_id":"@_discord_239772388747640841:t2bot.io","type":"m.room.message","content":{"format":"org.matrix.custom.html","body":"If you go that route should definitely have it for scanning.","msgtype":"m.text","formatted_body":"If you go that route should definitely have it for scanning."}}
{"origin_server_ts":1723335777944,"event_id":"$cevZS7h4ghCo2UjVTIKAE7wt40xgHB-s47pN2crLmTg","sender":"@_discord_604614910030118912:t2bot.io","user_id":"@_discord_604614910030118912:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$X8SjLHKWo6nqA88YdLKk7dgZs-aCbAOqADyY32tReKY"}},"format":"org.matrix.custom.html","body":"also planned, though I'm having some issues with how to actually do that in code (circular module dependencies is my current problem)","msgtype":"m.text","formatted_body":"also planned, though I&#x27;m having some issues with how to actually do that in code (circular module dependencies is my current problem)"}}
{"origin_server_ts":1723335901681,"event_id":"$ee4JSwh40-2Q6l9WSNu20mmcyTT7hhzlisJ5V0c1wUk","sender":"@_discord_160673472530350080:t2bot.io","user_id":"@_discord_160673472530350080:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$2OvWBRS45Kk4xOU3BqtIbnJXB0yIvLtd4Gto2B4bGpQ"}},"format":"org.matrix.custom.html","body":"Garbage collection is what's going to stop you naively doing that in Haskell. Firstly, the run time will lose track of it, secondly (by default), it's a moving GC, so what you should be pointing at is going to move. If the interpreter managed its own memory for APL arrays, instead of relying on GHC, you could do that, albeit at the cost of another indirection","msgtype":"m.text","formatted_body":"Garbage collection is what&#x27;s going to stop you naively doing that in Haskell. Firstly, the run time will lose track of it, secondly (by default), it&#x27;s a moving GC, so what you should be pointing at is going to move. If the interpreter managed its own memory for APL arrays, instead of relying on GHC, you could do that, albeit at the cost of another indirection"}}
{"origin_server_ts":1723335976918,"event_id":"$NL-abRrLQQHrFp5MlIYIY-BIKanRiKRxqUsYsvv8Bno","sender":"@_discord_136899955574046721:t2bot.io","user_id":"@_discord_136899955574046721:t2bot.io","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$ee4JSwh40-2Q6l9WSNu20mmcyTT7hhzlisJ5V0c1wUk"}},"format":"org.matrix.custom.html","body":"yeah, makes sense; and with a custom memory manager you'd need to also do a custom GC","msgtype":"m.text","formatted_body":"yeah, makes sense; and with a custom memory manager you&#x27;d need to also do a custom GC"}}
{"origin_server_ts":1723347694383,"event_id":"$eiN625GluRuh4pvw2N4VjuDc10z0_vtzs0paRahhCBY","sender":"@loke:dhsdevelopments.com","user_id":"@loke:dhsdevelopments.com","type":"m.room.message","content":{"m.relates_to":{"m.in_reply_to":{"event_id":"$-twLoSFGnE2pPP34KsC6UiaD_kt1LQkFz0ii5n9B_wE"}},"format":"org.matrix.custom.html","body":"> <@_discord_239772388747640841:t2bot.io> You could make bitlength `⍟∵`\n\nOh. That's not bad","msgtype":"m.text","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WpdazzauuDxyGNAiCr:matrix.org/$-twLoSFGnE2pPP34KsC6UiaD_kt1LQkFz0ii5n9B_wE?via=dhsdevelopments.com&via=t2bot.io&via=matrix.org\">In reply to<\/a> <a href=\"https://matrix.to/#/@_discord_239772388747640841:t2bot.io\">@_discord_239772388747640841:t2bot.io<\/a><br />You could make bitlength <code>⍟∵<\/code><\/blockquote><\/mx-reply>Oh. That's not bad"}}
s5155856040_757284974_10668924_3047294464_3275672899_250788831_514751516_10991303393_0_323369
